# This file was auto generated by styx
# Do not edit this file directly

import typing

from ..styxdefs import *


CIFTI_MERGE_PARCELS_METADATA = Metadata(
    id="6c9e9ae4a6eea95f122e8846c4b386fde3cae657",
    name="cifti-merge-parcels",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class CiftiMergeParcelsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `cifti_merge_parcels(...)`.
    """
    cifti_out: OutputPathType
    """the output cifti file"""


def cifti_merge_parcels(
    runner: Runner,
    direction: str,
    cifti_out: InputPathType,
    opt_cifti_cifti_in: InputPathType | None = None,
) -> CiftiMergeParcelsOutputs:
    """
    MERGE CIFTI FILES ALONG PARCELS DIMENSION.
    
    The input cifti files must have matching mappings along the direction not
    specified, and the mapping along the specified direction must be parcels.
    The direction can be either an integer starting from 1, or the strings 'ROW'
    or 'COLUMN'.
    
    Args:
        runner: Command runner
        direction: which dimension to merge along (integer, 'ROW', or 'COLUMN')
        cifti_out: the output cifti file
        opt_cifti_cifti_in: specify an input cifti file: a cifti file to merge
    Returns:
        NamedTuple of outputs (described in `CiftiMergeParcelsOutputs`).
    """
    execution = runner.start_execution(CIFTI_MERGE_PARCELS_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-cifti-merge-parcels")
    cargs.append(direction)
    cargs.append(execution.input_file(cifti_out))
    if opt_cifti_cifti_in is not None:
        cargs.extend(["-cifti", execution.input_file(opt_cifti_cifti_in)])
    ret = CiftiMergeParcelsOutputs(
        cifti_out=execution.output_file(f"{cifti_out}"),
    )
    execution.run(cargs)
    return ret
