# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:56.007428

import typing

from ..styxdefs import *


CIFTI_PAIRWISE_CORRELATION_METADATA = Metadata(
    id="865d19b2feb66f167d95f9bb04470d39ceac203d",
    name="cifti-pairwise-correlation",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class CiftiPairwiseCorrelationOutputs(typing.NamedTuple):
    """
    Output object returned when calling `cifti_pairwise_correlation(...)`.
    """
    cifti_out: OutputPathType
    """output cifti file"""


def cifti_pairwise_correlation(
    runner: Runner,
    cifti_a: InputPathType,
    cifti_b: InputPathType,
    cifti_out: InputPathType,
    opt_fisher_z: bool = False,
    opt_override_mapping_check: bool = False,
) -> CiftiPairwiseCorrelationOutputs:
    """
    CORRELATE PAIRED ROWS BETWEEN TWO CIFTI FILES.
    
    For each row in <cifti-a>, correlate it with the same row in <cifti-b>, and
    put the result in the same row of <cifti-out>, which has only one column.
    
    Args:
        runner: Command runner
        cifti_a: first input cifti file
        cifti_b: second input cifti file
        cifti_out: output cifti file
        opt_fisher_z: apply fisher small z transform (ie, artanh) to correlation
        opt_override_mapping_check: don't check the mappings for compatibility,
            only check length
    Returns:
        NamedTuple of outputs (described in `CiftiPairwiseCorrelationOutputs`).
    """
    execution = runner.start_execution(CIFTI_PAIRWISE_CORRELATION_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-cifti-pairwise-correlation")
    cargs.append(execution.input_file(cifti_a))
    cargs.append(execution.input_file(cifti_b))
    cargs.append(execution.input_file(cifti_out))
    if opt_fisher_z:
        cargs.append("-fisher-z")
    if opt_override_mapping_check:
        cargs.append("-override-mapping-check")
    ret = CiftiPairwiseCorrelationOutputs(
        cifti_out=execution.output_file(f"{cifti_out}"),
    )
    execution.run(cargs)
    return ret
