# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T19:06:12.718500

import typing

from ..styxdefs import *


VOLUME_LABEL_PROBABILITY_METADATA = Metadata(
    id="c8dfd3fc9b1a0d8f4a9f31c224e65af21e0d10b3",
    name="volume-label-probability",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class VolumeLabelProbabilityOutputs(typing.NamedTuple):
    """
    Output object returned when calling `volume_label_probability(...)`.
    """
    probability_out: OutputPathType
    """the relative frequencies of each label at each voxel"""


def volume_label_probability(
    runner: Runner,
    label_maps: InputPathType,
    probability_out: InputPathType,
    opt_exclude_unlabeled: bool = False,
) -> VolumeLabelProbabilityOutputs:
    """
    FIND FREQUENCY OF VOLUME LABELS.
    
    This command outputs a set of soft ROIs, one for each label in the input,
    where the value is how many of the input maps had that label at that voxel,
    divided by the number of input maps.
    
    Args:
        runner: Command runner
        label_maps: volume label file containing individual label maps from many
            subjects
        probability_out: the relative frequencies of each label at each voxel
        opt_exclude_unlabeled: don't make a probability map of the unlabeled key
    Returns:
        NamedTuple of outputs (described in `VolumeLabelProbabilityOutputs`).
    """
    execution = runner.start_execution(VOLUME_LABEL_PROBABILITY_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-volume-label-probability")
    cargs.append(execution.input_file(label_maps))
    cargs.append(execution.input_file(probability_out))
    if opt_exclude_unlabeled:
        cargs.append("-exclude-unlabeled")
    ret = VolumeLabelProbabilityOutputs(
        probability_out=execution.output_file(f"{probability_out}"),
    )
    execution.run(cargs)
    return ret
