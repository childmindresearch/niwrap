# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:56:52.703995

import typing

from ..styxdefs import *


LABEL_DILATE_METADATA = Metadata(
    id="bbcfd5742b8f0dd7bf37ff905fbd1385e71671e5",
    name="label-dilate",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class LabelDilateOutputs(typing.NamedTuple):
    """
    Output object returned when calling `label_dilate(...)`.
    """
    label_out: OutputPathType
    """the output label file"""


def label_dilate(
    runner: Runner,
    label: InputPathType,
    surface: InputPathType,
    dilate_dist: float | int,
    label_out: InputPathType,
    opt_bad_vertex_roi_roi_metric: InputPathType | None = None,
    opt_column_column: str | None = None,
    opt_corrected_areas_area_metric: InputPathType | None = None,
) -> LabelDilateOutputs:
    """
    DILATE A LABEL FILE.
    
    Fills in label information for all vertices designated as bad, up to the
    specified distance away from other labels. If -bad-vertex-roi is specified,
    all vertices, including those with the unlabeled key, are good, except for
    vertices with a positive value in the ROI. If it is not specified, only
    vertices with the unlabeled key are bad.
    
    Args:
        runner: Command runner
        label: the input label
        surface: the surface to dilate on
        dilate_dist: distance in mm to dilate the labels
        label_out: the output label file
        opt_bad_vertex_roi_roi_metric: specify an roi of vertices to overwrite,
            rather than vertices with the unlabeled key: metric file, positive
            values denote vertices to have their values replaced
        opt_column_column: select a single column to dilate: the column number
            or name
        opt_corrected_areas_area_metric: vertex areas to use instead of
            computing them from the surface: the corrected vertex areas, as a metric
    Returns:
        NamedTuple of outputs (described in `LabelDilateOutputs`).
    """
    execution = runner.start_execution(LABEL_DILATE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-label-dilate")
    cargs.append(execution.input_file(label))
    cargs.append(execution.input_file(surface))
    cargs.append(str(dilate_dist))
    cargs.append(execution.input_file(label_out))
    if opt_bad_vertex_roi_roi_metric is not None:
        cargs.extend(["-bad-vertex-roi", execution.input_file(opt_bad_vertex_roi_roi_metric)])
    if opt_column_column is not None:
        cargs.extend(["-column", opt_column_column])
    if opt_corrected_areas_area_metric is not None:
        cargs.extend(["-corrected-areas", execution.input_file(opt_corrected_areas_area_metric)])
    ret = LabelDilateOutputs(
        label_out=execution.output_file(f"{label_out}"),
    )
    execution.run(cargs)
    return ret
