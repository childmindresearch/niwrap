# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.855571

import typing

from ..styxdefs import *


CIFTI_CROSS_CORRELATION_METADATA = Metadata(
    id="f9ea2a33df4edc037bd4eeef3deb2cf147d06eed",
    name="cifti-cross-correlation",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class CiftiCrossCorrelationOutputs(typing.NamedTuple):
    """
    Output object returned when calling `cifti_cross_correlation(...)`.
    """
    cifti_out: OutputPathType
    """output cifti file"""


def cifti_cross_correlation(
    runner: Runner,
    cifti_a: InputPathType,
    cifti_b: InputPathType,
    cifti_out: InputPathType,
    opt_weights_weight_file: str | None = None,
    opt_fisher_z: bool = False,
    opt_mem_limit_limit_gb: float | int | None = None,
) -> CiftiCrossCorrelationOutputs:
    """
    CORRELATE A CIFTI FILE WITH ANOTHER CIFTI FILE.
    
    Correlates every row in <cifti-a> with every row in <cifti-b>. The mapping
    along columns in <cifti-b> becomes the mapping along rows in the output.
    
    When using the -fisher-z option, the output is NOT a Z-score, it is
    artanh(r), to do further math on this output, consider using -cifti-math.
    
    Restricting the memory usage will make it calculate the output in chunks, by
    reading through <cifti-b> multiple times.
    
    Args:
        runner: Command runner
        cifti_a: first input cifti file
        cifti_b: second input cifti file
        cifti_out: output cifti file
        opt_weights_weight_file: specify column weights: text file containing
            one weight per column
        opt_fisher_z: apply fisher small z transform (ie, artanh) to correlation
        opt_mem_limit_limit_gb: restrict memory usage: memory limit in gigabytes
    Returns:
        NamedTuple of outputs (described in `CiftiCrossCorrelationOutputs`).
    """
    execution = runner.start_execution(CIFTI_CROSS_CORRELATION_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-cifti-cross-correlation")
    cargs.append(execution.input_file(cifti_a))
    cargs.append(execution.input_file(cifti_b))
    cargs.append(execution.input_file(cifti_out))
    if opt_weights_weight_file is not None:
        cargs.extend(["-weights", opt_weights_weight_file])
    if opt_fisher_z:
        cargs.append("-fisher-z")
    if opt_mem_limit_limit_gb is not None:
        cargs.extend(["-mem-limit", str(opt_mem_limit_limit_gb)])
    ret = CiftiCrossCorrelationOutputs(
        cifti_out=execution.output_file(f"{cifti_out}"),
    )
    execution.run(cargs)
    return ret
