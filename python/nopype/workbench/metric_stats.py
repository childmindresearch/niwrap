# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.852244

import typing

from ..styxdefs import *


METRIC_STATS_METADATA = Metadata(
    id="ff4f0562f76070ca2cc9ed22f88090ce6db81b47",
    name="metric-stats",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class MetricStatsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `metric_stats(...)`.
    """


def metric_stats(
    runner: Runner,
    metric_in: InputPathType,
    opt_reduce_operation: str | None = None,
    opt_percentile_percent: float | int | None = None,
    opt_column_column: str | None = None,
    opt_roi_roi_metric: InputPathType | None = None,
    opt_show_map_name: bool = False,
) -> MetricStatsOutputs:
    """
    SPATIAL STATISTICS ON A METRIC FILE.
    
    For each column of the input, a line of text is printed, resulting from the
    specified reduction or percentile operation. Use -column to only give output
    for a single column. If the -roi option is used without -match-maps, then
    each line will contain as many numbers as there are maps in the ROI file,
    separated by tab characters. Exactly one of -reduce or -percentile must be
    specified.
    
    The argument to the -reduce option must be one of the following:
    
    MAX: the maximum value
    MIN: the minimum value
    INDEXMAX: the 1-based index of the maximum value
    INDEXMIN: the 1-based index of the minimum value
    SUM: add all values
    PRODUCT: multiply all values
    MEAN: the mean of the data
    STDEV: the standard deviation (N denominator)
    SAMPSTDEV: the sample standard deviation (N-1 denominator)
    VARIANCE: the variance of the data
    TSNR: mean divided by sample standard deviation (N-1 denominator)
    COV: sample standard deviation (N-1 denominator) divided by mean
    L2NORM: square root of sum of squares
    MEDIAN: the median of the data
    MODE: the mode of the data
    COUNT_NONZERO: the number of nonzero elements in the data
    
    Args:
        runner: Command runner
        metric_in: the input metric
        opt_reduce_operation: use a reduction operation: the reduction operation
        opt_percentile_percent: give the value at a percentile: the percentile
            to find, must be between 0 and 100
        opt_column_column: only display output for one column: the column number
            or name
        opt_roi_roi_metric: only consider data inside an roi: the roi, as a
            metric file
        opt_show_map_name: print map index and name before each output
    Returns:
        NamedTuple of outputs (described in `MetricStatsOutputs`).
    """
    execution = runner.start_execution(METRIC_STATS_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-metric-stats")
    cargs.append(execution.input_file(metric_in))
    if opt_reduce_operation is not None:
        cargs.extend(["-reduce", opt_reduce_operation])
    if opt_percentile_percent is not None:
        cargs.extend(["-percentile", str(opt_percentile_percent)])
    if opt_column_column is not None:
        cargs.extend(["-column", opt_column_column])
    if opt_roi_roi_metric is not None:
        cargs.extend(["-roi", execution.input_file(opt_roi_roi_metric)])
    if opt_show_map_name:
        cargs.append("-show-map-name")
    ret = MetricStatsOutputs(
    )
    execution.run(cargs)
    return ret
