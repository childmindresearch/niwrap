# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T19:06:12.850496

import typing

from ..styxdefs import *


METRIC_MERGE_METADATA = Metadata(
    id="d9d2902290322f772d79a46dcdd48509e23f9968",
    name="metric-merge",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class MetricMergeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `metric_merge(...)`.
    """
    metric_out: OutputPathType
    """the output metric"""


def metric_merge(
    runner: Runner,
    metric_out: InputPathType,
    opt_metric_metric_in: InputPathType | None = None,
) -> MetricMergeOutputs:
    """
    MERGE METRIC FILES INTO A NEW FILE.
    
    Takes one or more metric files and constructs a new metric file by
    concatenating columns from them. The input metric files must have the same
    number of vertices and same structure.
    
    Example: wb_command -metric-merge out.func.gii -metric first.func.gii
    -column 1 -metric second.func.gii
    
    This example would take the first column from first.func.gii, followed by
    all columns from second.func.gii, and write these columns to out.func.gii.
    
    Args:
        runner: Command runner
        metric_out: the output metric
        opt_metric_metric_in: specify an input metric: a metric file to use
            columns from
    Returns:
        NamedTuple of outputs (described in `MetricMergeOutputs`).
    """
    execution = runner.start_execution(METRIC_MERGE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-metric-merge")
    cargs.append(execution.input_file(metric_out))
    if opt_metric_metric_in is not None:
        cargs.extend(["-metric", execution.input_file(opt_metric_metric_in)])
    ret = MetricMergeOutputs(
        metric_out=execution.output_file(f"{metric_out}"),
    )
    execution.run(cargs)
    return ret
