# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.937374

import typing

from ..styxdefs import *


VOLUME_FILL_HOLES_METADATA = Metadata(
    id="3c728e75439929ad671e52c71eab3757a887720f",
    name="volume-fill-holes",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class VolumeFillHolesOutputs(typing.NamedTuple):
    """
    Output object returned when calling `volume_fill_holes(...)`.
    """
    volume_out: OutputPathType
    """the output ROI volume"""


def volume_fill_holes(
    runner: Runner,
    volume_in: InputPathType,
    volume_out: InputPathType,
) -> VolumeFillHolesOutputs:
    """
    FILL HOLES IN AN ROI VOLUME.
    
    Finds all face-connected parts that are not included in the ROI, and fills
    all but the largest one with ones.
    
    Args:
        runner: Command runner
        volume_in: the input ROI volume
        volume_out: the output ROI volume
    Returns:
        NamedTuple of outputs (described in `VolumeFillHolesOutputs`).
    """
    execution = runner.start_execution(VOLUME_FILL_HOLES_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-volume-fill-holes")
    cargs.append(execution.input_file(volume_in))
    cargs.append(execution.input_file(volume_out))
    ret = VolumeFillHolesOutputs(
        volume_out=execution.output_file(f"{volume_out}"),
    )
    execution.run(cargs)
    return ret
