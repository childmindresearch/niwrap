# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T19:06:12.776384

import typing

from ..styxdefs import *


VOLUME_LABEL_TO_ROI_METADATA = Metadata(
    id="81610189040429807ca3a4c1c02803de848ef274",
    name="volume-label-to-roi",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class VolumeLabelToRoiOutputs(typing.NamedTuple):
    """
    Output object returned when calling `volume_label_to_roi(...)`.
    """
    volume_out: OutputPathType
    """the output volume file"""


def volume_label_to_roi(
    runner: Runner,
    label_in: InputPathType,
    volume_out: InputPathType,
    opt_name_label_name: str | None = None,
    opt_key_label_key: float | int | None = None,
    opt_map_map: str | None = None,
) -> VolumeLabelToRoiOutputs:
    """
    MAKE A VOLUME LABEL INTO AN ROI VOLUME.
    
    For each map in <label-in>, a map is created in <volume-out> where all
    locations labeled with <label-name> or with a key of <label-key> are given a
    value of 1, and all other locations are given 0. Exactly one of -name and
    -key must be specified. Specify -map to use only one map from <label-in>.
    
    Args:
        runner: Command runner
        label_in: the input volume label file
        volume_out: the output volume file
        opt_name_label_name: select label by name: the label name that you want
            an roi of
        opt_key_label_key: select label by key: the label key that you want an
            roi of
        opt_map_map: select a single label map to use: the map number or name
    Returns:
        NamedTuple of outputs (described in `VolumeLabelToRoiOutputs`).
    """
    execution = runner.start_execution(VOLUME_LABEL_TO_ROI_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-volume-label-to-roi")
    cargs.append(execution.input_file(label_in))
    cargs.append(execution.input_file(volume_out))
    if opt_name_label_name is not None:
        cargs.extend(["-name", opt_name_label_name])
    if opt_key_label_key is not None:
        cargs.extend(["-key", str(opt_key_label_key)])
    if opt_map_map is not None:
        cargs.extend(["-map", opt_map_map])
    ret = VolumeLabelToRoiOutputs(
        volume_out=execution.output_file(f"{volume_out}"),
    )
    execution.run(cargs)
    return ret
