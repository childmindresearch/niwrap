# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.935371

import typing

from ..styxdefs import *


SURFACE_FLIP_NORMALS_METADATA = Metadata(
    id="5e9a5cffd2791171171db2c1f049d5f856af7759",
    name="surface-flip-normals",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class SurfaceFlipNormalsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `surface_flip_normals(...)`.
    """
    surface_out: OutputPathType
    """the output surface"""


def surface_flip_normals(
    runner: Runner,
    surface: InputPathType,
    surface_out: InputPathType,
) -> SurfaceFlipNormalsOutputs:
    """
    FLIP ALL TILES ON A SURFACE.
    
    Flips all triangles on a surface, resulting in surface normals being flipped
    the other direction (inward vs outward). If you transform a surface with an
    affine that has negative determinant, or a warpfield that similarly flips
    the surface, you may end up with a surface that has normals pointing
    inwards, which may have display problems. Using this command will solve that
    problem.
    
    Args:
        runner: Command runner
        surface: the surface to flip the normals of
        surface_out: the output surface
    Returns:
        NamedTuple of outputs (described in `SurfaceFlipNormalsOutputs`).
    """
    execution = runner.start_execution(SURFACE_FLIP_NORMALS_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-surface-flip-normals")
    cargs.append(execution.input_file(surface))
    cargs.append(execution.input_file(surface_out))
    ret = SurfaceFlipNormalsOutputs(
        surface_out=execution.output_file(f"{surface_out}"),
    )
    execution.run(cargs)
    return ret
