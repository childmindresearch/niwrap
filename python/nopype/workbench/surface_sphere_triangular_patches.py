# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:56:52.638260

import typing

from ..styxdefs import *


SURFACE_SPHERE_TRIANGULAR_PATCHES_METADATA = Metadata(
    id="d42f3b9ed36b24587efcd30975bfca8a1bee4ca0",
    name="surface-sphere-triangular-patches",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class SurfaceSphereTriangularPatchesOutputs(typing.NamedTuple):
    """
    Output object returned when calling `surface_sphere_triangular_patches(...)`.
    """


def surface_sphere_triangular_patches(
    runner: Runner,
    sphere: InputPathType,
    divisions: float | int,
    text_out: str,
) -> SurfaceSphereTriangularPatchesOutputs:
    """
    DIVIDE STANDARD SPHERE INTO PATCHES.
    
    Divide the given undistorted sphere into equally-sized triangular patches.
    Patches overlap by a border of 1 vertex.
    
    Args:
        runner: Command runner
        sphere: an undistorted, regularly divided icosahedral sphere
        divisions: how many pieces to divide each icosahedral edge into, must
            divide perfectly into the given sphere
        text_out: output - text file for the vertex numbers of the patches
    Returns:
        NamedTuple of outputs (described in `SurfaceSphereTriangularPatchesOutputs`).
    """
    execution = runner.start_execution(SURFACE_SPHERE_TRIANGULAR_PATCHES_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-surface-sphere-triangular-patches")
    cargs.append(execution.input_file(sphere))
    cargs.append(str(divisions))
    cargs.append(text_out)
    ret = SurfaceSphereTriangularPatchesOutputs(
    )
    execution.run(cargs)
    return ret
