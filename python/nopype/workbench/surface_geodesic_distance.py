# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:56:52.780577

import typing

from ..styxdefs import *


SURFACE_GEODESIC_DISTANCE_METADATA = Metadata(
    id="6787622994b30fed557ffb6f8d06e0714fedfa14",
    name="surface-geodesic-distance",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class SurfaceGeodesicDistanceOutputs(typing.NamedTuple):
    """
    Output object returned when calling `surface_geodesic_distance(...)`.
    """
    metric_out: OutputPathType
    """the output metric"""


def surface_geodesic_distance(
    runner: Runner,
    surface: InputPathType,
    vertex: float | int,
    metric_out: InputPathType,
    opt_naive: bool = False,
    opt_limit_limit_mm: float | int | None = None,
    opt_corrected_areas_area_metric: InputPathType | None = None,
) -> SurfaceGeodesicDistanceOutputs:
    """
    COMPUTE GEODESIC DISTANCE FROM ONE VERTEX TO THE ENTIRE SURFACE.
    
    Unless -limit is specified, computes the geodesic distance from the
    specified vertex to all others. The result is output as a single column
    metric file, with a value of -1 for vertices that the distance was not
    computed for.
    
    The -corrected-areas option should be used when the input is a group average
    surface - group average surfaces have significantly less surface area than
    individual surfaces do, and therefore distances measured on them would be
    smaller than measuring them on individual surfaces. In this case, the input
    to this option should be a group average of the output of
    -surface-vertex-areas for each subject.
    
    If -naive is not specified, the algorithm uses not just immediate neighbors,
    but also neighbors derived from crawling across pairs of triangles that
    share an edge.
    
    Args:
        runner: Command runner
        surface: the surface to compute on
        vertex: the vertex to compute geodesic distance from
        metric_out: the output metric
        opt_naive: use only neighbors, don't crawl triangles (not recommended)
        opt_limit_limit_mm: stop at a certain distance: distance in mm to stop
            at
        opt_corrected_areas_area_metric: vertex areas to use instead of
            computing them from the surface: the corrected vertex areas, as a metric
    Returns:
        NamedTuple of outputs (described in `SurfaceGeodesicDistanceOutputs`).
    """
    execution = runner.start_execution(SURFACE_GEODESIC_DISTANCE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-surface-geodesic-distance")
    cargs.append(execution.input_file(surface))
    cargs.append(str(vertex))
    cargs.append(execution.input_file(metric_out))
    if opt_naive:
        cargs.append("-naive")
    if opt_limit_limit_mm is not None:
        cargs.extend(["-limit", str(opt_limit_limit_mm)])
    if opt_corrected_areas_area_metric is not None:
        cargs.extend(["-corrected-areas", execution.input_file(opt_corrected_areas_area_metric)])
    ret = SurfaceGeodesicDistanceOutputs(
        metric_out=execution.output_file(f"{metric_out}"),
    )
    execution.run(cargs)
    return ret
