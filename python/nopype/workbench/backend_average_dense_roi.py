# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.970646

import typing

from ..styxdefs import *


BACKEND_AVERAGE_DENSE_ROI_METADATA = Metadata(
    id="636c2d8c5fef1ea15715dad85b98f4cfd6a352dc",
    name="backend-average-dense-roi",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class BackendAverageDenseRoiOutputs(typing.NamedTuple):
    """
    Output object returned when calling `backend_average_dense_roi(...)`.
    """


def backend_average_dense_roi(
    runner: Runner,
    index_list: str,
    out_file: str,
) -> BackendAverageDenseRoiOutputs:
    """
    CONNECTOME DB BACKEND COMMAND FOR CIFTI AVERAGE DENSE ROI.
    
    This command is probably not the one you are looking for, try
    -cifti-average-dense-roi. It takes the list of cifti files to average from
    standard input, and writes its output as little endian, 32-bit integer of
    row size followed by the row as 32-bit floats.
    
    Args:
        runner: Command runner
        index_list: comma separated list of cifti indexes to average
        out_file: file to write the average row to
    Returns:
        NamedTuple of outputs (described in `BackendAverageDenseRoiOutputs`).
    """
    execution = runner.start_execution(BACKEND_AVERAGE_DENSE_ROI_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-backend-average-dense-roi")
    cargs.append(index_list)
    cargs.append(out_file)
    ret = BackendAverageDenseRoiOutputs(
    )
    execution.run(cargs)
    return ret
