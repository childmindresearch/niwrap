# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T19:06:12.835881

import typing

from ..styxdefs import *


VOLUME_ESTIMATE_FWHM_METADATA = Metadata(
    id="a7e090a92bdc01f47477bb81e8573b9e7158e53a",
    name="volume-estimate-fwhm",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class VolumeEstimateFwhmOutputs(typing.NamedTuple):
    """
    Output object returned when calling `volume_estimate_fwhm(...)`.
    """


def volume_estimate_fwhm(
    runner: Runner,
    volume: InputPathType,
    opt_roi_roivol: InputPathType | None = None,
    opt_subvolume_subvol: str | None = None,
    opt_whole_file: bool = False,
) -> VolumeEstimateFwhmOutputs:
    """
    ESTIMATE FWHM SMOOTHNESS OF A VOLUME.
    
    Estimates the smoothness of the input volume in X, Y, and Z directions
    separately, printing the estimates to standard output, in mm as FWHM. If
    -subvolume or -whole-file are not specified, each subvolume is estimated and
    displayed separately.
    
    Args:
        runner: Command runner
        volume: the input volume
        opt_roi_roivol: use only data within an ROI: the volume to use as an ROI
        opt_subvolume_subvol: select a single subvolume to estimate smoothness
            of: the subvolume number or name
        opt_whole_file: estimate for the whole file at once, not each subvolume
            separately
    Returns:
        NamedTuple of outputs (described in `VolumeEstimateFwhmOutputs`).
    """
    execution = runner.start_execution(VOLUME_ESTIMATE_FWHM_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-volume-estimate-fwhm")
    cargs.append(execution.input_file(volume))
    if opt_roi_roivol is not None:
        cargs.extend(["-roi", execution.input_file(opt_roi_roivol)])
    if opt_subvolume_subvol is not None:
        cargs.extend(["-subvolume", opt_subvolume_subvol])
    if opt_whole_file:
        cargs.append("-whole-file")
    ret = VolumeEstimateFwhmOutputs(
    )
    execution.run(cargs)
    return ret
