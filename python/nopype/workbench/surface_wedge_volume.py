# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.944139

import typing

from ..styxdefs import *


SURFACE_WEDGE_VOLUME_METADATA = Metadata(
    id="c287d1aa78149f0e35a1d9deb844a02e0705fe1f",
    name="surface-wedge-volume",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class SurfaceWedgeVolumeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `surface_wedge_volume(...)`.
    """
    metric: OutputPathType
    """the output metric"""


def surface_wedge_volume(
    runner: Runner,
    inner_surface: InputPathType,
    outer_surface: InputPathType,
    metric: InputPathType,
) -> SurfaceWedgeVolumeOutputs:
    """
    MEASURE PER-VERTEX VOLUME BETWEEN SURFACES.
    
    Compute the volume of each vertex's area from one surface to another. The
    surfaces must have vertex correspondence, and have consistent triangle
    orientation.
    
    Args:
        runner: Command runner
        inner_surface: the inner surface
        outer_surface: the outer surface
        metric: the output metric
    Returns:
        NamedTuple of outputs (described in `SurfaceWedgeVolumeOutputs`).
    """
    execution = runner.start_execution(SURFACE_WEDGE_VOLUME_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-surface-wedge-volume")
    cargs.append(execution.input_file(inner_surface))
    cargs.append(execution.input_file(outer_surface))
    cargs.append(execution.input_file(metric))
    ret = SurfaceWedgeVolumeOutputs(
        metric=execution.output_file(f"{metric}"),
    )
    execution.run(cargs)
    return ret
