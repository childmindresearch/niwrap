# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:56:52.671343

import typing

from ..styxdefs import *


ZIP_SPEC_FILE_METADATA = Metadata(
    id="15613ccc083a0633203b5dc33f944d4cd7b6b539",
    name="zip-spec-file",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class ZipSpecFileOutputs(typing.NamedTuple):
    """
    Output object returned when calling `zip_spec_file(...)`.
    """


def zip_spec_file(
    runner: Runner,
    spec_file: str,
    extract_folder: str,
    zip_file: str,
    opt_base_dir_directory: str | None = None,
    opt_skip_missing: bool = False,
) -> ZipSpecFileOutputs:
    """
    ZIP A SPEC FILE AND ITS DATA FILES.
    
    If zip-file already exists, it will be overwritten. If -base-dir is not
    specified, the directory containing the spec file is used for the base
    directory. The spec file must contain only relative paths, and no data files
    may be outside the base directory. Scene files inside spec files are not
    checked for what files they reference, ensure that all data files referenced
    by the scene files are also referenced by the spec file.
    
    Args:
        runner: Command runner
        spec_file: the specification file to add to zip file
        extract_folder: the name of the folder created when the zip file is
            unzipped
        zip_file: out - the zip file that will be created
        opt_base_dir_directory: specify a directory that all data files are
            somewhere within, this will become the root of the zipfile's directory
            structure: the directory
        opt_skip_missing: any missing files will generate only warnings, and the
            zip file will be created anyway
    Returns:
        NamedTuple of outputs (described in `ZipSpecFileOutputs`).
    """
    execution = runner.start_execution(ZIP_SPEC_FILE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-zip-spec-file")
    cargs.append(spec_file)
    cargs.append(extract_folder)
    cargs.append(zip_file)
    if opt_base_dir_directory is not None:
        cargs.extend(["-base-dir", opt_base_dir_directory])
    if opt_skip_missing:
        cargs.append("-skip-missing")
    ret = ZipSpecFileOutputs(
    )
    execution.run(cargs)
    return ret
