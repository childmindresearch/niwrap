# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:58:55.878241

import typing

from ..styxdefs import *


BORDER_RESAMPLE_METADATA = Metadata(
    id="504abad4dcd048f0853a279f46dc1ccd1a441a70",
    name="border-resample",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class BorderResampleOutputs(typing.NamedTuple):
    """
    Output object returned when calling `border_resample(...)`.
    """
    border_out: OutputPathType
    """the output border file"""


def border_resample(
    runner: Runner,
    border_in: InputPathType,
    current_sphere: InputPathType,
    new_sphere: InputPathType,
    border_out: InputPathType,
) -> BorderResampleOutputs:
    """
    RESAMPLE A BORDER FILE TO A DIFFERENT MESH.
    
    Resamples a border file, given two spherical surfaces that are in register.
    Only borders that have the same structure as current-sphere will be
    resampled.
    
    Args:
        runner: Command runner
        border_in: the border file to resample
        current_sphere: a sphere surface with the mesh that the metric is
            currently on
        new_sphere: a sphere surface that is in register with <current-sphere>
            and has the desired output mesh
        border_out: the output border file
    Returns:
        NamedTuple of outputs (described in `BorderResampleOutputs`).
    """
    execution = runner.start_execution(BORDER_RESAMPLE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-border-resample")
    cargs.append(execution.input_file(border_in))
    cargs.append(execution.input_file(current_sphere))
    cargs.append(execution.input_file(new_sphere))
    cargs.append(execution.input_file(border_out))
    ret = BorderResampleOutputs(
        border_out=execution.output_file(f"{border_out}"),
    )
    execution.run(cargs)
    return ret
