# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T18:56:52.697528

import typing

from ..styxdefs import *


BORDER_EXPORT_COLOR_TABLE_METADATA = Metadata(
    id="a793dd510973bd17c166c5c8f90a8c1f2c963e65",
    name="border-export-color-table",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class BorderExportColorTableOutputs(typing.NamedTuple):
    """
    Output object returned when calling `border_export_color_table(...)`.
    """


def border_export_color_table(
    runner: Runner,
    border_file: InputPathType,
    table_out: str,
    opt_class_colors: bool = False,
) -> BorderExportColorTableOutputs:
    """
    WRITE BORDER NAMES AND COLORS AS TEXT.
    
    Takes the names and colors of each border, and writes it to the same format
    as -metric-label-import expects. By default, the borders are colored by
    border name, specify -class-colors to color them by class instead. The key
    values start at 1 and follow the order of the borders in the file.
    
    Args:
        runner: Command runner
        border_file: the input border file
        table_out: output - the output text file
        opt_class_colors: use class colors instead of the name colors
    Returns:
        NamedTuple of outputs (described in `BorderExportColorTableOutputs`).
    """
    execution = runner.start_execution(BORDER_EXPORT_COLOR_TABLE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-border-export-color-table")
    cargs.append(execution.input_file(border_file))
    cargs.append(table_out)
    if opt_class_colors:
        cargs.append("-class-colors")
    ret = BorderExportColorTableOutputs(
    )
    execution.run(cargs)
    return ret
