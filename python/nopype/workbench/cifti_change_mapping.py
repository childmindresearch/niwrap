# This file was auto generated by styx
# Do not edit this file directly

import typing

from ..styxdefs import *


CIFTI_CHANGE_MAPPING_METADATA = Metadata(
    id="547a3129050c3d7ac3e245d20d1cd669bbf364de",
    name="cifti-change-mapping",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class CiftiChangeMappingOutputs(typing.NamedTuple):
    """
    Output object returned when calling `cifti_change_mapping(...)`.
    """
    cifti_out: OutputPathType
    """the output cifti file"""


def cifti_change_mapping(
    runner: Runner,
    data_cifti: InputPathType,
    direction: str,
    cifti_out: InputPathType,
    opt_scalar: bool = False,
) -> CiftiChangeMappingOutputs:
    """
    CONVERT TO SCALAR, COPY MAPPING, ETC.
    
    Take an existing cifti file and change one of the mappings. Exactly one of
    -series, -scalar, or -from-cifti must be specified. The direction can be
    either an integer starting from 1, or the strings 'ROW' or 'COLUMN'.
    
    The argument to -unit must be one of the following:
    
    SECOND
    HERTZ
    METER
    RADIAN
    
    Args:
        runner: Command runner
        data_cifti: the cifti file to use the data from
        direction: which direction on <data-cifti> to replace the mapping
        cifti_out: the output cifti file
        opt_scalar: set the mapping to scalar
    Returns:
        NamedTuple of outputs (described in `CiftiChangeMappingOutputs`).
    """
    execution = runner.start_execution(CIFTI_CHANGE_MAPPING_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-cifti-change-mapping")
    cargs.append(execution.input_file(data_cifti))
    cargs.append(direction)
    cargs.append(execution.input_file(cifti_out))
    if opt_scalar:
        cargs.append("-scalar")
    ret = CiftiChangeMappingOutputs(
        cifti_out=execution.output_file(f"{cifti_out}"),
    )
    execution.run(cargs)
    return ret
