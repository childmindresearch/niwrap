# This file was auto generated by styx
# Do not edit this file directly

import typing

from ..styxdefs import *


VOLUME_REDUCE_METADATA = Metadata(
    id="a687231b9c772d9f7deebb0d8a02d256c7bb54b5",
    name="volume-reduce",
    container_image_type="docker",
    container_image_tag="mcin/docker-fsl:latest",
)


class VolumeReduceOutputs(typing.NamedTuple):
    """
    Output object returned when calling `volume_reduce(...)`.
    """
    volume_out: OutputPathType
    """the output volume"""


def volume_reduce(
    runner: Runner,
    volume_in: InputPathType,
    operation: str,
    volume_out: InputPathType,
    opt_only_numeric: bool = False,
) -> VolumeReduceOutputs:
    """
    PERFORM REDUCTION OPERATION ACROSS SUBVOLUMES.
    
    For each voxel, takes the data across subvolumes as a vector, and performs
    the specified reduction on it, putting the result into the single output
    volume at that voxel. The reduction operators are as follows:
    
    MAX: the maximum value
    MIN: the minimum value
    INDEXMAX: the 1-based index of the maximum value
    INDEXMIN: the 1-based index of the minimum value
    SUM: add all values
    PRODUCT: multiply all values
    MEAN: the mean of the data
    STDEV: the standard deviation (N denominator)
    SAMPSTDEV: the sample standard deviation (N-1 denominator)
    VARIANCE: the variance of the data
    TSNR: mean divided by sample standard deviation (N-1 denominator)
    COV: sample standard deviation (N-1 denominator) divided by mean
    L2NORM: square root of sum of squares
    MEDIAN: the median of the data
    MODE: the mode of the data
    COUNT_NONZERO: the number of nonzero elements in the data
    
    Args:
        runner: Command runner
        volume_in: the volume file to reduce
        operation: the reduction operator to use
        volume_out: the output volume
        opt_only_numeric: exclude non-numeric values
    Returns:
        NamedTuple of outputs (described in `VolumeReduceOutputs`).
    """
    execution = runner.start_execution(VOLUME_REDUCE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-volume-reduce")
    cargs.append(execution.input_file(volume_in))
    cargs.append(operation)
    cargs.append(execution.input_file(volume_out))
    if opt_only_numeric:
        cargs.append("-only-numeric")
    ret = VolumeReduceOutputs(
        volume_out=execution.output_file(f"{volume_out}"),
    )
    execution.run(cargs)
    return ret
