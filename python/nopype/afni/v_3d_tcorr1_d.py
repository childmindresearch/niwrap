# This file was auto generated by styx-boutiques-codegen
# Do not edit this file directly
# Timestamp: 2024-05-16T19:06:12.677453

import typing

from ..styxdefs import *


V_3D_TCORR1_D_METADATA = Metadata(
    id="9e9f7ebf698960751b63b5f0e68b9e9a7750045f",
    name="3dTcorr1D",
    container_image_type="docker",
    container_image_tag="fcpindi/c-pac:latest",
)


class V3dTcorr1DOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_3d_tcorr1_d(...)`.
    """
    out_file: OutputPathType
    """Output filename prefix."""
    out_file_: OutputPathType
    """Output file containing correlations."""


def v_3d_tcorr1_d(
    runner: Runner,
    xset: InputPathType,
    y_1d: InputPathType,
    ktaub: bool = False,
    num_threads: int | None = 1,
    outputtype: typing.Literal["NIFTI", "AFNI", "NIFTI_GZ"] | None = None,
    pearson: bool = False,
    quadrant: bool = False,
    spearman: bool = False,
) -> V3dTcorr1DOutputs:
    """
    TCorr1D, as implemented in Nipype (module: nipype.interfaces.afni.preprocess,
    interface: TCorr1D).
    Computes the correlation coefficient between each voxel time series in the
    input 3D+time dataset.
    For complete details, see the `3dTcorr1D Documentation.
    <https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dTcorr1D.html>`_
    >>> from nipype.interfaces import afni >>> tcorr1D = afni.TCorr1D() >>>
    tcorr1D.inputs.xset= 'u_rc1s1_Template.nii' >>> tcorr1D.inputs.y_1d =
    'seed.1D' >>> tcorr1D.cmdline '3dTcorr1D -prefix
    u_rc1s1_Template_correlation.nii.gz u_rc1s1_Template.nii seed.1D' >>> res =
    tcorr1D.run() # doctest: +SKIP
    
    Args:
        runner: Command runner
        xset: 3d+time dataset input.
        y_1d: 1d time series file input.
        ktaub: Correlation is the kendall's tau_b correlation coefficient.
        num_threads: Set number of threads.
        outputtype: 'nifti' or 'afni' or 'nifti_gz'. Afni output filetype.
        pearson: Correlation is the normal pearson correlation coefficient.
        quadrant: Correlation is the quadrant correlation coefficient.
        spearman: Correlation is the spearman (rank) correlation coefficient.
    Returns:
        NamedTuple of outputs (described in `V3dTcorr1DOutputs`).
    """
    if (
        ktaub +
        spearman +
        quadrant +
        pearson
    ) > 1:
        raise ValueError(
            "Only one of the following arguments can be specified:\n"
            "ktaub,\n"
            "spearman,\n"
            "quadrant,\n"
            "pearson"
        )
    execution = runner.start_execution(V_3D_TCORR1_D_METADATA)
    cargs = []
    cargs.append("3dTcorr1D")
    cargs.extend(["", execution.input_file(xset)])
    if spearman:
        cargs.append("-spearman")
    cargs.extend(["", execution.input_file(y_1d)])
    cargs.append("[ARGS]")
    cargs.append("[ENVIRON]")
    if num_threads is not None:
        cargs.append(str(num_threads))
    cargs.append("[OUT_FILE]")
    if outputtype is not None:
        cargs.append(outputtype)
    ret = V3dTcorr1DOutputs(
        out_file=execution.output_file(f"{xset}_correlation.nii.gz", optional=True),
        out_file_=execution.output_file(f"out_file", optional=True),
    )
    execution.run(cargs)
    return ret
