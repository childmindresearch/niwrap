# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

FAT_ROI_ROW_METADATA = Metadata(
    id="027b80948cf0bd1ac046353e98ebb2ca04186002.boutiques",
    name="fat_roi_row",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class FatRoiRowOutputs(typing.NamedTuple):
    """
    Output object returned when calling `fat_roi_row(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Selected ROI row output file in .row format."""


def fat_roi_row(
    roi: str,
    matrix_files: str | None = None,
    list_file: InputPathType | None = None,
    extern_labs_no: bool = False,
    runner: Runner | None = None,
) -> FatRoiRowOutputs:
    """
    Select a single ROI's row out of a connectivity matrix file (*.grid or *.netcc)
    for viewing and/or further analysis.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        roi: Specify which ROI's row of connectivity you want to select out. If\
            labeltables were used, you may select the ROI by either the string\
            label or the ROI mask number.
        matrix_files: Provide the set of matrix (*.grid or *.netcc) files by\
            searchable path. This can be a globbable entry in quotes containing\
            wildcard characters.
        list_file: Provide the set of matrix (*.grid or *.netcc) files by\
            explicit path in a text file. The LIST text file must contain at least\
            one column with the path to subject matrix file.
        extern_labs_no: Switch to turn off the writing/usage of user-defined\
            labels in the *.grid/*.netcc files.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FatRoiRowOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FAT_ROI_ROW_METADATA)
    cargs = []
    cargs.append("fat_roi_row.py")
    cargs.extend([
        "-r",
        roi
    ])
    cargs.append("{")
    if matrix_files is not None:
        cargs.extend([
            "-m",
            matrix_files
        ])
    cargs.append("|")
    if list_file is not None:
        cargs.extend([
            "-l",
            execution.input_file(list_file)
        ])
    cargs.append("}")
    if extern_labs_no:
        cargs.append("-E")
    ret = FatRoiRowOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(roi + "_selected.row"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "FAT_ROI_ROW_METADATA",
    "FatRoiRowOutputs",
    "fat_roi_row",
]
