# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

V__IS_OBLIQUE_METADATA = Metadata(
    id="2e3c80c4806683277ce568a5d838cb3d495df099.boutiques",
    name="@isOblique",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class VIsObliqueOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__is_oblique(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    result: OutputPathType
    """Output result indicating if the file is oblique or plumb"""


def v__is_oblique(
    infile: InputPathType,
    runner: Runner | None = None,
) -> VIsObliqueOutputs:
    """
    Determine if a file is oblique or plumb.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        infile: Input file (e.g., Hello+orig.HEAD).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VIsObliqueOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V__IS_OBLIQUE_METADATA)
    cargs = []
    cargs.append("@isOblique")
    cargs.append(execution.input_file(infile))
    ret = VIsObliqueOutputs(
        root=execution.output_file("."),
        result=execution.output_file("oblique_check_result.txt"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "VIsObliqueOutputs",
    "V__IS_OBLIQUE_METADATA",
    "v__is_oblique",
]
