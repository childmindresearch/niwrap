# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRI_CVS_DATA_COPY_METADATA = Metadata(
    id="b73336351ee9c11ffda39c6ee8b2af17a54695d1.boutiques",
    name="mri_cvs_data_copy",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MriCvsDataCopyOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mri_cvs_data_copy(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mri_cvs_data_copy(
    subjid: str,
    olddir: str,
    newdir: str,
    version: bool = False,
    help_: bool = False,
    runner: Runner | None = None,
) -> MriCvsDataCopyOutputs:
    """
    Packs and copies files that are required for mri_cvs_register.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subjid: Subject ID of the subject to be moved/registered.
        olddir: Directory where data (FS reconned output files for the subject)\
            is currently located. Use full path.
        newdir: Directory where data (FS reconned output files for the subject)\
            should be moved to. Use full path.
        version: Print version and exit.
        help_: Print help and exit.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCvsDataCopyOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_CVS_DATA_COPY_METADATA)
    cargs = []
    cargs.append("mri_cvs_data_copy")
    cargs.extend([
        "--subjid",
        subjid
    ])
    cargs.extend([
        "--olddir",
        olddir
    ])
    cargs.extend([
        "--newdir",
        newdir
    ])
    if version:
        cargs.append("--version")
    if help_:
        cargs.append("--help")
    ret = MriCvsDataCopyOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRI_CVS_DATA_COPY_METADATA",
    "MriCvsDataCopyOutputs",
    "mri_cvs_data_copy",
]
