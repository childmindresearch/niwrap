# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRIS_ERRORS_METADATA = Metadata(
    id="ef9b47e313219e97d7f5d816c34ec14bc6f35660.boutiques",
    name="mris_errors",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MrisErrorsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_errors(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mris_errors(
    input_image_file: InputPathType,
    runner: Runner | None = None,
) -> MrisErrorsOutputs:
    """
    This program will unfold an MRI on the surface of an ellipsoid.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_image_file: Input image file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisErrorsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_ERRORS_METADATA)
    cargs = []
    cargs.append("mris_errors")
    cargs.append("[OPTIONS]")
    cargs.append(execution.input_file(input_image_file))
    ret = MrisErrorsOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRIS_ERRORS_METADATA",
    "MrisErrorsOutputs",
    "mris_errors",
]
