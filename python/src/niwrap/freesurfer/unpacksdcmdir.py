# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

UNPACKSDCMDIR_METADATA = Metadata(
    id="ccbdc9d69fb2e9b0b3f0d1ebfc9affa27a0a362d.boutiques",
    name="unpacksdcmdir",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class UnpacksdcmdirOutputs(typing.NamedTuple):
    """
    Output object returned when calling `unpacksdcmdir(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    unpacked_data: OutputPathType
    """The directory that will contain the unpacked data."""


def unpacksdcmdir(
    input_directory: str,
    output_directory: str,
    runner: Runner | None = None,
) -> UnpacksdcmdirOutputs:
    """
    A tool for unpacking SD card directories, typically used in neuroimaging
    workflows. It seems to have a dependency on Tcl, as indicated by the error
    messages.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_directory: The directory containing SD card data to be unpacked.
        output_directory: The output directory where unpacked data will be\
            stored.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `UnpacksdcmdirOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(UNPACKSDCMDIR_METADATA)
    cargs = []
    cargs.append("unpacksdcmdir")
    cargs.append(input_directory)
    cargs.append(output_directory)
    ret = UnpacksdcmdirOutputs(
        root=execution.output_file("."),
        unpacked_data=execution.output_file("[OUTPUT]/unpacked_data"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "UNPACKSDCMDIR_METADATA",
    "UnpacksdcmdirOutputs",
    "unpacksdcmdir",
]
