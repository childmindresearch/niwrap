# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRI_LOG_LIKELIHOOD_METADATA = Metadata(
    id="f22fe6123ce8f0f860ffe7eecd35b5f18caff0af.boutiques",
    name="mri_log_likelihood",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MriLogLikelihoodOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mri_log_likelihood(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mri_log_likelihood(
    input_brain_images: list[InputPathType],
    atlas_file: InputPathType,
    transform_file: InputPathType,
    runner: Runner | None = None,
) -> MriLogLikelihoodOutputs:
    """
    MRI log likelihood calculation tool for brain images.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_brain_images: List of input brain images.
        atlas_file: Atlas image file.
        transform_file: Transform file for registration.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriLogLikelihoodOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_LOG_LIKELIHOOD_METADATA)
    cargs = []
    cargs.append("mri_log_likelihood")
    cargs.extend([execution.input_file(f) for f in input_brain_images])
    cargs.append(execution.input_file(atlas_file))
    cargs.append(execution.input_file(transform_file))
    ret = MriLogLikelihoodOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRI_LOG_LIKELIHOOD_METADATA",
    "MriLogLikelihoodOutputs",
    "mri_log_likelihood",
]
