# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRIS_RESCALE_METADATA = Metadata(
    id="1f0a5c2b091dfe101425de5fa0a02939d522526c.boutiques",
    name="mris_rescale",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MrisRescaleOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_rescale(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    rescaled_output_surface: OutputPathType
    """The file containing the rescaled surface."""


def mris_rescale(
    input_surface: InputPathType,
    output_surface: str,
    runner: Runner | None = None,
) -> MrisRescaleOutputs:
    """
    This program will rescale a surface representation.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_surface: The input surface file to be rescaled.
        output_surface: The output surface file after rescaling.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisRescaleOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_RESCALE_METADATA)
    cargs = []
    cargs.append("mris_rescale")
    cargs.append(execution.input_file(input_surface))
    cargs.append(output_surface)
    ret = MrisRescaleOutputs(
        root=execution.output_file("."),
        rescaled_output_surface=execution.output_file("[OUTPUT_SURF]"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRIS_RESCALE_METADATA",
    "MrisRescaleOutputs",
    "mris_rescale",
]
