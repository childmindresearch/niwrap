{
  "name": "tckedit",
  "description": "Perform various editing operations on track files.\n\nThis command can be used to perform various types of manipulations on track data. A range of such manipulations are demonstrated in the examples provided below.\n\nReferences:\n\n",
  "author": "Robert E. Smith (robert.smith@florey.edu.au)",
  "tool-version": "3.0.4",
  "schema-version": "0.5",
  "container-image": {
    "image": "mrtrix3/mrtrix3:3.0.4",
    "type": "docker"
  },
  "command-line": "tckedit [REGION_OF_INTEREST_PROCESSING_OPTIONS_INCLUDE] [REGION_OF_INTEREST_PROCESSING_OPTIONS_INCLUDE_ORDERED] [REGION_OF_INTEREST_PROCESSING_OPTIONS_EXCLUDE] [REGION_OF_INTEREST_PROCESSING_OPTIONS_MASK] [STREAMLINE_LENGTH_THRESHOLD_OPTIONS_MAXLENGTH] [STREAMLINE_LENGTH_THRESHOLD_OPTIONS_MINLENGTH] [STREAMLINE_COUNT_TRUNCATION_OPTIONS_NUMBER] [STREAMLINE_COUNT_TRUNCATION_OPTIONS_SKIP] [THRESHOLDS_PERTAINING_TO_PER_STREAMLINE_WEIGHTING_MAXWEIGHT] [THRESHOLDS_PERTAINING_TO_PER_STREAMLINE_WEIGHTING_MINWEIGHT] [OTHER_OPTIONS_SPECIFIC_TO_TCKEDIT_INVERSE] [OTHER_OPTIONS_SPECIFIC_TO_TCKEDIT_ENDS_ONLY] [OPTIONS_FOR_HANDLING_STREAMLINE_WEIGHTS_TCK_WEIGHTS_IN] [OPTIONS_FOR_HANDLING_STREAMLINE_WEIGHTS_TCK_WEIGHTS_OUT] [__STANDARD_OPTIONS_INFO] [__STANDARD_OPTIONS_QUIET] [__STANDARD_OPTIONS_DEBUG] [__STANDARD_OPTIONS_FORCE] [__STANDARD_OPTIONS_NTHREADS] [__STANDARD_OPTIONS_CONFIG] [__STANDARD_OPTIONS_HELP] [__STANDARD_OPTIONS_VERSION] [TRACKS_IN] [TRACKS_OUT]",
  "inputs": [
    {
      "id": "tracks_in",
      "name": "tracks_in",
      "command-line-flag": "",
      "value-key": "[TRACKS_IN]",
      "description": "the input track file(s)",
      "type": "File",
      "optional": false,
      "list": true
    },
    {
      "id": "tracks_out",
      "name": "tracks_out",
      "command-line-flag": "",
      "value-key": "[TRACKS_OUT]",
      "description": "the output track file",
      "type": "File",
      "optional": false
    },
    {
      "id": "include",
      "name": "include",
      "command-line-flag": "-include",
      "value-key": "[REGION_OF_INTEREST_PROCESSING_OPTIONS_INCLUDE]",
      "description": "specify an inclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines must traverse ALL inclusion regions to be accepted.",
      "type": {
        "id": "include",
        "name": "include",
        "description": "specify an inclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines must traverse ALL inclusion regions to be accepted.",
        "command-line": "-include [SPEC]",
        "inputs": [
          {
            "id": "spec",
            "name": "spec",
            "command-line-flag": "",
            "value-key": "[SPEC]",
            "description": "specify an inclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines must traverse ALL inclusion regions to be accepted.",
            "type": "String",
            "optional": false
          }
        ],
        "output-files": []
      },
      "optional": true,
      "list": true
    },
    {
      "id": "include_ordered",
      "name": "include_ordered",
      "command-line-flag": "-include_ordered",
      "value-key": "[REGION_OF_INTEREST_PROCESSING_OPTIONS_INCLUDE_ORDERED]",
      "description": "specify an inclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines must traverse ALL inclusion_ordered regions in the order they are specified in order to be accepted.",
      "type": {
        "id": "include_ordered",
        "name": "include_ordered",
        "description": "specify an inclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines must traverse ALL inclusion_ordered regions in the order they are specified in order to be accepted.",
        "command-line": "-include_ordered [IMAGE]",
        "inputs": [
          {
            "id": "image",
            "name": "image",
            "command-line-flag": "",
            "value-key": "[IMAGE]",
            "description": "specify an inclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines must traverse ALL inclusion_ordered regions in the order they are specified in order to be accepted.",
            "type": "String",
            "optional": false
          }
        ],
        "output-files": []
      },
      "optional": true,
      "list": true
    },
    {
      "id": "exclude",
      "name": "exclude",
      "command-line-flag": "-exclude",
      "value-key": "[REGION_OF_INTEREST_PROCESSING_OPTIONS_EXCLUDE]",
      "description": "specify an exclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines that enter ANY exclude region will be discarded.",
      "type": {
        "id": "exclude",
        "name": "exclude",
        "description": "specify an exclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines that enter ANY exclude region will be discarded.",
        "command-line": "-exclude [SPEC]",
        "inputs": [
          {
            "id": "spec",
            "name": "spec",
            "command-line-flag": "",
            "value-key": "[SPEC]",
            "description": "specify an exclusion region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). Streamlines that enter ANY exclude region will be discarded.",
            "type": "String",
            "optional": false
          }
        ],
        "output-files": []
      },
      "optional": true,
      "list": true
    },
    {
      "id": "mask",
      "name": "mask",
      "command-line-flag": "-mask",
      "value-key": "[REGION_OF_INTEREST_PROCESSING_OPTIONS_MASK]",
      "description": "specify a masking region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). If defined, streamlines exiting the mask will be truncated.",
      "type": {
        "id": "mask",
        "name": "mask",
        "description": "specify a masking region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). If defined, streamlines exiting the mask will be truncated.",
        "command-line": "-mask [SPEC]",
        "inputs": [
          {
            "id": "spec",
            "name": "spec",
            "command-line-flag": "",
            "value-key": "[SPEC]",
            "description": "specify a masking region of interest, as either a binary mask image, or as a sphere using 4 comma-separared values (x,y,z,radius). If defined, streamlines exiting the mask will be truncated.",
            "type": "String",
            "optional": false
          }
        ],
        "output-files": []
      },
      "optional": true,
      "list": true
    },
    {
      "id": "maxlength",
      "name": "maxlength",
      "command-line-flag": "-maxlength",
      "value-key": "[STREAMLINE_LENGTH_THRESHOLD_OPTIONS_MAXLENGTH]",
      "description": "set the maximum length of any streamline in mm",
      "type": "Number",
      "optional": true,
      "integer": false
    },
    {
      "id": "minlength",
      "name": "minlength",
      "command-line-flag": "-minlength",
      "value-key": "[STREAMLINE_LENGTH_THRESHOLD_OPTIONS_MINLENGTH]",
      "description": "set the minimum length of any streamline in mm",
      "type": "Number",
      "optional": true,
      "integer": false
    },
    {
      "id": "number",
      "name": "number",
      "command-line-flag": "-number",
      "value-key": "[STREAMLINE_COUNT_TRUNCATION_OPTIONS_NUMBER]",
      "description": "set the desired number of selected streamlines to be propagated to the output file",
      "type": "Number",
      "optional": true,
      "integer": true
    },
    {
      "id": "skip",
      "name": "skip",
      "command-line-flag": "-skip",
      "value-key": "[STREAMLINE_COUNT_TRUNCATION_OPTIONS_SKIP]",
      "description": "omit this number of selected streamlines before commencing writing to the output file",
      "type": "Number",
      "optional": true,
      "integer": true
    },
    {
      "id": "maxweight",
      "name": "maxweight",
      "command-line-flag": "-maxweight",
      "value-key": "[THRESHOLDS_PERTAINING_TO_PER_STREAMLINE_WEIGHTING_MAXWEIGHT]",
      "description": "set the maximum weight of any streamline",
      "type": "Number",
      "optional": true,
      "integer": false
    },
    {
      "id": "minweight",
      "name": "minweight",
      "command-line-flag": "-minweight",
      "value-key": "[THRESHOLDS_PERTAINING_TO_PER_STREAMLINE_WEIGHTING_MINWEIGHT]",
      "description": "set the minimum weight of any streamline",
      "type": "Number",
      "optional": true,
      "integer": false
    },
    {
      "id": "inverse",
      "name": "inverse",
      "command-line-flag": "-inverse",
      "value-key": "[OTHER_OPTIONS_SPECIFIC_TO_TCKEDIT_INVERSE]",
      "description": "output the inverse selection of streamlines based on the criteria provided; i.e. only those streamlines that fail at least one selection criterion, and/or vertices that are outside masks if provided, will be written to file",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "ends_only",
      "name": "ends_only",
      "command-line-flag": "-ends_only",
      "value-key": "[OTHER_OPTIONS_SPECIFIC_TO_TCKEDIT_ENDS_ONLY]",
      "description": "only test the ends of each streamline against the provided include/exclude ROIs",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "tck_weights_in",
      "name": "tck_weights_in",
      "command-line-flag": "-tck_weights_in",
      "value-key": "[OPTIONS_FOR_HANDLING_STREAMLINE_WEIGHTS_TCK_WEIGHTS_IN]",
      "description": "specify a text scalar file containing the streamline weights",
      "type": "File",
      "optional": true
    },
    {
      "id": "tck_weights_out",
      "name": "tck_weights_out",
      "command-line-flag": "-tck_weights_out",
      "value-key": "[OPTIONS_FOR_HANDLING_STREAMLINE_WEIGHTS_TCK_WEIGHTS_OUT]",
      "description": "specify the path for an output text scalar file containing streamline weights",
      "type": "File",
      "optional": true
    },
    {
      "id": "info",
      "name": "info",
      "command-line-flag": "-info",
      "value-key": "[__STANDARD_OPTIONS_INFO]",
      "description": "display information messages.",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "quiet",
      "name": "quiet",
      "command-line-flag": "-quiet",
      "value-key": "[__STANDARD_OPTIONS_QUIET]",
      "description": "do not display information messages or progress status; alternatively, this can be achieved by setting the MRTRIX_QUIET environment variable to a non-empty string.",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "debug",
      "name": "debug",
      "command-line-flag": "-debug",
      "value-key": "[__STANDARD_OPTIONS_DEBUG]",
      "description": "display debugging messages.",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "force",
      "name": "force",
      "command-line-flag": "-force",
      "value-key": "[__STANDARD_OPTIONS_FORCE]",
      "description": "force overwrite of output files (caution: using the same file as input and output might cause unexpected behaviour).",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "nthreads",
      "name": "nthreads",
      "command-line-flag": "-nthreads",
      "value-key": "[__STANDARD_OPTIONS_NTHREADS]",
      "description": "use this number of threads in multi-threaded applications (set to 0 to disable multi-threading).",
      "type": "Number",
      "optional": true,
      "integer": true
    },
    {
      "id": "config",
      "name": "config",
      "command-line-flag": "-config",
      "value-key": "[__STANDARD_OPTIONS_CONFIG]",
      "description": "temporarily set the value of an MRtrix config file entry.",
      "type": {
        "id": "config",
        "name": "config",
        "description": "temporarily set the value of an MRtrix config file entry.",
        "command-line": "-config [KEY] [VALUE]",
        "inputs": [
          {
            "id": "key",
            "name": "key",
            "command-line-flag": "",
            "value-key": "[KEY]",
            "description": "temporarily set the value of an MRtrix config file entry.",
            "type": "String",
            "optional": false
          },
          {
            "id": "value",
            "name": "value",
            "command-line-flag": "",
            "value-key": "[VALUE]",
            "description": "temporarily set the value of an MRtrix config file entry.",
            "type": "String",
            "optional": false
          }
        ],
        "output-files": []
      },
      "optional": true,
      "list": true
    },
    {
      "id": "help",
      "name": "help",
      "command-line-flag": "-help",
      "value-key": "[__STANDARD_OPTIONS_HELP]",
      "description": "display this information page and exit.",
      "type": "Flag",
      "optional": true
    },
    {
      "id": "version",
      "name": "version",
      "command-line-flag": "-version",
      "value-key": "[__STANDARD_OPTIONS_VERSION]",
      "description": "display version information and exit.",
      "type": "Flag",
      "optional": true
    }
  ],
  "output-files": [
    {
      "id": "tracks_out",
      "name": "tracks_out",
      "path-template": "[TRACKS_OUT]",
      "description": "the output track file"
    },
    {
      "id": "tck_weights_out",
      "name": "tck_weights_out",
      "path-template": "[OPTIONS_FOR_HANDLING_STREAMLINE_WEIGHTS_TCK_WEIGHTS_OUT]",
      "description": "specify the path for an output text scalar file containing streamline weights "
    }
  ],
  "url": "https://mrtrix.readthedocs.io/en/latest/reference/commands/tckedit.html"
}