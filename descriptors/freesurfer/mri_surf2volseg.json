{
  "tool-version": "7.4.1",
  "name": "mri_surf2volseg",
  "author": "FreeSurfer Developers",
  "description": "Tool that cleans up presurf aseg cortex and WM, maps cortical labels from an annotation into a volume, and labels cerebral WM with closest cortical label.",
  "command-line": "mri_surf2volseg [INPUT_SEGMENTATION] [OUTPUT_SEGMENTATION] [SOURCE_SEGMENTATION] [LH_WHITE_SURF] [LH_PIAL_SURF] [RH_WHITE_SURF] [RH_PIAL_SURF] [LH_CORTEX_MASK] [RH_CORTEX_MASK] [FIX_PRESURF_RIBBON] [LABEL_CORTEX] [LABEL_WM] [LABEL_WM_UNKNOWN] [LH_ANNOTATION] [RH_ANNOTATION] [WMPARC_DMAX] [RIP_UNKNOWN] [HYPO_AS_WM] [HASHRES] [NHOPS] [HELP_FLAG] [VERSION_FLAG] [CRS_TEST] [CTAB_FILE] [THREADS_NUMBER]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "command-line-flag": "--i",
      "description": "Full path of input segmentation.",
      "value-key": "[INPUT_SEGMENTATION]",
      "type": "File",
      "optional": true,
      "id": "input_segmentation",
      "name": "Input segmentation file"
    },
    {
      "command-line-flag": "--o",
      "description": "Output segmentation file.",
      "value-key": "[OUTPUT_SEGMENTATION]",
      "type": "String",
      "optional": true,
      "id": "output_segmentation",
      "name": "Output segmentation file"
    },
    {
      "command-line-flag": "--src",
      "description": "Source subcortical volume segmentation file (instead of using subcortical segs in input segmentation).",
      "value-key": "[SOURCE_SEGMENTATION]",
      "type": "File",
      "optional": true,
      "id": "source_segmentation",
      "name": "Source segmentation file"
    },
    {
      "command-line-flag": "--lh-white",
      "description": "White surface for left hemisphere.",
      "value-key": "[LH_WHITE_SURF]",
      "type": "File",
      "optional": true,
      "id": "lh_white_surf",
      "name": "Left hemisphere white surface"
    },
    {
      "command-line-flag": "--lh-pial",
      "description": "Pial surface for left hemisphere.",
      "value-key": "[LH_PIAL_SURF]",
      "type": "File",
      "optional": true,
      "id": "lh_pial_surf",
      "name": "Left hemisphere pial surface"
    },
    {
      "command-line-flag": "--rh-white",
      "description": "White surface for right hemisphere.",
      "value-key": "[RH_WHITE_SURF]",
      "type": "File",
      "optional": true,
      "id": "rh_white_surf",
      "name": "Right hemisphere white surface"
    },
    {
      "command-line-flag": "--rh-pial",
      "description": "Pial surface for right hemisphere.",
      "value-key": "[RH_PIAL_SURF]",
      "type": "File",
      "optional": true,
      "id": "rh_pial_surf",
      "name": "Right hemisphere pial surface"
    },
    {
      "command-line-flag": "--lh-cortex-mask",
      "description": "Mask for left hemisphere cortex (usually lh.cortex.label).",
      "value-key": "[LH_CORTEX_MASK]",
      "type": "File",
      "optional": true,
      "id": "lh_cortex_mask",
      "name": "Left hemisphere cortex mask"
    },
    {
      "command-line-flag": "--rh-cortex-mask",
      "description": "Mask for right hemisphere cortex (usually rh.cortex.label).",
      "value-key": "[RH_CORTEX_MASK]",
      "type": "File",
      "optional": true,
      "id": "rh_cortex_mask",
      "name": "Right hemisphere cortex mask"
    },
    {
      "command-line-flag": "--fix-presurf-with-ribbon",
      "description": "Fix the cortical and WM labels in the input segmentation using ribbon file.",
      "value-key": "[FIX_PRESURF_RIBBON]",
      "type": "File",
      "optional": true,
      "id": "fix_presurf_ribbon",
      "name": "Fix cortical and WM labels with ribbon"
    },
    {
      "command-line-flag": "--label-cortex",
      "description": "Relabel cortex in the input segmentation with surface annotation.",
      "value-key": "[LABEL_CORTEX]",
      "type": "Flag",
      "optional": true,
      "id": "label_cortex",
      "name": "Label cortex flag"
    },
    {
      "command-line-flag": "--label-wm",
      "description": "Relabel cerebral WM in the input segmentation with surface annotation.",
      "value-key": "[LABEL_WM]",
      "type": "Flag",
      "optional": true,
      "id": "label_wm",
      "name": "Label WM flag"
    },
    {
      "command-line-flag": "--label-wm-unknown",
      "description": "Relabel unknown WM as lhval and rhval (default is 5001 and 5002).",
      "value-key": "[LABEL_WM_UNKNOWN]",
      "type": "Number",
      "list": true,
      "min-list-entries": 2,
      "max-list-entries": 2,
      "optional": true,
      "id": "label_wm_unknown",
      "name": "Label unknown WM values"
    },
    {
      "command-line-flag": "--lh-annot",
      "description": "Left hemisphere annotation for --label-cortex and --label-wm.",
      "value-key": "[LH_ANNOTATION]",
      "type": "File",
      "optional": true,
      "id": "lh_annotation",
      "name": "Left hemisphere annotation file"
    },
    {
      "command-line-flag": "--rh-annot",
      "description": "Right hemisphere annotation for --label-cortex and --label-wm.",
      "value-key": "[RH_ANNOTATION]",
      "type": "File",
      "optional": true,
      "id": "rh_annotation",
      "name": "Right hemisphere annotation file"
    },
    {
      "command-line-flag": "--wmparc-dmax",
      "description": "Max distance (mm) from cortex to be labeled as gyral WM.",
      "value-key": "[WMPARC_DMAX]",
      "type": "Number",
      "optional": true,
      "id": "wmparc_dmax",
      "name": "WMPARC max distance"
    },
    {
      "command-line-flag": "--rip-unknown",
      "description": "Do not label WM based on 'unknown' cortical label.",
      "value-key": "[RIP_UNKNOWN]",
      "type": "Flag",
      "optional": true,
      "id": "rip_unknown",
      "name": "Rip unknown WM flag"
    },
    {
      "command-line-flag": "--hypo-as-wm",
      "description": "Label hypointensities as WM (when fixing with ribbon).",
      "value-key": "[HYPO_AS_WM]",
      "type": "Flag",
      "optional": true,
      "id": "hypo_as_wm",
      "name": "Hypointensities as WM flag"
    },
    {
      "command-line-flag": "--hashres",
      "description": "Surface hash table resolution.",
      "value-key": "[HASHRES]",
      "type": "Number",
      "optional": true,
      "id": "hashres",
      "name": "Hash table resolution"
    },
    {
      "command-line-flag": "--nhops",
      "description": "Number of surface hops when searching for a nearby annotation.",
      "value-key": "[NHOPS]",
      "type": "Number",
      "optional": true,
      "id": "nhops",
      "name": "Number of hops"
    },
    {
      "command-line-flag": "--help",
      "description": "Print out information on how to use this program.",
      "value-key": "[HELP_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "help_flag",
      "name": "Help flag"
    },
    {
      "command-line-flag": "--version",
      "description": "Print out version and exit.",
      "value-key": "[VERSION_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "version_flag",
      "name": "Version flag"
    },
    {
      "command-line-flag": "--crs-test",
      "description": "Test labeling of only the voxel given by column, row, slice (debugging).",
      "value-key": "[CRS_TEST]",
      "type": "Number",
      "list": true,
      "min-list-entries": 3,
      "max-list-entries": 3,
      "optional": true,
      "id": "crs_test",
      "name": "CRS test coordinates"
    },
    {
      "command-line-flag": "--ctab",
      "description": "Embed color table in the output.",
      "value-key": "[CTAB_FILE]",
      "type": "File",
      "optional": true,
      "id": "ctab_file",
      "name": "Color table file"
    },
    {
      "command-line-flag": "--threads",
      "description": "Run in parallel with the specified number of threads.",
      "value-key": "[THREADS_NUMBER]",
      "type": "Number",
      "optional": true,
      "id": "threads_number",
      "name": "Number of threads"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
