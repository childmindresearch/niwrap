{
  "tool-version": "7.4.1",
  "name": "mri_ca_train",
  "author": "FreeSurfer Developers",
  "description": "Trains GCA data with multiple subjects using provided segmentation volumes and other configuration.",
  "command-line": "mri_ca_train [SUBJECTS] [OUTPUT_GCA] [SEGMENTATION] [TRANSFORM] [MASK_VOLUME] [NODE_SPACING] [PRIOR_SPACING] [INPUT_TRAINING] [MAKESYM] [CHECK_SYMMETRY] [SANITY_CHECK] [THREADS] [DONE_FILE]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "List of subject directories under the SUBJECTS_DIR. Each is a path relative to the subject's MRI directory.",
      "value-key": "[SUBJECTS]",
      "type": "String",
      "list": true,
      "optional": false,
      "id": "subjects",
      "name": "Subjects",
      "min-list-entries": 1
    },
    {
      "description": "Output GCA file name.",
      "value-key": "[OUTPUT_GCA]",
      "type": "String",
      "optional": false,
      "id": "output_gca",
      "name": "Output GCA filename"
    },
    {
      "command-line-flag": "-seg",
      "description": "Segmentation volume directory relative to each subject's MRI path.",
      "value-key": "[SEGMENTATION]",
      "type": "String",
      "optional": false,
      "id": "segmentation",
      "name": "Segmentation Volume Directory"
    },
    {
      "command-line-flag": "-xform",
      "description": "Atlas transform path relative to each subject's MRI transforms directory.",
      "value-key": "[TRANSFORM]",
      "type": "String",
      "optional": true,
      "id": "transform",
      "name": "Atlas Transform Path"
    },
    {
      "command-line-flag": "-mask",
      "description": "Volume name used as a mask, path relative to each subject's MRI directory.",
      "value-key": "[MASK_VOLUME]",
      "type": "String",
      "optional": true,
      "id": "mask_volume",
      "name": "Mask Volume Name"
    },
    {
      "command-line-flag": "-node_spacing",
      "description": "Spacing of classifiers in canonical space",
      "value-key": "[NODE_SPACING]",
      "type": "String",
      "optional": true,
      "id": "node_spacing",
      "name": "Node Spacing"
    },
    {
      "command-line-flag": "-prior_spacing",
      "description": "Spacing of class priors in canonical space",
      "value-key": "[PRIOR_SPACING]",
      "type": "String",
      "optional": true,
      "id": "prior_spacing",
      "name": "Prior Spacing"
    },
    {
      "command-line-flag": "-input",
      "description": "Specifying training data, path relative to each subject's MRI directory. Can specify multiple inputs.",
      "value-key": "[INPUT_TRAINING]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "input_training",
      "name": "Input Training Data"
    },
    {
      "command-line-flag": "-sym",
      "description": "Symmetrize the atlas after creation",
      "value-key": "[SYMMETRIZE]",
      "type": "Flag",
      "optional": true,
      "id": "symmetrize",
      "name": "Symmetrize Flag"
    },
    {
      "command-line-flag": "-makesym",
      "description": "Symmetrize an already existing atlas. Specify input GCA and symmetrized GCA.",
      "value-key": "[MAKESYM]",
      "type": "String",
      "list": true,
      "max-list-entries": 2,
      "optional": true,
      "id": "makesym",
      "name": "Make Symmetrized GCA"
    },
    {
      "command-line-flag": "-checksym",
      "description": "Check the symmetry of an already existing atlas. Specify input GCA and symmetrized GCA.",
      "value-key": "[CHECK_SYMMETRY]",
      "type": "String",
      "list": true,
      "max-list-entries": 2,
      "optional": true,
      "id": "check_symmetry",
      "name": "Check Symmetry"
    },
    {
      "command-line-flag": "-check",
      "description": "Conduct sanity-check of labels for obvious edit errors",
      "value-key": "[SANITY_CHECK]",
      "type": "Flag",
      "optional": true,
      "id": "sanity_check",
      "name": "Sanity Check Flag"
    },
    {
      "command-line-flag": "-threads",
      "description": "Specify number of threads to use (also known as -nthreads)",
      "value-key": "[THREADS]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "threads",
      "name": "Number of Threads"
    },
    {
      "command-line-flag": "-done",
      "description": "Create DoneFile when done (contents: 0=ok, 1=error)",
      "value-key": "[DONE_FILE]",
      "type": "String",
      "optional": true,
      "id": "done_file",
      "name": "Done File"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
