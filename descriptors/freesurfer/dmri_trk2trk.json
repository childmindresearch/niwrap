{
  "tool-version": "7.4.1",
  "name": "dmri_trk2trk",
  "author": "FreeSurfer Developers",
  "description": "A tool for transforming and analyzing tractography data.",
  "command-line": "dmri_trk2trk [IN_TRK] [IN_ASC] [IN_DIR] [OUT_TRK] [OUT_ASC] [OUT_VOL] [OUT_DIR] [IN_REF] [OUT_REF] [REG_FILE] [REGNL_FILE] [INV_FLAG] [FILL_FLAG] [OVERLAY] [INCLUSION_MASK] [EXCLUSION_MASK] [TERMINAL_INCLUSION_MASK] [TERMINAL_EXCLUSION_MASK] [LENGTH_MIN] [LENGTH_MAX] [MEAN_FLAG] [NEARMEAN_FLAG] [NTH_STREAMLINE] [EVERY_NTH_STREAMLINE] [SMOOTH_FLAG] [DEBUG_FLAG] [CHECK_OPTS]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "command-line-flag": "--in",
      "description": "Input .trk file(s)",
      "value-key": "[IN_TRK]",
      "type": "File",
      "optional": false,
      "list": true,
      "id": "in_trk",
      "name": "Input TRK files"
    },
    {
      "command-line-flag": "--inasc",
      "description": "Input ASCII plain text file(s), as an alternative to .trk",
      "value-key": "[IN_ASC]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "in_asc",
      "name": "Input ASCII files"
    },
    {
      "command-line-flag": "--indir",
      "description": "Input directory (optional)",
      "value-key": "[IN_DIR]",
      "type": "String",
      "optional": true,
      "id": "in_dir",
      "name": "Input directory"
    },
    {
      "command-line-flag": "--out",
      "description": "Output .trk file(s), as many as inputs (or 1 to merge inputs)",
      "value-key": "[OUT_TRK]",
      "type": "String",
      "optional": true,
      "list": false,
      "id": "out_trk",
      "name": "Output TRK files"
    },
    {
      "command-line-flag": "--outasc",
      "description": "Output ASCII plain text file(s), as many as inputs (or 1 to merge inputs)",
      "value-key": "[OUT_ASC]",
      "type": "String",
      "optional": true,
      "list": false,
      "id": "out_asc",
      "name": "Output ASCII files"
    },
    {
      "command-line-flag": "--outvol",
      "description": "Output volume(s), as many as inputs (or 1 to merge inputs)",
      "value-key": "[OUT_VOL]",
      "type": "String",
      "optional": true,
      "list": false,
      "id": "out_vol",
      "name": "Output volumes"
    },
    {
      "command-line-flag": "--outdir",
      "description": "Output directory (optional)",
      "value-key": "[OUT_DIR]",
      "type": "String",
      "optional": true,
      "id": "out_dir",
      "name": "Output directory"
    },
    {
      "command-line-flag": "--inref",
      "description": "Input reference volume (needed for --reg/--regnl)",
      "value-key": "[IN_REF]",
      "type": "File",
      "optional": true,
      "id": "in_ref",
      "name": "Input reference volume"
    },
    {
      "command-line-flag": "--outref",
      "description": "Output reference volume (needed for --reg/--regnl/--outvol)",
      "value-key": "[OUT_REF]",
      "type": "File",
      "optional": true,
      "id": "out_ref",
      "name": "Output reference volume"
    },
    {
      "command-line-flag": "--reg",
      "description": "Affine registration file (.lta or .mat), applied first",
      "value-key": "[REG_FILE]",
      "type": "File",
      "optional": true,
      "id": "reg_file",
      "name": "Affine registration file"
    },
    {
      "command-line-flag": "--regnl",
      "description": "Nonlinear registration file (.m3z), applied second",
      "value-key": "[REGNL_FILE]",
      "type": "File",
      "optional": true,
      "id": "regnl_file",
      "name": "Nonlinear registration file"
    },
    {
      "command-line-flag": "--inv",
      "description": "Apply inverse of registration (default: no)",
      "value-key": "[INV_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "inv_flag",
      "name": "Inverse registration flag"
    },
    {
      "command-line-flag": "--fill",
      "description": "Fill gaps b/w mapped points by linear interpolation",
      "value-key": "[FILL_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "fill_flag",
      "name": "Fill gaps flag"
    },
    {
      "command-line-flag": "--over",
      "description": "Scalar overlay 1D volume(s), applied to all input .trk files",
      "value-key": "[OVERLAY]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "overlay",
      "name": "Scalar overlay volumes"
    },
    {
      "command-line-flag": "--imask",
      "description": "Inclusion mask(s), applied to all input .trk files",
      "value-key": "[INCLUSION_MASK]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "inclusion_mask",
      "name": "Inclusion masks"
    },
    {
      "command-line-flag": "--emask",
      "description": "Exclusion mask(s), applied to all input .trk files",
      "value-key": "[EXCLUSION_MASK]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "exclusion_mask",
      "name": "Exclusion masks"
    },
    {
      "command-line-flag": "--itmask",
      "description": "Terminal inclusion mask(s), applied to all input .trk files",
      "value-key": "[TERMINAL_INCLUSION_MASK]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "terminal_inclusion_mask",
      "name": "Terminal inclusion masks"
    },
    {
      "command-line-flag": "--etmask",
      "description": "Terminal exclusion mask(s), applied to all input .trk files",
      "value-key": "[TERMINAL_EXCLUSION_MASK]",
      "type": "File",
      "optional": true,
      "list": true,
      "id": "terminal_exclusion_mask",
      "name": "Terminal exclusion masks"
    },
    {
      "command-line-flag": "--lmin",
      "description": "Only save streamlines with length greater than this number",
      "value-key": "[LENGTH_MIN]",
      "type": "Number",
      "optional": true,
      "id": "length_min",
      "name": "Minimum streamline length"
    },
    {
      "command-line-flag": "--lmax",
      "description": "Only save streamlines with length smaller than this number",
      "value-key": "[LENGTH_MAX]",
      "type": "Number",
      "optional": true,
      "id": "length_max",
      "name": "Maximum streamline length"
    },
    {
      "command-line-flag": "--mean",
      "description": "Only save the mean of the streamlines (Default: save all)",
      "value-key": "[MEAN_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "mean_flag",
      "name": "Save mean streamline flag"
    },
    {
      "command-line-flag": "--nearmean",
      "description": "Only save the streamline nearest to the mean (Default: save all)",
      "value-key": "[NEARMEAN_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "nearmean_flag",
      "name": "Save nearest to mean streamline flag"
    },
    {
      "command-line-flag": "--nth",
      "description": "Only save the n-th (0-based) streamline (Default: save all)",
      "value-key": "[NTH_STREAMLINE]",
      "type": "Number",
      "optional": true,
      "id": "nth_streamline",
      "name": "Save nth streamline"
    },
    {
      "command-line-flag": "--every",
      "description": "Only save every n-th streamline (Default: save all)",
      "value-key": "[EVERY_NTH_STREAMLINE]",
      "type": "Number",
      "optional": true,
      "id": "every_nth_streamline",
      "name": "Save every nth streamline"
    },
    {
      "command-line-flag": "--smooth",
      "description": "Smooth streamlines (default: no)",
      "value-key": "[SMOOTH_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "smooth_flag",
      "name": "Smooth streamlines flag"
    },
    {
      "command-line-flag": "--debug",
      "description": "Turn on debugging",
      "value-key": "[DEBUG_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "debug_flag",
      "name": "Debug flag"
    },
    {
      "command-line-flag": "--checkopts",
      "description": "Don't run anything, just check options and exit",
      "value-key": "[CHECK_OPTS]",
      "type": "Flag",
      "optional": true,
      "id": "check_opts",
      "name": "Check options flag"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUT_TRK]",
      "description": "Transformed output .trk file",
      "optional": false,
      "id": "out_trk_file",
      "name": "Output TRK file"
    },
    {
      "path-template": "[OUT_ASC]",
      "description": "Transformed output ASCII text file",
      "optional": true,
      "id": "out_asc_file",
      "name": "Output ASCII file"
    },
    {
      "path-template": "[OUT_VOL]",
      "description": "Transformed output volume",
      "optional": true,
      "id": "out_vol_file",
      "name": "Output volume file"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
