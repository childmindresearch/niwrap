{
  "name": "fsl_rigid_register",
  "description": "A front-end tool for FSL's FLIRT that computes a rigid registration matrix and resamples the input volume to the reference volume.",
  "command-line": "fsl_rigid_register [REFVOL] [INPUTVOL] [OUTPUTVOL] [FSLMAT] [REGMAT] [XFMMAT] [LTAMAT] [NOINITGEOM] [APPLYXFM] [APPLYINITXFM] [INITXFM] [MAXANGLE] [INTERP] [DOF] [BINS] [COST] [TMPDIR] [NOCLEANUP] [CLEANUP] [SUBJECT] [VERSION] [HELP]",
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "refvol",
      "name": "Reference Volume",
      "type": "File",
      "description": "Reference/Target volume.",
      "value-key": "[REFVOL]",
      "command-line-flag": "-r",
      "optional": false
    },
    {
      "id": "inputvol",
      "name": "Input Volume",
      "type": "File",
      "description": "Input/Moveable volume.",
      "value-key": "[INPUTVOL]",
      "command-line-flag": "-i",
      "optional": false
    },
    {
      "id": "outputvol",
      "name": "Output Volume",
      "type": "String",
      "description": "Input resampled to reference.",
      "value-key": "[OUTPUTVOL]",
      "command-line-flag": "-o",
      "optional": false
    },
    {
      "id": "fslmat",
      "name": "FSL Matrix File",
      "type": "String",
      "description": "Specifies explicitly where to store the FSL registration matrix.",
      "value-key": "[FSLMAT]",
      "command-line-flag": "-fslmat",
      "optional": true
    },
    {
      "id": "regmat",
      "name": "Register Matrix File",
      "type": "String",
      "description": "Get registration matrix in register.dat file format.",
      "value-key": "[REGMAT]",
      "command-line-flag": "-regmat",
      "optional": true
    },
    {
      "id": "xfmmat",
      "name": "MNI XFM File",
      "type": "String",
      "description": "Get registration matrix as MNI xfm file.",
      "value-key": "[XFMMAT]",
      "command-line-flag": "-xfmmat",
      "optional": true
    },
    {
      "id": "ltamat",
      "name": "MGH LTA File",
      "type": "String",
      "description": "Get registration matrix as MGH lta file.",
      "value-key": "[LTAMAT]",
      "command-line-flag": "-ltamat",
      "optional": true
    },
    {
      "id": "noinitgeom",
      "name": "No Initial Geometry Flag",
      "type": "Flag",
      "description": "Do not initialize matrix based on geometry.",
      "value-key": "[NOINITGEOM]",
      "command-line-flag": "-noinitgeom",
      "optional": true
    },
    {
      "id": "applyxfm",
      "name": "Apply Transformation File",
      "type": "File",
      "description": "Apply a transformation file to the input without registration.",
      "value-key": "[APPLYXFM]",
      "command-line-flag": "-applyxfm",
      "optional": true
    },
    {
      "id": "applyinitxfm",
      "name": "Apply Initial Transformation Flag",
      "type": "Flag",
      "description": "Apply initial transformation to the input without registration.",
      "value-key": "[APPLYINITXFM]",
      "command-line-flag": "-applyinitxfm",
      "optional": true
    },
    {
      "id": "initxfm",
      "name": "Initial Transformation File",
      "type": "File",
      "description": "Use this as an initial matrix for registration.",
      "value-key": "[INITXFM]",
      "command-line-flag": "-initxfm",
      "optional": true
    },
    {
      "id": "maxangle",
      "name": "Max Angle",
      "type": "Number",
      "description": "Only search over +/- max angle degrees.",
      "value-key": "[MAXANGLE]",
      "command-line-flag": "-maxangle",
      "optional": true
    },
    {
      "id": "interp",
      "name": "Interpolation Method",
      "type": "String",
      "description": "Interpolation method: trilinear, nearestneighbour, sinc.",
      "value-key": "[INTERP]",
      "command-line-flag": "-interp",
      "optional": true
    },
    {
      "id": "dof",
      "name": "Degrees of Freedom",
      "type": "Number",
      "description": "Use degrees of freedom instead of 6.",
      "value-key": "[DOF]",
      "command-line-flag": "-dof",
      "optional": true
    },
    {
      "id": "bins",
      "name": "Bins",
      "type": "Number",
      "description": "Number of bins to use (default 256).",
      "value-key": "[BINS]",
      "command-line-flag": "-bins",
      "optional": true
    },
    {
      "id": "cost",
      "name": "Objective Function",
      "type": "String",
      "description": "Objective function: mutualinfo, corratio (default), normcorr, normmi, leastsq.",
      "value-key": "[COST]",
      "command-line-flag": "-cost",
      "optional": true
    },
    {
      "id": "tmpdir",
      "name": "Temporary Directory",
      "type": "String",
      "description": "Specify temporary directory.",
      "value-key": "[TMPDIR]",
      "command-line-flag": "-tmpdir",
      "optional": true
    },
    {
      "id": "nocleanup",
      "name": "No Cleanup Flag",
      "type": "Flag",
      "description": "Do not delete temporary files.",
      "value-key": "[NOCLEANUP]",
      "command-line-flag": "-nocleanup",
      "optional": true
    },
    {
      "id": "cleanup",
      "name": "Cleanup Flag",
      "type": "Flag",
      "description": "Delete temporary files (default).",
      "value-key": "[CLEANUP]",
      "command-line-flag": "-cleanup",
      "optional": true
    },
    {
      "id": "subject",
      "name": "Subject",
      "type": "String",
      "description": "Only puts it in the register.dat file.",
      "value-key": "[SUBJECT]",
      "command-line-flag": "-subject",
      "optional": true
    },
    {
      "id": "version",
      "name": "Version Flag",
      "type": "Flag",
      "description": "Print version and exit.",
      "value-key": "[VERSION]",
      "command-line-flag": "-version",
      "optional": true
    },
    {
      "id": "help",
      "name": "Help Flag",
      "type": "Flag",
      "description": "Print help and exit.",
      "value-key": "[HELP]",
      "command-line-flag": "-help",
      "optional": true
    }
  ],
  "output-files": [
    {
      "id": "fslmat_output",
      "name": "FSL Matrix Output",
      "description": "The registration matrix in FSL format.",
      "path-template": "[OUTPUT_VOLUME].fslmat",
      "optional": true
    }
  ],
  "author": "FreeSurfer Developers",
  "tool-version": "7.4.1",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}
