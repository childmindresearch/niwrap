{
  "name": "mri_ms_fitparms",
  "description": "Tool for estimating T1 and PD values from FLASH images and applying transformations.",
  "author": "FreeSurfer Developers",
  "command-line": "mri_ms_fitparms [VOLUMES] [OUTPUT_DIR] [AFI_FLAG] [AIT_FLAG] [AT] [CONFORM_FLAG] [CORRECT_FLAG] [CUBIC_FLAG] [DEBUG_SLICE_FLAG] [DEBUG_VOXEL_FLAG] [DT] [FA] [FA_SCALE] [FAF] [FSMOOTH] [INVERT_FLAG] [MOMENTUM] [MAX_T2] [N_ITER] [NEAREST_FLAG] [NOCOMPRESS_FLAG] [NOSYNTH_FLAG] [RESIDUALS] [SMOOTH_SIGMA] [SCALE_FACTOR] [SINC_FLAG] [TRANSFORM_FLAG] [ECHO_TIME] [REPETITION_TIME] [TRILINEAR_FLAG] [TUKEY_FLAG] [HELP_FLAG] [USE_BRAIN_MASK_FLAG] [WRITE_INTERMEDIATE] [EXTRACT_SUBIMAGE] [WINDOW_FLAG]",
  "schema-version": "0.5",
  "inputs": [
    {
      "value-key": "[VOLUMES]",
      "description": "List of 3D FLASH images with different flip angles.",
      "type": "File",
      "list": true,
      "optional": false,
      "id": "volumes",
      "name": "Input Volumes"
    },
    {
      "value-key": "[OUTPUT_DIR]",
      "description": "Output directory",
      "type": "String",
      "optional": false,
      "id": "output_dir",
      "name": "Output Directory"
    },
    {
      "command-line-flag": "-afi",
      "description": "Designate flip angle map to use with nominal value 60 degrees",
      "value-key": "[AFI_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "afi_flag",
      "name": "AFI Flag"
    },
    {
      "command-line-flag": "-ait",
      "description": "Apply inverse of transform",
      "value-key": "[AIT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "ait_flag",
      "name": "Inverse Transform Flag"
    },
    {
      "command-line-flag": "-at",
      "description": "Set acquisition time",
      "value-key": "[AT]",
      "type": "String",
      "optional": true,
      "id": "at",
      "name": "Acquisition Time"
    },
    {
      "command-line-flag": "-conform",
      "description": "Interpolate volume to be isotropic 1mm^3",
      "value-key": "[CONFORM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "conform_flag",
      "name": "Conform to Isotropic 1mm^3"
    },
    {
      "command-line-flag": "-correct",
      "description": "Correct proton density map (PD) by T2* estimates",
      "value-key": "[CORRECT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "correct_flag",
      "name": "Correct PD by T2*"
    },
    {
      "command-line-flag": "-cubic",
      "description": "Use cubic interpolation (NOT WORKING!)",
      "value-key": "[CUBIC_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "cubic_flag",
      "name": "Cubic Interpolation Flag"
    },
    {
      "command-line-flag": "-debug_slice",
      "description": "Debug slice processing ???",
      "value-key": "[DEBUG_SLICE_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "debug_slice_flag",
      "name": "Debug Slice Flag"
    },
    {
      "command-line-flag": "-debug_voxel",
      "description": "Debug voxel processing ???",
      "value-key": "[DEBUG_VOXEL_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "debug_voxel_flag",
      "name": "Debug Voxel Flag"
    },
    {
      "command-line-flag": "-dt",
      "description": "Set time step dt ???",
      "value-key": "[DT]",
      "type": "String",
      "optional": true,
      "id": "dt",
      "name": "Time Step"
    },
    {
      "command-line-flag": "-fa",
      "description": "Set flip angle",
      "value-key": "[FA]",
      "type": "String",
      "optional": true,
      "id": "fa",
      "name": "Flip Angle"
    },
    {
      "command-line-flag": "-fa_scale",
      "description": "Set value to scale all flip angles by",
      "value-key": "[FA_SCALE]",
      "type": "Number",
      "optional": true,
      "id": "fa_scale",
      "name": "Flip Angle Scale"
    },
    {
      "command-line-flag": "-faf",
      "description": "Designate flip angle map to use with specified control points",
      "value-key": "[FAF]",
      "type": "String",
      "optional": true,
      "id": "faf",
      "name": "Flip Angle Map"
    },
    {
      "command-line-flag": "-fsmooth",
      "description": "Smooth flip angle map for X iterations of soap bubble smoothing",
      "value-key": "[FSMOOTH]",
      "type": "Number",
      "optional": true,
      "id": "fsmooth",
      "name": "Flip Angle Smoothing"
    },
    {
      "command-line-flag": "-i",
      "description": "Invert volumes",
      "value-key": "[INVERT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "invert_flag",
      "name": "Invert Flag"
    },
    {
      "command-line-flag": "-m",
      "description": "Set momentum",
      "value-key": "[MOMENTUM]",
      "type": "String",
      "optional": true,
      "id": "momentum",
      "name": "Momentum"
    },
    {
      "command-line-flag": "-max",
      "description": "Set max T2*",
      "value-key": "[MAX_T2]",
      "type": "String",
      "optional": true,
      "id": "max_t2",
      "name": "Max T2*"
    },
    {
      "command-line-flag": "-n",
      "description": "Perform estimation/motion correction X times",
      "value-key": "[N_ITER]",
      "type": "Number",
      "optional": true,
      "id": "n_iter",
      "name": "Iterations"
    },
    {
      "command-line-flag": "-nearest",
      "description": "Use nearest-neighbor interpolation",
      "value-key": "[NEAREST_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "nearest_flag",
      "name": "Nearest Neighbor Interpolation"
    },
    {
      "command-line-flag": "-nocompress",
      "description": "Do not compress output volumes (save as .mgh)",
      "value-key": "[NOCOMPRESS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "nocompress_flag",
      "name": "No Compress Flag"
    },
    {
      "command-line-flag": "-nosynth",
      "description": "Disable volume synthesis",
      "value-key": "[NOSYNTH_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "nosynth_flag",
      "name": "No Synthesis Flag"
    },
    {
      "command-line-flag": "-r",
      "description": "Write out residuals to designated location",
      "value-key": "[RESIDUALS]",
      "type": "String",
      "optional": true,
      "id": "residuals",
      "name": "Residuals"
    },
    {
      "command-line-flag": "-s",
      "description": "Smooth faf field with sigma=X",
      "value-key": "[SMOOTH_SIGMA]",
      "type": "Number",
      "optional": true,
      "id": "smooth_sigma",
      "name": "Faf Smoothing Sigma"
    },
    {
      "command-line-flag": "-scale",
      "description": "Scale volumes by X after reading",
      "value-key": "[SCALE_FACTOR]",
      "type": "Number",
      "optional": true,
      "id": "scale_factor",
      "name": "Scale Factor"
    },
    {
      "command-line-flag": "-sinc",
      "description": "Use sinc interpolation (default window width is 6)",
      "value-key": "[SINC_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "sinc_flag",
      "name": "Sinc Interpolation Flag"
    },
    {
      "command-line-flag": "-t",
      "description": "Apply transform to output volumes",
      "value-key": "[TRANSFORM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "transform_flag",
      "name": "Transform Flag"
    },
    {
      "command-line-flag": "-te",
      "description": "Set echo time (TE) in ms",
      "value-key": "[ECHO_TIME]",
      "type": "Number",
      "optional": true,
      "id": "echo_time",
      "name": "Echo Time"
    },
    {
      "command-line-flag": "-tr",
      "description": "Set repetition time (TR) in ms",
      "value-key": "[REPETITION_TIME]",
      "type": "Number",
      "optional": true,
      "id": "repetition_time",
      "name": "Repetition Time"
    },
    {
      "command-line-flag": "-trilinear",
      "description": "Use trilinear interpolation",
      "value-key": "[TRILINEAR_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "trilinear_flag",
      "name": "Trilinear Interpolation Flag"
    },
    {
      "command-line-flag": "-tukey",
      "description": "Use Tukey bi-weight of residuals",
      "value-key": "[TUKEY_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "tukey_flag",
      "name": "Tukey Bi-weight Flag"
    },
    {
      "command-line-flag": "-u",
      "description": "Display help text",
      "value-key": "[HELP_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "help_flag",
      "name": "Help Flag"
    },
    {
      "command-line-flag": "-use_brain_mask",
      "description": "Compute a brain mask from the PD map and use it for registration",
      "value-key": "[USE_BRAIN_MASK_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "use_brain_mask_flag",
      "name": "Use Brain Mask Flag"
    },
    {
      "command-line-flag": "-w",
      "description": "Write out intermediate results every X iterations",
      "value-key": "[WRITE_INTERMEDIATE]",
      "type": "Number",
      "optional": true,
      "id": "write_intermediate",
      "name": "Write Intermediate Frequency"
    },
    {
      "command-line-flag": "-extract",
      "description": "Extract a subimage for each input image, specified by x0 y0 z0 dx dy dz",
      "value-key": "[EXTRACT_SUBIMAGE]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "extract_subimage",
      "name": "Subimage Extraction Coordinates"
    },
    {
      "command-line-flag": "-window",
      "description": "Not implemented",
      "value-key": "[WINDOW_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "window_flag",
      "name": "Window Flag"
    }
  ],
  "output-files": [
    {
      "path-template": "T1.mgz",
      "description": "Compressed T1 map",
      "optional": true,
      "id": "t1_map",
      "name": "T1 Map"
    },
    {
      "path-template": "PD.mgz",
      "description": "Compressed Proton Density map",
      "optional": true,
      "id": "pd_map",
      "name": "PD Map"
    },
    {
      "path-template": "vol0.mgz",
      "description": "Compressed Synthetic volume for input vol_1, in motion corrected space",
      "optional": true,
      "id": "vol0_synthetic",
      "name": "Synthetic Volume for vol_1"
    },
    {
      "path-template": "vol0.lta",
      "description": "Motion correction affine information for vol_1",
      "optional": true,
      "id": "vol0_affine",
      "name": "Affine Information for vol_1"
    },
    {
      "path-template": "vol1.mgz",
      "description": "Compressed Synthetic volume for input vol_2, in motion corrected space",
      "optional": true,
      "id": "vol1_synthetic",
      "name": "Synthetic Volume for vol_2"
    },
    {
      "path-template": "vol1.lta",
      "description": "Motion correction affine information for vol_2",
      "optional": true,
      "id": "vol1_affine",
      "name": "Affine Information for vol_2"
    }
  ],
  "tool-version": "7.4.1",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}
