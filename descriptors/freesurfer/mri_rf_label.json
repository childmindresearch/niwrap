{
  "name": "mri_rf_label",
  "description": "MRI automatic tissue labeling using a Gaussian Classifier Atlas (GCA).",
  "command-line": "mri_rf_label [INPUT_VOLUMES] [TRANSFORM_FILE] [GCAFILE] [OUTPUT_VOLUME] [CROSS_SEQUENCE_FLAG] [NOGIBBS_FLAG] [WM_PATH] [CONFORM_FLAG] [NORMPD_FLAG] [GCA_TL] [DEBUG_VOXEL] [DEBUG_NODE] [DEBUG_LABEL] [TR] [TE] [ALPHA] [EXAMPLE] [PTHRESH] [NITER] [NOVAR_FLAG] [REGULARIZE] [NOHIPPO_FLAG] [FWM] [MRI_VOL] [HEQ] [RENORM] [FLASH_FLAG] [FLASH_PARAMS] [RENORMALIZE] [SET_INPUT] [HISTOGRAM_FLAG] [COND_DENSITY_MEAN] [SNAPSHOTS] [MASK] [EXPAND] [MAX_ITER] [FILTER_MODE] [LONGITUDINAL_VOL] [LONGITUDINAL_LTA] [RELABEL_UNLIKELY_FLAG]",
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "Input volume(s)",
      "id": "input_volumes",
      "name": "Input volumes",
      "value-key": "[INPUT_VOLUMES]",
      "type": "File",
      "optional": false,
      "list": true
    },
    {
      "description": "Transform file",
      "id": "transform_file",
      "name": "Transform file",
      "value-key": "[TRANSFORM_FILE]",
      "type": "File",
      "optional": false
    },
    {
      "description": "GCA file",
      "id": "gcafile",
      "name": "GCA file",
      "value-key": "[GCAFILE]",
      "type": "File",
      "optional": false
    },
    {
      "description": "Output volume",
      "id": "output_volume",
      "name": "Output volume",
      "value-key": "[OUTPUT_VOLUME]",
      "type": "String",
      "optional": false
    },
    {
      "command-line-flag": "-cross-sequence",
      "description": "Label a volume acquired with a sequence different than atlas",
      "id": "cross_sequence_flag",
      "name": "Cross sequence flag",
      "value-key": "[CROSS_SEQUENCE_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-nogibbs",
      "description": "Disable gibbs priors",
      "id": "nogibbs_flag",
      "name": "No gibbs flag",
      "value-key": "[NOGIBBS_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-wm",
      "description": "Use WM segmentation from provided file",
      "id": "wm_path",
      "name": "WM segmentation path",
      "value-key": "[WM_PATH]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-conform",
      "description": "Interpolate volume to be isotropic 1mm^3",
      "id": "conform_flag",
      "name": "Conform flag",
      "value-key": "[CONFORM_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-normpd",
      "description": "Normalize PD image to GCA means",
      "id": "normpd_flag",
      "name": "Normalize PD flag",
      "value-key": "[NORMPD_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-tl",
      "description": "Use file to label the thin temporal lobe",
      "id": "gca_tl",
      "name": "GCA thin temporal lobe",
      "value-key": "[GCA_TL]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-debug_voxel",
      "description": "Debug voxel at specified coordinates",
      "id": "debug_voxel",
      "name": "Debug voxel",
      "value-key": "[DEBUG_VOXEL]",
      "type": "Number",
      "list": true,
      "optional": true,
      "min-list-entries": 3,
      "max-list-entries": 3
    },
    {
      "command-line-flag": "-debug_node",
      "description": "Debug node at specified coordinates",
      "id": "debug_node",
      "name": "Debug node",
      "value-key": "[DEBUG_NODE]",
      "type": "Number",
      "list": true,
      "optional": true,
      "min-list-entries": 3,
      "max-list-entries": 3
    },
    {
      "command-line-flag": "-debug_label",
      "description": "Debug label at specified index",
      "id": "debug_label",
      "name": "Debug label",
      "value-key": "[DEBUG_LABEL]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-tr",
      "description": "Set TR in msec",
      "id": "tr",
      "name": "TR",
      "value-key": "[TR]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-te",
      "description": "Set TE in msec",
      "id": "te",
      "name": "TE",
      "value-key": "[TE]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-alpha",
      "description": "Set alpha in radians",
      "id": "alpha",
      "name": "Alpha",
      "value-key": "[ALPHA]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-example",
      "description": "Use T1 (mri_vol) and segmentation as example",
      "id": "example",
      "name": "Example T1 and segmentation",
      "value-key": "[EXAMPLE]",
      "type": "File",
      "list": true,
      "optional": true
    },
    {
      "command-line-flag": "-pthresh",
      "description": "Use p threshold for adaptive renormalization",
      "id": "pthresh",
      "name": "P threshold",
      "value-key": "[PTHRESH]",
      "type": "Number",
      "optional": true,
      "default-value": 0.7
    },
    {
      "command-line-flag": "-niter",
      "description": "Apply max likelihood for n iterations",
      "id": "niter",
      "name": "Number of iterations",
      "value-key": "[NITER]",
      "type": "Number",
      "optional": true,
      "default-value": 2
    },
    {
      "command-line-flag": "-novar",
      "description": "Do not use variance in classification",
      "id": "novar_flag",
      "name": "No variance flag",
      "value-key": "[NOVAR_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-regularize",
      "description": "Regularize variance to be sigma+nC(noise)",
      "id": "regularize",
      "name": "Regularize variance",
      "value-key": "[REGULARIZE]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-nohippo",
      "description": "Do not auto-edit hippocampus",
      "id": "nohippo_flag",
      "name": "No hippocampus edit flag",
      "value-key": "[NOHIPPO_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-fwm",
      "description": "Use fixed white matter segmentation from wm",
      "id": "fwm",
      "name": "Fixed white matter segmentation",
      "value-key": "[FWM]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-mri",
      "description": "Write most likely MR volume to specified file",
      "id": "mri_vol",
      "name": "MR volume",
      "value-key": "[MRI_VOL]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-heq",
      "description": "Use histogram equalization from specified volume",
      "id": "heq",
      "name": "Histogram equalization",
      "value-key": "[HEQ]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-renorm",
      "description": "Renormalize using predicted intensity values",
      "id": "renorm",
      "name": "Renormalize using predicted intensities",
      "value-key": "[RENORM]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-flash",
      "description": "Use FLASH forward model to predict intensity values",
      "id": "flash_flag",
      "name": "FLASH model flag",
      "value-key": "[FLASH_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-flash_params",
      "description": "Use FLASH forward model and tissue params from file",
      "id": "flash_params",
      "name": "FLASH model parameters",
      "value-key": "[FLASH_PARAMS]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-renormalize",
      "description": "Renorm class means iter times after initial label with window of wsize",
      "id": "renormalize",
      "name": "Renormalize class means",
      "value-key": "[RENORMALIZE]",
      "type": "Number",
      "list": true,
      "optional": true
    },
    {
      "command-line-flag": "-r",
      "description": "Set input volume",
      "id": "set_input",
      "name": "Set input volume",
      "value-key": "[SET_INPUT]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-h",
      "description": "Use GCA to histogram normalize input image",
      "id": "histogram_flag",
      "name": "Use GCA for histogram normalization",
      "value-key": "[HISTOGRAM_FLAG]",
      "type": "Flag",
      "optional": true
    },
    {
      "command-line-flag": "-a",
      "description": "Mean filter n times to conditional densities",
      "id": "cond_density_mean",
      "name": "Conditional density mean filter",
      "value-key": "[COND_DENSITY_MEAN]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-w",
      "description": "Write snapshots of gibbs process every n times to filename",
      "id": "snapshots",
      "name": "Gibbs process snapshots",
      "value-key": "[SNAPSHOTS]",
      "type": "String",
      "list": true,
      "optional": true,
      "min-list-entries": 2,
      "max-list-entries": 2
    },
    {
      "command-line-flag": "-m",
      "description": "Use mri_vol to mask final labeling",
      "id": "mask",
      "name": "Mask volume",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-e",
      "description": "Expand",
      "id": "expand",
      "name": "Expand",
      "value-key": "[EXPAND]",
      "type": "Number",
      "optional": true
    },
    {
      "command-line-flag": "-n",
      "description": "Set max iterations",
      "id": "max_iter",
      "name": "Max iterations",
      "value-key": "[MAX_ITER]",
      "type": "Number",
      "optional": true,
      "default-value": 200
    },
    {
      "command-line-flag": "-f",
      "description": "Filter labeled volume with threshold t mode filter f times",
      "id": "filter_mode",
      "name": "Filter with threshold",
      "value-key": "[FILTER_MODE]",
      "type": "Number",
      "list": true,
      "optional": true,
      "min-list-entries": 2,
      "max-list-entries": 2,
      "default-value": [0, 0.5]
    },
    {
      "command-line-flag": "-L",
      "description": "Longitudinal processing: mri_vol is label from tp1, LTA is registration from tp1 to current data",
      "id": "longitudinal_vol",
      "name": "Longitudinal processing volume",
      "value-key": "[LONGITUDINAL_VOL]",
      "type": "File",
      "optional": true
    },
    {
      "description": "Longitudinal LTA registration",
      "id": "longitudinal_lta",
      "name": "Longitudinal LTA",
      "value-key": "[LONGITUDINAL_LTA]",
      "type": "File",
      "optional": true
    },
    {
      "command-line-flag": "-RELABEL_UNLIKELY",
      "description": "Reclassify voxels using a Gaussian window to recomute priors and likelihoods",
      "id": "relabel_unlikely_flag",
      "name": "Relabel unlikely flag",
      "value-key": "[RELABEL_UNLIKELY_FLAG]",
      "type": "Number",
      "list": true,
      "optional": true,
      "min-list-entries": 4,
      "max-list-entries": 4
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_VOLUME]",
      "description": "Output volume from mri_ca_label",
      "id": "outvol",
      "name": "Output Volume",
      "optional": false
    }
  ],
  "author": "FreeSurfer Developers",
  "tool-version": "7.4.1",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}
