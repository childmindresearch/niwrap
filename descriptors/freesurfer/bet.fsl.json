{
  "tool-version": "7.4.1",
  "name": "bet.fsl",
  "author": "FreeSurfer Developers",
  "description": "Automated brain extraction tool for FSL",
  "command-line": "bet.fsl [INFILE] [MASKFILE] [FRACTIONAL_INTENSITY] [VG_FRACTIONAL_INTENSITY] [CENTER_OF_GRAVITY] [OVERLAY] [BINARY_MASK] [APPROX_SKULL] [NO_SEG_OUTPUT] [VTK_MESH] [HEAD_RADIUS] [THRESHOLDING] [ROBUST_ITERS] [RESIDUAL_OPTIC_CLEANUP] [REDUCE_BIAS] [SLICE_PADDING] [WHOLE_SET_MASK] [ADDITIONAL_SURFACES] [ADDITIONAL_SURFACES_T2] [VERBOSE] [DEBUG]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "Input image (e.g. img.nii.gz)",
      "value-key": "[INFILE]",
      "type": "File",
      "optional": false,
      "id": "infile",
      "name": "Input file"
    },
    {
      "description": "Output brain mask (e.g. img_bet.nii.gz)",
      "value-key": "[MASKFILE]",
      "type": "String",
      "optional": false,
      "id": "maskfile",
      "name": "Mask file",
      "default-value": "img_bet"
    },
    {
      "command-line-flag": "-f",
      "description": "Fractional intensity threshold (0->1); default=0.5; smaller values give larger brain outline estimates",
      "value-key": "[FRACTIONAL_INTENSITY]",
      "type": "Number",
      "maximum": 1,
      "minimum": 0,
      "integer": false,
      "optional": true,
      "id": "fractional_intensity",
      "name": "Fractional intensity threshold"
    },
    {
      "command-line-flag": "-g",
      "description": "Vertical gradient in fractional intensity threshold (-1->1); default=0; positive values give larger brain outline at bottom, smaller at top",
      "value-key": "[VG_FRACTIONAL_INTENSITY]",
      "type": "Number",
      "maximum": 1,
      "minimum": -1,
      "integer": false,
      "optional": true,
      "id": "vg_fractional_intensity",
      "name": "Vertical gradient fractional intensity threshold"
    },
    {
      "command-line-flag": "-c",
      "description": "The xyz coordinates of the center of gravity (voxels, not mm) of initial mesh surface. Must have exactly three numerical entries in the list (3-vector).",
      "value-key": "[CENTER_OF_GRAVITY]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "center_of_gravity",
      "min-list-entries": 3,
      "name": "Center of gravity vector"
    },
    {
      "command-line-flag": "-o",
      "description": "Generate brain surface outline overlaid onto original image",
      "value-key": "[OVERLAY]",
      "type": "Flag",
      "optional": true,
      "id": "overlay",
      "name": "Overlay flag"
    },
    {
      "command-line-flag": "-m",
      "description": "Generate binary brain mask",
      "value-key": "[BINARY_MASK]",
      "type": "Flag",
      "optional": true,
      "id": "binary_mask",
      "name": "Binary mask flag"
    },
    {
      "command-line-flag": "-s",
      "description": "Generate approximate skull image",
      "value-key": "[APPROX_SKULL]",
      "type": "Flag",
      "optional": true,
      "id": "approx_skull",
      "name": "Approximate skull flag"
    },
    {
      "command-line-flag": "-n",
      "description": "Don't generate segmented brain image output",
      "value-key": "[NO_SEG_OUTPUT]",
      "type": "Flag",
      "optional": true,
      "id": "no_seg_output",
      "name": "No segmented brain image flag"
    },
    {
      "command-line-flag": "-e",
      "description": "Generate brain surface as mesh in .vtk format",
      "value-key": "[VTK_MESH]",
      "type": "Flag",
      "optional": true,
      "id": "vtk_mesh",
      "name": "VTK format brain surface mesh flag"
    },
    {
      "command-line-flag": "-r",
      "description": "Head radius (mm not voxels); initial surface sphere is set to half of this",
      "value-key": "[HEAD_RADIUS]",
      "type": "Number",
      "optional": true,
      "id": "head_radius",
      "name": "Head Radius"
    },
    {
      "command-line-flag": "-t",
      "description": "Apply thresholding to segmented brain image and mask",
      "value-key": "[THRESHOLDING]",
      "type": "Flag",
      "optional": true,
      "id": "thresholding",
      "name": "Threshold segmented image flag"
    },
    {
      "command-line-flag": "-R",
      "description": "Robust brain centre estimation (iterates BET several times)",
      "value-key": "[ROBUST_ITERS]",
      "type": "Flag",
      "optional": true,
      "id": "robust_iters",
      "name": "Robust iterations flag"
    },
    {
      "command-line-flag": "-S",
      "description": "Eye & optic nerve cleanup (can be useful in SIENA)",
      "value-key": "[RESIDUAL_OPTIC_CLEANUP]",
      "type": "Flag",
      "optional": true,
      "id": "residual_optic_cleanup",
      "name": "Residual optic cleanup flag"
    },
    {
      "command-line-flag": "-B",
      "description": "Bias field & neck cleanup (can be useful in SIENA)",
      "value-key": "[REDUCE_BIAS]",
      "type": "Flag",
      "optional": true,
      "id": "reduce_bias",
      "name": "Bias reduction flag"
    },
    {
      "command-line-flag": "-Z",
      "description": "Improve BET if FOV is very small in Z (by temporarily padding end slices)",
      "value-key": "[SLICE_PADDING]",
      "type": "Flag",
      "optional": true,
      "id": "slice_padding",
      "name": "Slice padding flag"
    },
    {
      "command-line-flag": "-F",
      "description": "Apply to 4D FMRI data (uses -f 0.3 and dilates brain mask slightly)",
      "value-key": "[WHOLE_SET_MASK]",
      "type": "Flag",
      "optional": true,
      "id": "whole_set_mask",
      "name": "Mask-whole-set flag"
    },
    {
      "command-line-flag": "-A",
      "description": "Run bet2 and then betsurf to get additional skull and scalp surfaces (includes registrations)",
      "value-key": "[ADDITIONAL_SURFACES]",
      "type": "Flag",
      "optional": true,
      "id": "additional_surfaces",
      "name": "Additional surfaces flag"
    },
    {
      "command-line-flag": "-A2",
      "description": "As with -A, when also feeding in non-brain-extracted T2 (includes registrations)",
      "value-key": "[ADDITIONAL_SURFACES_T2]",
      "type": "File",
      "optional": true,
      "id": "additional_surfaces_t2",
      "name": "Additional surfaces with T2"
    },
    {
      "command-line-flag": "-v",
      "description": "Verbose (switch on diagnostic messages)",
      "value-key": "[VERBOSE]",
      "type": "Flag",
      "optional": true,
      "id": "verbose",
      "name": "Verbose Flag"
    },
    {
      "command-line-flag": "-d",
      "description": "Debug (don't delete temporary intermediate images)",
      "value-key": "[DEBUG]",
      "type": "Flag",
      "optional": true,
      "id": "debug",
      "name": "Debug Flag"
    }
  ],
  "output-files": [
    {
      "path-template": "[MASKFILE].nii.gz",
      "description": "Main default mask output of BET",
      "optional": true,
      "id": "outfile",
      "name": "Output mask file"
    },
    {
      "path-template": "[MASKFILE]_mask.nii.gz",
      "description": "Binary mask file (from -m option)",
      "optional": true,
      "id": "binary_mask",
      "name": "Output binary mask file"
    },
    {
      "path-template": "[MASKFILE]_overlay.nii.gz",
      "description": "Overlaid brain surface onto original image",
      "optional": true,
      "id": "overlay_file",
      "name": "Surface overlay file"
    },
    {
      "path-template": "[MASKFILE]_skull.nii.gz",
      "description": "Approximate skull image file",
      "optional": true,
      "id": "approx_skull_img",
      "name": "Approximate skull file"
    },
    {
      "path-template": "[MASKFILE]_mesh.vtk",
      "description": "Mesh in VTK format",
      "optional": true,
      "id": "output_vtk_mesh",
      "name": "VTK mesh"
    },
    {
      "path-template": "[MASKFILE]_skull_mask.nii.gz",
      "description": "Output mask for skull image",
      "optional": true,
      "id": "skull_mask",
      "name": "Skull mask image"
    },
    {
      "path-template": "[MASKFILE]_inskull_mask.nii.gz",
      "description": "The in-skull mask file from betsurf",
      "optional": true,
      "id": "out_inskull_mask",
      "name": "Output in-skull mask file"
    },
    {
      "path-template": "[MASKFILE]_inskull_mesh.nii.gz",
      "description": "The in-skull mesh file from betsurf",
      "optional": true,
      "id": "out_inskull_mesh",
      "name": "Output in-skull mesh file"
    },
    {
      "path-template": "[MASKFILE]_inskull_mesh.off",
      "description": "The in-skull mesh .off file from betsurf",
      "optional": true,
      "id": "out_inskull_off",
      "name": "Output in-skull mesh off file"
    },
    {
      "path-template": "[MASKFILE]_outskin_mask.nii.gz",
      "description": "The out-skin mask file from betsurf",
      "optional": true,
      "id": "out_outskin_mask",
      "name": "Output out-skin mask file"
    },
    {
      "path-template": "[MASKFILE]_outskin_mesh.nii.gz",
      "description": "The out-skin mesh file from betsurf",
      "optional": true,
      "id": "out_outskin_mesh",
      "name": "Output out-skin mesh file"
    },
    {
      "path-template": "[MASKFILE]_outskin_mesh.off",
      "description": "The out-skin mesh .off file from betsurf",
      "optional": true,
      "id": "out_outskin_off",
      "name": "Output out-skin mesh off file"
    },
    {
      "path-template": "[MASKFILE]_outskull_mask.nii.gz",
      "description": "The out-skull mask file from betsurf",
      "optional": true,
      "id": "out_outskull_mask",
      "name": "Output out-skull mask file"
    },
    {
      "path-template": "[MASKFILE]_outskull_mesh.nii.gz",
      "description": "The out-skull mesh file from betsurf",
      "optional": true,
      "id": "out_outskull_mesh",
      "name": "Output out-skull mesh file"
    },
    {
      "path-template": "[MASKFILE]_outskull_mesh.off",
      "description": "The out-skull mesh .off file from betsurf",
      "optional": true,
      "id": "out_outskull_off",
      "name": "Output out-skull mesh off file"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
