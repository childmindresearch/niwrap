{
  "name": "run_samseg_long",
  "description": "Longitudinal image segmentation using SAMSEG.",
  "command-line": "run_samseg_long [TIMEPOINT] [OUTPUT] [LESION] [THRESHOLD] [SAMPLES] [BURNIN] [LESION_MASK_STRUCTURE] [LESION_MASK_PATTERN] [MODE] [ATLAS] [DEFORMATION_HYPERPRIOR] [GMM_HYPERPRIOR] [SAVE_WARP] [SAVE_MESH] [SAVE_POSTERIORS] [PALLIDUM_SEPARATE] [THREADS] [TP_TO_BASE_TRANSFORM] [FORCE_DIFFERENT_RESOLUTIONS] [HISTORY] [SHOWFIGS] [MOVIE]",
  "schema-version": "0.5",
  "inputs": [
    {
      "command-line-flag": "-t",
      "description": "Configure a timepoint with multiple inputs.",
      "value-key": "[TIMEPOINT]",
      "type": "File",
      "list": true,
      "optional": false,
      "id": "timepoint",
      "name": "Timepoint"
    },
    {
      "command-line-flag": "-o",
      "description": "Output directory.",
      "value-key": "[OUTPUT]",
      "type": "String",
      "optional": false,
      "id": "output",
      "name": "Output Directory"
    },
    {
      "command-line-flag": "--lesion",
      "description": "Enable lesion segmentation (requires tensorflow).",
      "value-key": "[LESION]",
      "type": "Flag",
      "optional": true,
      "id": "lesion",
      "name": "Lesion Segmentation Flag"
    },
    {
      "command-line-flag": "--threshold",
      "description": "Lesion threshold for final segmentation. Requires lesion segmentation.",
      "value-key": "[THRESHOLD]",
      "type": "Number",
      "optional": true,
      "id": "threshold",
      "name": "Lesion Threshold"
    },
    {
      "command-line-flag": "--samples",
      "description": "Number of samples for lesion segmentation. Requires lesion segmentation.",
      "value-key": "[SAMPLES]",
      "type": "Number",
      "optional": true,
      "id": "samples",
      "name": "Samples"
    },
    {
      "command-line-flag": "--burnin",
      "description": "Number of burn-in samples for lesion segmentation. Requires lesion segmentation.",
      "value-key": "[BURNIN]",
      "type": "Number",
      "optional": true,
      "id": "burnin",
      "name": "Burn-in Samples"
    },
    {
      "command-line-flag": "--lesion-mask-structure",
      "description": "Intensity mask brain structure. Requires lesion segmentation.",
      "value-key": "[LESION_MASK_STRUCTURE]",
      "type": "String",
      "optional": true,
      "id": "lesion_mask_structure",
      "name": "Lesion Mask Structure"
    },
    {
      "command-line-flag": "--lesion-mask-pattern",
      "description": "Lesion mask list: -1 below lesion mask structure mean, +1 above, 0 no mask. Requires lesion segmentation.",
      "value-key": "[LESION_MASK_PATTERN]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "lesion_mask_pattern",
      "name": "Lesion Mask Pattern"
    },
    {
      "command-line-flag": "-m",
      "description": "Output basenames for the input image mode.",
      "value-key": "[MODE]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "mode",
      "name": "Mode"
    },
    {
      "command-line-flag": "-a",
      "description": "Point to an alternative atlas directory.",
      "value-key": "[ATLAS]",
      "type": "String",
      "optional": true,
      "id": "atlas",
      "name": "Atlas Directory"
    },
    {
      "command-line-flag": "--deformation-hyperprior",
      "description": "Strength of the latent deformation hyperprior.",
      "value-key": "[DEFORMATION_HYPERPRIOR]",
      "type": "Number",
      "optional": true,
      "id": "deformation_hyperprior",
      "name": "Deformation Hyperprior"
    },
    {
      "command-line-flag": "--gmm-hyperprior",
      "description": "Strength of the latent GMM hyperprior.",
      "value-key": "[GMM_HYPERPRIOR]",
      "type": "Number",
      "optional": true,
      "id": "gmm_hyperprior",
      "name": "GMM Hyperprior"
    },
    {
      "command-line-flag": "--save-warp",
      "description": "Save the image->template warp fields.",
      "value-key": "[SAVE_WARP]",
      "type": "Flag",
      "optional": true,
      "id": "save_warp",
      "name": "Save Warp Flag"
    },
    {
      "command-line-flag": "--save-mesh",
      "description": "Save the final mesh of each timepoint in template space.",
      "value-key": "[SAVE_MESH]",
      "type": "Flag",
      "optional": true,
      "id": "save_mesh",
      "name": "Save Mesh Flag"
    },
    {
      "command-line-flag": "--save-posteriors",
      "description": "Save posterior volumes to the 'posteriors' subdirectory.",
      "value-key": "[SAVE_POSTERIORS]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "save_posteriors",
      "name": "Save Posteriors"
    },
    {
      "command-line-flag": "--pallidum-separate",
      "description": "Move pallidum outside of global white matter class. Use with T2/flair.",
      "value-key": "[PALLIDUM_SEPARATE]",
      "type": "Flag",
      "optional": true,
      "id": "pallidum_separate",
      "name": "Pallidum Separate Flag"
    },
    {
      "command-line-flag": "--threads",
      "description": "Number of threads to use. Defaults to OMP_NUM_THREADS or 1.",
      "value-key": "[THREADS]",
      "type": "Number",
      "optional": true,
      "id": "threads",
      "name": "Threads"
    },
    {
      "command-line-flag": "--tp-to-base-transform",
      "description": "Transformation file for each time point to base.",
      "value-key": "[TP_TO_BASE_TRANSFORM]",
      "type": "File",
      "list": true,
      "optional": true,
      "id": "tp_to_base_transform",
      "name": "TP to Base Transform"
    },
    {
      "command-line-flag": "--force-different-resolutions",
      "description": "Force run even if time points have different resolutions.",
      "value-key": "[FORCE_DIFFERENT_RESOLUTIONS]",
      "type": "Flag",
      "optional": true,
      "id": "force_different_resolutions",
      "name": "Force Different Resolutions Flag"
    },
    {
      "command-line-flag": "--history",
      "description": "Save history.",
      "value-key": "[HISTORY]",
      "type": "Flag",
      "optional": true,
      "id": "history",
      "name": "History Flag"
    },
    {
      "command-line-flag": "--showfigs",
      "description": "Show figures during run.",
      "value-key": "[SHOWFIGS]",
      "type": "Flag",
      "optional": true,
      "id": "showfigs",
      "name": "Show Figures Flag"
    },
    {
      "command-line-flag": "--movie",
      "description": "Show history as arrow key controlled time sequence.",
      "value-key": "[MOVIE]",
      "type": "Flag",
      "optional": true,
      "id": "movie",
      "name": "Movie Flag"
    }
  ],
  "author": "FreeSurfer Developers",
  "tool-version": "7.4.1",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}
