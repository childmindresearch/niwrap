{
  "tool-version": "7.4.1",
  "name": "mris_make_surfaces",
  "author": "FreeSurfer Developers",
  "descriptor-url": "https://github.com/freesurfer/freesurfer",
  "description": "Positions the tessellation of the cortical surface at the white matter surface, then the gray matter surface, generating surface files along with a curvature file and a surface file for cortical thickness.",
  "command-line": "mris_make_surfaces [SUBJECT_NAME] [HEMISPHERE] [WHITE] [PIAL] [WHITEONLY] [NOWHITE] [ORIG_WHITE] [ORIG_PIAL] [Q] [MAX_GRAY_SCALE] [C] [CORTEX] [W] [FIRST_WM_PEAK] [A_AVGS] [PA_AVGS] [WA_AVGS] [T1_VOL] [W_VOL] [LONG] [DURA_THRESH] [SDIR] [ERASE_CEREBELLUM] [WM_WEIGHT] [NSIGMA_ABOVE] [NSIGMA_BELOW] [T2_MIN_INSIDE] [T2_MAX_INSIDE] [T2_OUTSIDE_MIN] [T2_OUTSIDE_MAX] [MIN_PEAK_PCT] [BORDER_VALS_HIRES] [NO_UNITIZE] [INTENSITY] [CURV] [TSPRING] [NSPRING] [REPULSE] [SAVE_TARGET] [SAVE_RES] [V_VERTEXNO] [DIAG_VERTEX] [RIP] [SIGMA_WHITE] [SIGMA_PIAL] [OUTPUT] [MIN_BORDER_WHITE] [MAX_BORDER_WHITE] [MIN_GRAY_WHITE_BORDER] [MAX_GRAY] [MAX_GRAY_CSF_BORDER] [MIN_GRAY_CSF_BORDER] [MAX_CSF]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "Name of the subject",
      "value-key": "[SUBJECT_NAME]",
      "type": "String",
      "optional": false,
      "id": "subject_name",
      "name": "Subject Name"
    },
    {
      "description": "Brain hemisphere (r or l)",
      "value-key": "[HEMISPHERE]",
      "type": "String",
      "optional": false,
      "id": "hemisphere",
      "name": "Hemisphere"
    },
    {
      "command-line-flag": "-white",
      "description": "Output name for white surface (default is 'white'). Set to NOWHITE to generate but not save white surface.",
      "value-key": "[WHITE]",
      "type": "String",
      "optional": true,
      "id": "white",
      "name": "White Surface Name"
    },
    {
      "command-line-flag": "-pial",
      "description": "Output name for pial surface (default is 'pial').",
      "value-key": "[PIAL]",
      "type": "String",
      "optional": true,
      "id": "pial",
      "name": "Pial Surface Name"
    },
    {
      "command-line-flag": "-whiteonly",
      "description": "Only generate white matter surface.",
      "value-key": "[WHITEONLY]",
      "type": "Flag",
      "optional": true,
      "id": "whiteonly",
      "name": "White-only Flag"
    },
    {
      "command-line-flag": "-nowhite",
      "description": "Only generate pial surface.",
      "value-key": "[NOWHITE]",
      "type": "Flag",
      "optional": true,
      "id": "nowhite",
      "name": "No-White Flag"
    },
    {
      "command-line-flag": "-orig_white",
      "description": "Specify a white surface to start with.",
      "value-key": "[ORIG_WHITE]",
      "type": "String",
      "optional": true,
      "id": "orig_white",
      "name": "Original White Surface"
    },
    {
      "command-line-flag": "-orig_pial",
      "description": "Specify a pial surface to start with.",
      "value-key": "[ORIG_PIAL]",
      "type": "String",
      "optional": true,
      "id": "orig_pial",
      "name": "Original Pial Surface"
    },
    {
      "command-line-flag": "-q",
      "description": "Omit self-intersection and only generate gray/white surface.",
      "value-key": "[Q]",
      "type": "Flag",
      "optional": true,
      "id": "q",
      "name": "Q Flag"
    },
    {
      "command-line-flag": "-max_gray_scale",
      "description": "Set maximum gray scale value.",
      "value-key": "[MAX_GRAY_SCALE]",
      "type": "Number",
      "optional": true,
      "id": "max_gray_scale",
      "name": "Maximum Gray Scale"
    },
    {
      "command-line-flag": "-c",
      "description": "Do not create curvature and area files from white matter surface.",
      "value-key": "[C]",
      "type": "Flag",
      "optional": true,
      "id": "c",
      "name": "C Flag"
    },
    {
      "command-line-flag": "-cortex",
      "description": "Set to 0 to turn off creation of cortex label file.",
      "value-key": "[CORTEX]",
      "type": "Number",
      "optional": true,
      "id": "cortex",
      "name": "Cortex Flag"
    },
    {
      "command-line-flag": "-a",
      "description": "Average curvature values a number of times (default=10).",
      "value-key": "[A_AVGS]",
      "type": "Number",
      "optional": true,
      "id": "a_avgs",
      "name": "Average Curvature"
    },
    {
      "command-line-flag": "-first_wm_peak",
      "description": "Settle WM surface at first peak in intensity profile instead of highest.",
      "value-key": "[FIRST_WM_PEAK]",
      "type": "Flag",
      "optional": true,
      "id": "first_wm_peak",
      "name": "First WM Peak Flag"
    },
    {
      "command-line-flag": "-w",
      "description": "Unused argument",
      "value-key": "[W]",
      "type": "Number",
      "optional": true,
      "id": "w",
      "name": "W Argument"
    },
    {
      "command-line-flag": "-pa",
      "description": "Average pial curvature values a max of a number of times (default=16).",
      "value-key": "[PA_AVGS]",
      "type": "Number",
      "optional": true,
      "id": "pa_avgs",
      "name": "Average Pial Curvature"
    },
    {
      "command-line-flag": "-wa",
      "description": "Average white curvature values a max of a number of times (default=4).",
      "value-key": "[WA_AVGS]",
      "type": "Number",
      "optional": true,
      "id": "wa_avgs",
      "name": "Average White Curvature"
    },
    {
      "command-line-flag": "-T1",
      "description": "Specify T1 volume (default is brain).",
      "value-key": "[T1_VOL]",
      "type": "String",
      "optional": true,
      "id": "t1_vol",
      "name": "T1 Volume"
    },
    {
      "command-line-flag": "-wvol",
      "description": "Specify white volume and <hires> option.",
      "value-key": "[W_VOL]",
      "type": "String",
      "optional": true,
      "id": "w_vol",
      "name": "White Volume"
    },
    {
      "command-line-flag": "-long",
      "description": "Run longitudinal analysis.",
      "value-key": "[LONG]",
      "type": "Flag",
      "optional": true,
      "id": "long",
      "name": "Longitudinal Flag"
    },
    {
      "command-line-flag": "-dura_thresh",
      "description": "Set a threshold for the multi-echo mprage dura avoidance.",
      "value-key": "[DURA_THRESH]",
      "type": "Number",
      "optional": true,
      "id": "dura_thresh",
      "name": "Dura Threshold"
    },
    {
      "command-line-flag": "-SDIR",
      "description": "Specify SUBJECTS_DIR.",
      "value-key": "[SDIR]",
      "type": "String",
      "optional": true,
      "id": "sdir",
      "name": "Subjects Directory"
    },
    {
      "command-line-flag": "-erase_cerebellum",
      "description": "Erase cerebellar labeled voxels if aseg is loaded.",
      "value-key": "[ERASE_CEREBELLUM]",
      "type": "Flag",
      "optional": true,
      "id": "erase_cerebellum",
      "name": "Erase Cerebellum Flag"
    },
    {
      "command-line-flag": "-wm_weight",
      "description": "Weighting of WM mean in calculating T2 threshold of disallowed GM values, default=3.",
      "value-key": "[WM_WEIGHT]",
      "type": "Number",
      "optional": true,
      "id": "wm_weight",
      "name": "WM Weight"
    },
    {
      "command-line-flag": "-nsigma_above",
      "description": "# of sigmas above the mean to allow gray matter T2 intensities.",
      "value-key": "[NSIGMA_ABOVE]",
      "type": "Number",
      "optional": true,
      "id": "nsigma_above",
      "name": "Sigma Above"
    },
    {
      "command-line-flag": "-nsigma_below",
      "description": "# of sigmas below the mean to allow gray matter T2 intensities.",
      "value-key": "[NSIGMA_BELOW]",
      "type": "Number",
      "optional": true,
      "id": "nsigma_below",
      "name": "Sigma Below"
    },
    {
      "command-line-flag": "-T2_min_inside",
      "description": "Specify threshold for min T2 value allowed to be interior to the cortical ribbon.",
      "value-key": "[T2_MIN_INSIDE]",
      "type": "Number",
      "optional": true,
      "id": "t2_min_inside",
      "name": "Min T2 Inside"
    },
    {
      "command-line-flag": "-T2_max_inside",
      "description": "Specify threshold for max T2 value allowed to be interior to the cortical ribbon.",
      "value-key": "[T2_MAX_INSIDE]",
      "type": "Number",
      "optional": true,
      "id": "t2_max_inside",
      "name": "Max T2 Inside"
    },
    {
      "command-line-flag": "-T2_outside_min",
      "description": "Specify threshold for min T2 value outside of pial surface that will cause surface to deform outwards.",
      "value-key": "[T2_OUTSIDE_MIN]",
      "type": "Number",
      "optional": true,
      "id": "t2_outside_min",
      "name": "Min T2 Outside"
    },
    {
      "command-line-flag": "-T2_outside_max",
      "description": "Specify threshold for max T2 value outside of pial surface that will cause surface to deform outwards.",
      "value-key": "[T2_OUTSIDE_MAX]",
      "type": "Number",
      "optional": true,
      "id": "t2_outside_max",
      "name": "Max T2 Outside"
    },
    {
      "command-line-flag": "-min_peak_pct",
      "description": "Specify the pct of the histo peak in the local gm histogram to use as threshold for finding the local inside and outside gm thresholds.",
      "value-key": "[MIN_PEAK_PCT]",
      "type": "Number",
      "optional": true,
      "id": "min_peak_pct",
      "name": "Min Peak %"
    },
    {
      "command-line-flag": "-border-vals-hires",
      "description": "Turn on hires options in MRIScomputeBorderValues_new(). May not be helpful.",
      "value-key": "[BORDER_VALS_HIRES]",
      "type": "Flag",
      "optional": true,
      "id": "border_vals_hires",
      "name": "Border Vals Hires"
    },
    {
      "command-line-flag": "-no-unitize",
      "description": "Turn off face normal unitization.",
      "value-key": "[NO_UNITIZE]",
      "type": "Flag",
      "optional": true,
      "id": "no_unitize",
      "name": "No Unitize"
    },
    {
      "command-line-flag": "-intensity",
      "description": "Set weight of intensity cost.",
      "value-key": "[INTENSITY]",
      "type": "Number",
      "optional": true,
      "id": "intensity",
      "name": "Intensity Cost"
    },
    {
      "command-line-flag": "-curv",
      "description": "Set weight of curvature cost.",
      "value-key": "[CURV]",
      "type": "Number",
      "optional": true,
      "id": "curv",
      "name": "Curvature Cost"
    },
    {
      "command-line-flag": "-tspring",
      "description": "Set weight of tangential spring cost.",
      "value-key": "[TSPRING]",
      "type": "Number",
      "optional": true,
      "id": "tspring",
      "name": "Tangential Spring Cost"
    },
    {
      "command-line-flag": "-nspring",
      "description": "Set weight of normal spring cost.",
      "value-key": "[NSPRING]",
      "type": "Number",
      "optional": true,
      "id": "nspring",
      "name": "Normal Spring Cost"
    },
    {
      "command-line-flag": "-repulse",
      "description": "Set weight of repulsion force.",
      "value-key": "[REPULSE]",
      "type": "Number",
      "optional": true,
      "id": "repulse",
      "name": "Repulsion Cost"
    },
    {
      "command-line-flag": "-save-target",
      "description": "Save target surface for debugging.",
      "value-key": "[SAVE_TARGET]",
      "type": "Flag",
      "optional": true,
      "id": "save_target",
      "name": "Save Target"
    },
    {
      "command-line-flag": "-save-res",
      "description": "Save residual for debugging.",
      "value-key": "[SAVE_RES]",
      "type": "Flag",
      "optional": true,
      "id": "save_res",
      "name": "Save Residual"
    },
    {
      "command-line-flag": "-v",
      "description": "Set Gdiag_no to vertex number.",
      "value-key": "[V_VERTEXNO]",
      "type": "Number",
      "optional": true,
      "id": "v_vertexno",
      "name": "Vertex Number"
    },
    {
      "command-line-flag": "-diag-vertex",
      "description": "Set Gdiag_no to vertex number and turn off writing of cortex label or curvature files.",
      "value-key": "[DIAG_VERTEX]",
      "type": "Number",
      "optional": true,
      "id": "diag_vertex",
      "name": "Diagnostic Vertex"
    },
    {
      "command-line-flag": "-rip",
      "description": "Save ripflag as overlay. Specify full path including hemi, suffix, etc.",
      "value-key": "[RIP]",
      "type": "String",
      "optional": true,
      "id": "rip",
      "name": "Rip File"
    },
    {
      "command-line-flag": "-sigma-white",
      "description": "Save white surface sigma as overlay. Specify full path including hemi, suffix, etc.",
      "value-key": "[SIGMA_WHITE]",
      "type": "String",
      "optional": true,
      "id": "sigma_white",
      "name": "Sigma White File"
    },
    {
      "command-line-flag": "-sigma-pial",
      "description": "Save pial surface sigma as overlay. Specify full path including hemi, suffix, etc.",
      "value-key": "[SIGMA_PIAL]",
      "type": "String",
      "optional": true,
      "id": "sigma_pial",
      "name": "Sigma Pial File"
    },
    {
      "command-line-flag": "-output",
      "description": "Append suffix to all outputs to prevent over-writing.",
      "value-key": "[OUTPUT]",
      "type": "String",
      "optional": true,
      "id": "output",
      "name": "Output Suffix"
    },
    {
      "command-line-flag": "-min_border_white",
      "description": "Minimum border white.",
      "value-key": "[MIN_BORDER_WHITE]",
      "type": "Number",
      "optional": true,
      "id": "min_border_white",
      "name": "Min Border White"
    },
    {
      "command-line-flag": "-max_border_white",
      "description": "Maximum border white.",
      "value-key": "[MAX_BORDER_WHITE]",
      "type": "Number",
      "optional": true,
      "id": "max_border_white",
      "name": "Max Border White"
    },
    {
      "command-line-flag": "-min_gray_at_white_border",
      "description": "Minimum gray at white border.",
      "value-key": "[MIN_GRAY_WHITE_BORDER]",
      "type": "Number",
      "optional": true,
      "id": "min_gray_white_border",
      "name": "Min Gray at White Border"
    },
    {
      "command-line-flag": "-max_gray",
      "description": "Maximum gray value.",
      "value-key": "[MAX_GRAY]",
      "type": "Number",
      "optional": true,
      "id": "max_gray",
      "name": "Max Gray"
    },
    {
      "command-line-flag": "-max_gray_at_csf_border",
      "description": "Maximum gray at CSF border.",
      "value-key": "[MAX_GRAY_CSF_BORDER]",
      "type": "Number",
      "optional": true,
      "id": "max_gray_csf_border",
      "name": "Max Gray at CSF Border"
    },
    {
      "command-line-flag": "-min_gray_at_csf_border",
      "description": "Minimum gray at CSF border.",
      "value-key": "[MIN_GRAY_CSF_BORDER]",
      "type": "Number",
      "optional": true,
      "id": "min_gray_csf_border",
      "name": "Min Gray at CSF Border"
    },
    {
      "command-line-flag": "-max_csf",
      "description": "Maximum CSF value.",
      "value-key": "[MAX_CSF]",
      "type": "Number",
      "optional": true,
      "id": "max_csf",
      "name": "Max CSF"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
