{
  "tool-version": "7.4.1",
  "name": "mri_gtmpvc",
  "author": "FreeSurfer Developers",
  "descriptor-url": "https://surfer.nmr.mgh.harvard.edu/fswiki/PetSurfer",
  "description": "mri_gtmpvc performs partial volume correction on PET data using anatomical segmentation.",
  "command-line": "mri_gtmpvc [INPUT_VOLUME] [FRAME] [PSF] [SEGMENTATION] [REGISTRATION] [OUTPUT_DIRECTORY] [MASK] [AUTO_MASK] [NO_REDUCE_FOV] [REDUCE_FOV_EQODD] [CONTRAST_MATRIX] [DEFAULT_SEG_MERGE] [MERGE_HYPOS] [MERGE_CBLUM_WM_GYRI] [TT_REDUCE] [REPLACE_SEG] [REPLACE_FILE] [RESCALE] [NO_RESCALE] [SCALE_REFVAL] [CTAB] [CTAB_DEFAULT] [TT_UPDATE] [LATERALIZATION] [NO_TFE] [NO_PVC] [SEGPVFRES] [RBV] [RBV_RES] [MUELLER_PVC] [MG_REF_CEREBRAL_WM] [MG_REF_LOBES_WM] [GLM_MG_PVC] [KM_REF] [KM_HB] [STEADY_STATE] [SAVE_X] [SAVE_Y] [SAVE_BETA] [SAVE_X0] [SAVE_INPUT] [SAVE_ERES] [SAVE_YHAT] [SAVE_YHAT_NOISE] [SAVE_YHAT_FULL_FOV] [SAVE_YHAT0] [SYNTH] [SYNTH_ONLY] [SYNTH_SAVE] [SAVE_TEXT] [THREADS] [MAX_THREADS] [MAX_THREADS_MINUS_ONE] [SUBJECTS_DIR] [VG_THRESH] [GDIAG] [DEBUG] [CHECKOPTS] [HELP] [VERSION]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "command-line-flag": "--i",
      "description": "Input volume: source data to PVC",
      "value-key": "[INPUT_VOLUME]",
      "type": "File",
      "optional": false,
      "id": "input_volume",
      "name": "Input volume"
    },
    {
      "command-line-flag": "--frame",
      "description": "Only process 0-based frame F from input volume",
      "value-key": "[FRAME]",
      "type": "Number",
      "optional": true,
      "id": "frame",
      "name": "Frame"
    },
    {
      "command-line-flag": "--psf",
      "description": "Scanner PSF FWHM in mm",
      "value-key": "[PSF]",
      "type": "Number",
      "optional": false,
      "id": "psf",
      "name": "PSF FWHM"
    },
    {
      "command-line-flag": "--seg",
      "description": "Anatomical segmentation to define regions for GTM",
      "value-key": "[SEGMENTATION]",
      "type": "File",
      "optional": false,
      "id": "segmentation",
      "name": "Segmentation file"
    },
    {
      "command-line-flag": "--reg",
      "description": "LTA registration file that maps PET to anatomical",
      "value-key": "[REGISTRATION]",
      "type": "File",
      "optional": true,
      "id": "registration",
      "name": "Registration file"
    },
    {
      "command-line-flag": "--regheader",
      "description": "Assume input and seg share scanner space",
      "value-key": "[REGHEADER]",
      "type": "Flag",
      "optional": true,
      "id": "regheader",
      "name": "Regheader flag"
    },
    {
      "command-line-flag": "--reg-identity",
      "description": "Assume that input is in anatomical space",
      "value-key": "[REG_IDENTITY]",
      "type": "Flag",
      "optional": true,
      "id": "reg_identity",
      "name": "Reg Identity flag"
    },
    {
      "command-line-flag": "--o",
      "description": "Output directory",
      "value-key": "[OUTPUT_DIRECTORY]",
      "type": "String",
      "optional": false,
      "id": "output_directory",
      "name": "Output directory"
    },
    {
      "command-line-flag": "--mask",
      "description": "Ignore areas outside of the mask (in input vol space)",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true,
      "id": "mask",
      "name": "Mask volume"
    },
    {
      "command-line-flag": "--auto-mask",
      "description": "Automatically compute mask with FWHM and threshold",
      "value-key": "[AUTO_MASK]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "auto_mask",
      "name": "Auto mask"
    },
    {
      "command-line-flag": "--no-reduce-fov",
      "description": "Do not reduce FoV to encompass mask",
      "value-key": "[NO_REDUCE_FOV]",
      "type": "Flag",
      "optional": true,
      "id": "no_reduce_fov",
      "name": "No reduce field of view"
    },
    {
      "command-line-flag": "--reduce-fov-eqodd",
      "description": "Reduce FoV to encompass mask but force nc=nr and ns to be odd",
      "value-key": "[REDUCE_FOV_EQODD]",
      "type": "Flag",
      "optional": true,
      "id": "reduce_fov_eqodd",
      "name": "Reduce FoV to odd dimensions"
    },
    {
      "command-line-flag": "--C",
      "description": "Univariate contrast to test",
      "value-key": "[CONTRAST_MATRIX]",
      "type": "File",
      "optional": true,
      "id": "contrast_matrix",
      "name": "Contrast matrix"
    },
    {
      "command-line-flag": "--default-seg-merge",
      "description": "Default schema for merging ROIs",
      "value-key": "[DEFAULT_SEG_MERGE]",
      "type": "Flag",
      "optional": true,
      "id": "default_seg_merge",
      "name": "Default segmentation merge"
    },
    {
      "command-line-flag": "--merge-hypos",
      "description": "Merge left and right hypointensites into ROI",
      "value-key": "[MERGE_HYPOS]",
      "type": "Flag",
      "optional": true,
      "id": "merge_hypos",
      "name": "Merge hypointensites"
    },
    {
      "command-line-flag": "--merge-cblum-wm-gyri",
      "description": "Cerebellum WM gyri back into cerebellum WM",
      "value-key": "[MERGE_CBLUM_WM_GYRI]",
      "type": "Flag",
      "optional": true,
      "id": "merge_cblum_wm_gyri",
      "name": "Merge cerebellum WM gyri"
    },
    {
      "command-line-flag": "--tt-reduce",
      "description": "Reduce segmentation to that of a tissue type",
      "value-key": "[TT_REDUCE]",
      "type": "Flag",
      "optional": true,
      "id": "tt_reduce",
      "name": "Tissue-type reduce"
    },
    {
      "command-line-flag": "--replace",
      "description": "Replace seg Id1 with seg Id2",
      "value-key": "[REPLACE_SEG]",
      "type": "String",
      "optional": true,
      "id": "replace_seg",
      "name": "Replace segmentation IDs"
    },
    {
      "command-line-flag": "--replace-file",
      "description": "File with a list of Ids to replace",
      "value-key": "[REPLACE_FILE]",
      "type": "File",
      "optional": true,
      "id": "replace_file",
      "name": "Replace file"
    },
    {
      "command-line-flag": "--rescale",
      "description": "Specify reference region(s) used to rescale (default is pons)",
      "value-key": "[RESCALE]",
      "type": "String",
      "optional": true,
      "id": "rescale",
      "name": "Rescale"
    },
    {
      "command-line-flag": "--no-rescale",
      "description": "Do not global rescale such that mean of reference region is scaleref",
      "value-key": "[NO_RESCALE]",
      "type": "Flag",
      "optional": true,
      "id": "no_rescale",
      "name": "No rescale"
    },
    {
      "command-line-flag": "--scale-refval",
      "description": "Scale such that mean in reference region is refval",
      "value-key": "[SCALE_REFVAL]",
      "type": "Number",
      "optional": true,
      "id": "scale_refval",
      "name": "Scale reference value"
    },
    {
      "command-line-flag": "--ctab",
      "description": "Specify color table explicitly",
      "value-key": "[CTAB]",
      "type": "File",
      "optional": true,
      "id": "ctab",
      "name": "Color table"
    },
    {
      "command-line-flag": "--ctab-default",
      "description": "Use default color table",
      "value-key": "[CTAB_DEFAULT]",
      "type": "Flag",
      "optional": true,
      "id": "ctab_default",
      "name": "Default color table"
    },
    {
      "command-line-flag": "--tt-update",
      "description": "Changes tissue type of VentralDC, BrainStem, and Pons to be SubcortGM",
      "value-key": "[TT_UPDATE]",
      "type": "Flag",
      "optional": true,
      "id": "tt_update",
      "name": "Tissue type update"
    },
    {
      "command-line-flag": "--lat",
      "description": "Lateralize tissue types",
      "value-key": "[LATERALIZATION]",
      "type": "Flag",
      "optional": true,
      "id": "lateralization",
      "name": "Lateralization"
    },
    {
      "command-line-flag": "--no-tfe",
      "description": "Do not correct for tissue fraction effect",
      "value-key": "[NO_TFE]",
      "type": "Flag",
      "optional": true,
      "id": "no_tfe",
      "name": "No TFE correction"
    },
    {
      "command-line-flag": "--no-pvc",
      "description": "Turns off PVC entirely",
      "value-key": "[NO_PVC]",
      "type": "Flag",
      "optional": true,
      "id": "no_pvc",
      "name": "No PVC"
    },
    {
      "command-line-flag": "--segpvfres",
      "description": "Set the tissue fraction resolution parameter (default is 0.5)",
      "value-key": "[SEGPVFRES]",
      "type": "Number",
      "optional": true,
      "id": "segpvfres",
      "name": "Tissue fraction resolution"
    },
    {
      "command-line-flag": "--rbv",
      "description": "Perform RBV PVC",
      "value-key": "[RBV]",
      "type": "Flag",
      "optional": true,
      "id": "rbv",
      "name": "RBV PVC"
    },
    {
      "command-line-flag": "--rbv-res",
      "description": "Set RBV voxel resolution",
      "value-key": "[RBV_RES]",
      "type": "Number",
      "optional": true,
      "id": "rbv_res",
      "name": "RBV resolution"
    },
    {
      "command-line-flag": "--mg",
      "description": "Perform Mueller-Gaertner PVC",
      "value-key": "[MUELLER_PVC]",
      "type": "String",
      "optional": true,
      "id": "mueller_pvc",
      "name": "Mueller-Gaertner PVC"
    },
    {
      "command-line-flag": "--mg-ref-cerebral-wm",
      "description": "Set MG RefIds to 2 and 41",
      "value-key": "[MG_REF_CEREBRAL_WM]",
      "type": "Flag",
      "optional": true,
      "id": "mg_ref_cerebral_wm",
      "name": "MG Reference Cerebral WM"
    },
    {
      "command-line-flag": "--mg-ref-lobes-wm",
      "description": "Set MG RefIds to those for lobes when using wm subseg",
      "value-key": "[MG_REF_LOBES_WM]",
      "type": "Flag",
      "optional": true,
      "id": "mg_ref_lobes_wm",
      "name": "MG Reference Lobes WM"
    },
    {
      "command-line-flag": "--mgx",
      "description": "GLM-based Mueller-Gaertner PVC",
      "value-key": "[GLM_MG_PVC]",
      "type": "Number",
      "optional": true,
      "id": "glm_mg_pvc",
      "name": "GLM-based MG PVC"
    },
    {
      "command-line-flag": "--km-ref",
      "description": "Compute reference TAC for KM as mean of given RefIds",
      "value-key": "[KM_REF]",
      "type": "String",
      "optional": true,
      "id": "km_ref",
      "name": "KM Reference TAC"
    },
    {
      "command-line-flag": "--km-hb",
      "description": "Compute HiBinding TAC for KM as mean of given RefIds",
      "value-key": "[KM_HB]",
      "type": "String",
      "optional": true,
      "id": "km_hb",
      "name": "KM HiBinding TAC"
    },
    {
      "command-line-flag": "--ss",
      "description": "Steady-state analysis spec blood plasma concentration, unit scale, and decay correction factor.",
      "value-key": "[STEADY_STATE]",
      "type": "String",
      "optional": true,
      "id": "steady_state",
      "name": "Steady-state analysis"
    },
    {
      "command-line-flag": "--X",
      "description": "Save X matrix in matlab4 format as X.mat",
      "value-key": "[SAVE_X]",
      "type": "Flag",
      "optional": true,
      "id": "save_x",
      "name": "Save X matrix"
    },
    {
      "command-line-flag": "--y",
      "description": "Save y matrix in matlab4 format as y.mat",
      "value-key": "[SAVE_Y]",
      "type": "Flag",
      "optional": true,
      "id": "save_y",
      "name": "Save y matrix"
    },
    {
      "command-line-flag": "--beta",
      "description": "Save beta matrix in matlab4 format as beta.mat",
      "value-key": "[SAVE_BETA]",
      "type": "Flag",
      "optional": true,
      "id": "save_beta",
      "name": "Save beta matrix"
    },
    {
      "command-line-flag": "--X0",
      "description": "Save X0 matrix in matlab4 format as X0.mat",
      "value-key": "[SAVE_X0]",
      "type": "Flag",
      "optional": true,
      "id": "save_x0",
      "name": "Save X0 matrix"
    },
    {
      "command-line-flag": "--save-input",
      "description": "Saves rescaled input as input.rescaled.nii.gz",
      "value-key": "[SAVE_INPUT]",
      "type": "Flag",
      "optional": true,
      "id": "save_input",
      "name": "Save rescaled input"
    },
    {
      "command-line-flag": "--save-eres",
      "description": "Saves residual error",
      "value-key": "[SAVE_ERES]",
      "type": "Flag",
      "optional": true,
      "id": "save_eres",
      "name": "Save residual error"
    },
    {
      "command-line-flag": "--save-yhat",
      "description": "Saves yhat",
      "value-key": "[SAVE_YHAT]",
      "type": "Flag",
      "optional": true,
      "id": "save_yhat",
      "name": "Save yhat"
    },
    {
      "command-line-flag": "--save-yhat-with-noise",
      "description": "Saves yhat with noise, seed < 0 for TOD",
      "value-key": "[SAVE_YHAT_NOISE]",
      "type": "String",
      "optional": true,
      "id": "save_yhat_noise",
      "name": "Save yhat with noise"
    },
    {
      "command-line-flag": "--save-yhat-full-fov",
      "description": "Saves yhat in full FoV (if FoV was reduced)",
      "value-key": "[SAVE_YHAT_FULL_FOV]",
      "type": "Flag",
      "optional": true,
      "id": "save_yhat_full_fov",
      "name": "Save yhat full FoV"
    },
    {
      "command-line-flag": "--save-yhat0",
      "description": "Saves yhat prior to smoothing",
      "value-key": "[SAVE_YHAT0]",
      "type": "Flag",
      "optional": true,
      "id": "save_yhat0",
      "name": "Save yhat0"
    },
    {
      "command-line-flag": "--synth",
      "description": "Synthesize volume with gtmbeta as input",
      "value-key": "[SYNTH]",
      "type": "String",
      "optional": true,
      "id": "synth",
      "name": "Synthesize volume"
    },
    {
      "command-line-flag": "--synth-only",
      "description": "Exit after doing synthesis (implies --synth-save)",
      "value-key": "[SYNTH_ONLY]",
      "type": "Flag",
      "optional": true,
      "id": "synth_only",
      "name": "Synthesize only"
    },
    {
      "command-line-flag": "--synth-save",
      "description": "With --synth saves synthesized volume to outdir/synth.nii.gz",
      "value-key": "[SYNTH_SAVE]",
      "type": "Flag",
      "optional": true,
      "id": "synth_save",
      "name": "Synthesize save"
    },
    {
      "command-line-flag": "--save-text",
      "description": "Save demeaned GTM values out to text files named after the seg",
      "value-key": "[SAVE_TEXT]",
      "type": "Flag",
      "optional": true,
      "id": "save_text",
      "name": "Save text"
    },
    {
      "command-line-flag": "--threads",
      "description": "Use N threads (with Open MP)",
      "value-key": "[THREADS]",
      "type": "Number",
      "optional": true,
      "id": "threads",
      "name": "Threads"
    },
    {
      "command-line-flag": "--max-threads",
      "description": "Use the maximum allowable number of threads for this computer",
      "value-key": "[MAX_THREADS]",
      "type": "Flag",
      "optional": true,
      "id": "max_threads",
      "name": "Max threads"
    },
    {
      "command-line-flag": "--max-threads-minus-1",
      "description": "Use one less than the maximum allowable number of threads for this computer",
      "value-key": "[MAX_THREADS_MINUS_ONE]",
      "type": "Flag",
      "optional": true,
      "id": "max_threads_minus_one",
      "name": "Max threads minus one"
    },
    {
      "command-line-flag": "--sd",
      "description": "Specify SUBJECTS_DIR",
      "value-key": "[SUBJECTS_DIR]",
      "type": "String",
      "optional": true,
      "id": "subjects_dir",
      "name": "Subjects directory"
    },
    {
      "command-line-flag": "--vg-thresh",
      "description": "Threshold for LTAconcat error",
      "value-key": "[VG_THRESH]",
      "type": "Number",
      "optional": true,
      "id": "vg_thresh",
      "name": "VG threshold"
    },
    {
      "command-line-flag": "--gdiag",
      "description": "Set diagnostic level",
      "value-key": "[GDIAG]",
      "type": "Number",
      "optional": true,
      "id": "gdiag",
      "name": "Diagnostic level"
    },
    {
      "command-line-flag": "--debug",
      "description": "Turn on debugging",
      "value-key": "[DEBUG]",
      "type": "Flag",
      "optional": true,
      "id": "debug",
      "name": "Debug"
    },
    {
      "command-line-flag": "--checkopts",
      "description": "Don't run anything, just check options and exit",
      "value-key": "[CHECKOPTS]",
      "type": "Flag",
      "optional": true,
      "id": "checkopts",
      "name": "Check options"
    },
    {
      "command-line-flag": "--help",
      "description": "Print out information on how to use this program",
      "value-key": "[HELP]",
      "type": "Flag",
      "optional": true,
      "id": "help",
      "name": "Help"
    },
    {
      "command-line-flag": "--version",
      "description": "Print out version and exit",
      "value-key": "[VERSION]",
      "type": "Flag",
      "optional": true,
      "id": "version",
      "name": "Version"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_DIR]/synth.nii.gz",
      "description": "Synthesized volume",
      "optional": true,
      "id": "synthesized_volume",
      "name": "Synthesized Volume"
    },
    {
      "path-template": "[OUTPUT_DIR]/input.rescaled.nii.gz",
      "description": "Rescaled input volume",
      "optional": true,
      "id": "rescaled_input",
      "name": "Rescaled Input"
    },
    {
      "path-template": "[OUTPUT_DIR]/eresiduals.nii.gz",
      "description": "Residual errors volume",
      "optional": true,
      "id": "eresiduals",
      "name": "Residual Errors"
    },
    {
      "path-template": "[OUTPUT_DIR]/yhat.nii.gz",
      "description": "Yhat volume",
      "optional": true,
      "id": "yhat",
      "name": "Yhat"
    },
    {
      "path-template": "[OUTPUT_DIR]/yhat_with_noise.nii.gz",
      "description": "Yhat with noise volume",
      "optional": true,
      "id": "yhat_with_noise",
      "name": "Yhat with Noise"
    },
    {
      "path-template": "[OUTPUT_DIR]/yhat_full_fov.nii.gz",
      "description": "Yhat full FoV volume",
      "optional": true,
      "id": "yhat_full_fov",
      "name": "Yhat Full FoV"
    },
    {
      "path-template": "[OUTPUT_DIR]/yhat_prior.nii.gz",
      "description": "Yhat prior to smoothing volume",
      "optional": true,
      "id": "yhat_prior",
      "name": "Yhat Prior"
    },
    {
      "path-template": "[OUTPUT_DIR]/X.mat",
      "description": "X matrix in matlab4 format",
      "optional": true,
      "id": "x_matrix",
      "name": "X Matrix"
    },
    {
      "path-template": "[OUTPUT_DIR]/y.mat",
      "description": "Y matrix in matlab4 format",
      "optional": true,
      "id": "y_matrix",
      "name": "Y Matrix"
    },
    {
      "path-template": "[OUTPUT_DIR]/beta.mat",
      "description": "Beta matrix in matlab4 format",
      "optional": true,
      "id": "beta_matrix",
      "name": "Beta Matrix"
    },
    {
      "path-template": "[OUTPUT_DIR]/X0.mat",
      "description": "X0 matrix in matlab4 format",
      "optional": true,
      "id": "x0_matrix",
      "name": "X0 Matrix"
    },
    {
      "path-template": "[OUTPUT_DIR]/gtm_values.txt",
      "description": "Demeaned GTM values as text file",
      "optional": true,
      "id": "gtm_values_text",
      "name": "GTM Values Text"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
