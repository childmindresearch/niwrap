{
  "tool-version": "7.4.1",
  "name": "samseg",
  "author": "FreeSurfer Developers",
  "description": "SAMSEG (Statistical and Algorithmic Methods for Segmentation) is a tool for segmenting neuroimaging data.",
  "command-line": "samseg [INPUT_FILES] [T1W_FILES] [T2W_FILES] [FLAIR_FILES] [OTHER_MODALITY_FILES] [OUTPUT_DIRECTORY] [OPTIONS_FILE] [DISSECTION_PHOTO_MODE] [SAVE_HISTORY] [SUBJECT] [SAVE_POSTERIORS] [SAVE_PROBABILITIES] [NO_SAVE_WARP] [MRF] [NO_MRF] [THREADS] [ATLAS_DIRECTORY] [GMM_FILE] [NO_BLOCK_COORDINATE_DESCENT] [LOGDOMAIN_COSTANDGRADIENT_CALCULATOR] [NO_LOGDOMAIN_COSTANDGRADIENT_CALCULATOR] [RECON] [FILL] [NORMALIZATION2] [USE_T2W] [USE_FLAIR] [HIRES] [SUBJECTS_DIRECTORY] [PALLIDUM_SEPARATE] [STIFFNESS] [LESION] [LESION_MASK_PATTERN] [BIAS_FIELD_SMOOTHING_KERNEL] [REGISTRATION_FILE] [REGMAT_FILE] [INIT_LTA] [REG_ONLY] [SAVE_MESH] [MAX_ITERS] [DICE_FILE] [IGNORE_UNKNOWN] [SMOOTH_WM_CORTEX] [PROFILE_FILE]",
  "schema-version": "0.5",
  "inputs": [
    {
      "command-line-flag": "--i",
      "description": "Input image files, must be in registration with each other.",
      "value-key": "[INPUT_FILES]",
      "type": "File",
      "list": true,
      "optional": false,
      "id": "input_files",
      "name": "Input files"
    },
    {
      "command-line-flag": "--t1w",
      "description": "T1-weighted input file, causes input to be conformed unless --hires is used.",
      "value-key": "[T1W_FILES]",
      "type": "File",
      "list": true,
      "optional": true,
      "id": "t1w_files",
      "name": "T1-weighted files"
    },
    {
      "command-line-flag": "--t2w",
      "description": "T2-weighted input file.",
      "value-key": "[T2W_FILES]",
      "type": "File",
      "list": true,
      "optional": true,
      "id": "t2w_files",
      "name": "T2-weighted files"
    },
    {
      "command-line-flag": "--flair",
      "description": "FLAIR-weighted input file.",
      "value-key": "[FLAIR_FILES]",
      "type": "File",
      "list": true,
      "optional": true,
      "id": "flair_files",
      "name": "FLAIR-weighted files"
    },
    {
      "command-line-flag": "--mode",
      "description": "Specific mode input files, each associated with a custom modality name.",
      "value-key": "[OTHER_MODALITY_FILES]",
      "type": "File",
      "list": true,
      "optional": true,
      "id": "other_modality_files",
      "name": "Other modality files"
    },
    {
      "command-line-flag": "--o",
      "description": "Output directory where results will be saved.",
      "value-key": "[OUTPUT_DIRECTORY]",
      "type": "String",
      "optional": false,
      "id": "output_directory",
      "name": "Output directory"
    },
    {
      "command-line-flag": "--options",
      "description": "JSON file for specifying advanced options.",
      "value-key": "[OPTIONS_FILE]",
      "type": "File",
      "optional": true,
      "id": "options_file",
      "name": "Options file"
    },
    {
      "command-line-flag": "--dissection-photo",
      "description": "Mode for processing 3D reconstructed dissection photos, specifying left/right/both.",
      "value-key": "[DISSECTION_PHOTO_MODE]",
      "type": "String",
      "optional": true,
      "id": "dissection_photo_mode",
      "name": "Dissection photo mode"
    },
    {
      "command-line-flag": "--history",
      "description": "Turns on saving of processing history.",
      "value-key": "[SAVE_HISTORY]",
      "type": "Flag",
      "optional": true,
      "id": "save_history",
      "name": "Save history flag"
    },
    {
      "command-line-flag": "--s",
      "description": "Subject identifier, sets output directory to subject/mri/samseg. The first input must be the conformed T1 weighted input.",
      "value-key": "[SUBJECT]",
      "type": "String",
      "optional": true,
      "id": "subject",
      "name": "Subject"
    },
    {
      "command-line-flag": "--save-posteriors",
      "description": "Save posterior probabilities.",
      "value-key": "[SAVE_POSTERIORS]",
      "type": "Flag",
      "optional": true,
      "id": "save_posteriors",
      "name": "Save posteriors flag"
    },
    {
      "command-line-flag": "--save-probabilities",
      "description": "Save posterior, prior, and likelihood as 3-frame volume for each tissue type.",
      "value-key": "[SAVE_PROBABILITIES]",
      "type": "Flag",
      "optional": true,
      "id": "save_probabilities",
      "name": "Save probabilities flag"
    },
    {
      "command-line-flag": "--no-save-warp",
      "description": "Do not save m3z-style warp.",
      "value-key": "[NO_SAVE_WARP]",
      "type": "Flag",
      "optional": true,
      "id": "no_save_warp",
      "name": "No save warp flag"
    },
    {
      "command-line-flag": "--mrf",
      "description": "Perform Markov Random Field processing.",
      "value-key": "[MRF]",
      "type": "Flag",
      "optional": true,
      "id": "mrf",
      "name": "MRF flag"
    },
    {
      "command-line-flag": "--no-mrf",
      "description": "Do not perform Markov Random Field processing.",
      "value-key": "[NO_MRF]",
      "type": "Flag",
      "optional": true,
      "id": "no_mrf",
      "name": "No MRF flag"
    },
    {
      "command-line-flag": "--threads",
      "description": "Set the number of CPUs to use.",
      "value-key": "[THREADS]",
      "type": "Number",
      "optional": true,
      "id": "threads",
      "name": "Number of threads"
    },
    {
      "command-line-flag": "--atlas",
      "description": "Path to the SAMSEG atlas directory.",
      "value-key": "[ATLAS_DIRECTORY]",
      "type": "String",
      "optional": true,
      "id": "atlas_directory",
      "name": "Atlas directory"
    },
    {
      "command-line-flag": "--gmm",
      "description": "Gaussian Mixture Model file.",
      "value-key": "[GMM_FILE]",
      "type": "File",
      "optional": true,
      "id": "gmm_file",
      "name": "GMM file"
    },
    {
      "command-line-flag": "--no-block-coordinate-descent",
      "description": "Do not use block coordinate descent.",
      "value-key": "[NO_BLOCK_COORDINATE_DESCENT]",
      "type": "Flag",
      "optional": true,
      "id": "no_block_coordinate_descent",
      "name": "No block coordinate descent flag"
    },
    {
      "command-line-flag": "--logdomain-costandgradient-calculator",
      "description": "Use log-domain cost and gradient calculator.",
      "value-key": "[LOGDOMAIN_COSTANDGRADIENT_CALCULATOR]",
      "type": "Flag",
      "optional": true,
      "id": "logdomain_costandgradient_calculator",
      "name": "Use logdomain cost and gradient calculator flag"
    },
    {
      "command-line-flag": "--no-logdomain-costandgradient-calculator",
      "description": "Do not use log-domain cost and gradient calculator.",
      "value-key": "[NO_LOGDOMAIN_COSTANDGRADIENT_CALCULATOR]",
      "type": "Flag",
      "optional": true,
      "id": "no_logdomain_costandgradient_calculator",
      "name": "No logdomain cost and gradient calculator flag"
    },
    {
      "command-line-flag": "--recon",
      "description": "Run recon-all.",
      "value-key": "[RECON]",
      "type": "Flag",
      "optional": true,
      "id": "recon",
      "name": "Recon flag"
    },
    {
      "command-line-flag": "--fill",
      "description": "Use samseg to create filled.mgz instead of recon-all.",
      "value-key": "[FILL]",
      "type": "Flag",
      "optional": true,
      "id": "fill",
      "name": "Fill flag"
    },
    {
      "command-line-flag": "--normalization2",
      "description": "Use samseg to create brain.mgz instead of recon-all (with --recon).",
      "value-key": "[NORMALIZATION2]",
      "type": "Flag",
      "optional": true,
      "id": "normalization2",
      "name": "Normalization2 flag"
    },
    {
      "command-line-flag": "--use-t2w",
      "description": "Use the T2-weighted input when running recon-all.",
      "value-key": "[USE_T2W]",
      "type": "Flag",
      "optional": true,
      "id": "use_t2w",
      "name": "Use T2w flag"
    },
    {
      "command-line-flag": "--use-flair",
      "description": "Use the FLAIR-weighted input when running recon-all.",
      "value-key": "[USE_FLAIR]",
      "type": "Flag",
      "optional": true,
      "id": "use_flair",
      "name": "Use FLAIR flag"
    },
    {
      "command-line-flag": "--hires",
      "description": "Use -hires when running recon-all.",
      "value-key": "[HIRES]",
      "type": "Flag",
      "optional": true,
      "id": "hires",
      "name": "Hires flag"
    },
    {
      "command-line-flag": "--sd",
      "description": "Path to the SUBJECTS_DIR.",
      "value-key": "[SUBJECTS_DIRECTORY]",
      "type": "String",
      "optional": true,
      "id": "subjects_directory",
      "name": "SUBJECTS_DIR"
    },
    {
      "command-line-flag": "--pallidum-separate",
      "description": "Move pallidum outside of global white matter class, used for analyzing T2 or FLAIR.",
      "value-key": "[PALLIDUM_SEPARATE]",
      "type": "Flag",
      "optional": true,
      "id": "pallidum_separate",
      "name": "Pallidum separate flag"
    },
    {
      "command-line-flag": "--stiffness",
      "description": "Set mesh stiffness.",
      "value-key": "[STIFFNESS]",
      "type": "Number",
      "optional": true,
      "id": "stiffness",
      "name": "Mesh stiffness"
    },
    {
      "command-line-flag": "--lesion",
      "description": "Turn on lesion segmentation.",
      "value-key": "[LESION]",
      "type": "Flag",
      "optional": true,
      "id": "lesion",
      "name": "Lesion flag"
    },
    {
      "command-line-flag": "--lesion-mask-pattern",
      "description": "Pattern needed when using T2 for lesion mask, e.g., 0 1.",
      "value-key": "[LESION_MASK_PATTERN]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "lesion_mask_pattern",
      "name": "Lesion mask pattern"
    },
    {
      "command-line-flag": "--bias-field-smoothing-kernel",
      "description": "Width of bias field smoothness.",
      "value-key": "[BIAS_FIELD_SMOOTHING_KERNEL]",
      "type": "Number",
      "optional": true,
      "id": "bias_field_smoothing_kernel",
      "name": "Bias field smoothing kernel"
    },
    {
      "command-line-flag": "--reg",
      "description": "Registration file (LTA or MAT) as output by samseg.",
      "value-key": "[REGISTRATION_FILE]",
      "type": "File",
      "optional": true,
      "id": "registration_file",
      "name": "Registration file"
    },
    {
      "command-line-flag": "--regmat",
      "description": "Same as --reg.",
      "value-key": "[REGMAT_FILE]",
      "type": "File",
      "optional": true,
      "id": "regmat_file",
      "name": "Regmat file"
    },
    {
      "command-line-flag": "--initlta",
      "description": "Initial registration LTA file.",
      "value-key": "[INIT_LTA]",
      "type": "File",
      "optional": true,
      "id": "init_lta",
      "name": "Initial LTA file"
    },
    {
      "command-line-flag": "--reg-only",
      "description": "Only perform registration.",
      "value-key": "[REG_ONLY]",
      "type": "Flag",
      "optional": true,
      "id": "reg_only",
      "name": "Reg only flag"
    },
    {
      "command-line-flag": "--ssdd",
      "description": "Path to SAMSEG_Data_DIR where the atlas is located.",
      "value-key": "[SSDD_DIRECTORY]",
      "type": "String",
      "optional": true,
      "id": "ssdd_directory",
      "name": "SSDD directory"
    },
    {
      "command-line-flag": "--save-mesh",
      "description": "Save the mesh, useful for longitudinal analysis.",
      "value-key": "[SAVE_MESH]",
      "type": "Flag",
      "optional": true,
      "id": "save_mesh",
      "name": "Save mesh flag"
    },
    {
      "command-line-flag": "--max-iters",
      "description": "Maximum number of iterations.",
      "value-key": "[MAX_ITERS]",
      "type": "Number",
      "optional": true,
      "id": "max_iters",
      "name": "Max iterations"
    },
    {
      "command-line-flag": "--dice",
      "description": "DICE coefficient file for segmentation.",
      "value-key": "[DICE_FILE]",
      "type": "File",
      "optional": true,
      "id": "dice_file",
      "name": "DICE file"
    },
    {
      "command-line-flag": "--ignore-unknown",
      "description": "Ignore unknown flags.",
      "value-key": "[IGNORE_UNKNOWN]",
      "type": "Flag",
      "optional": true,
      "id": "ignore_unknown",
      "name": "Ignore unknown flag"
    },
    {
      "command-line-flag": "--smooth-wm-cortex",
      "description": "Smooth white matter and cortex priors using specified sigma value.",
      "value-key": "[SMOOTH_WM_CORTEX]",
      "type": "Number",
      "optional": true,
      "id": "smooth_wm_cortex",
      "name": "Smooth WM cortex"
    },
    {
      "command-line-flag": "--profile",
      "description": "Run using the cProfile Python profiler, with the specified profile file.",
      "value-key": "[PROFILE_FILE]",
      "type": "File",
      "optional": true,
      "id": "profile_file",
      "name": "Profile file"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_DIRECTORY]/seg.mgz",
      "description": "Segmentation output file.",
      "optional": true,
      "id": "segmentation_output",
      "name": "Segmentation output"
    },
    {
      "path-template": "[OUTPUT_DIRECTORY]/posteriors.mgz",
      "description": "Posterior probabilities output file.",
      "optional": true,
      "id": "posteriors_output",
      "name": "Posteriors output"
    },
    {
      "path-template": "[OUTPUT_DIRECTORY]/probabilities.mgz",
      "description": "Probabilities output file, including post, prior, and likelihood.",
      "optional": true,
      "id": "probabilities_output",
      "name": "Probabilities output"
    },
    {
      "path-template": "[OUTPUT_DIRECTORY]/mesh.stl",
      "description": "Mesh output file (if save-mesh is enabled).",
      "optional": true,
      "id": "mesh_output",
      "name": "Mesh output"
    }
  ],
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}
