{
  "tool-version": "7.4.1",
  "name": "mri_binarize",
  "author": "FreeSurfer Developers",
  "description": "A program to binarize a volume or volume-encoded surface file, with options to merge and manipulate binarized output.",
  "command-line": "mri_binarize [INPUT_VOLUME] [OUTPUT_VOLUME] [MIN_THRESHOLD] [MAX_THRESHOLD] [PCT_THRESHOLD] [RMIN] [RMAX] [FDR_THRESHOLD] [MATCH_VALUES] [REPLACE_VALUES] [BINVAL] [BINVAL_NOT] [FRAME] [MERGE_VOLUME] [MASK_VOLUME] [MASK_THRESHOLD] [SURF_NAME] [SURF_SMOOTH] [THREADS] [CTX_WM_FLAG] [ALL_WM_FLAG] [VENTRICLES_FLAG] [WM_VCSF_FLAG] [GM_FLAG] [SUBCORT_GM_FLAG] [SCM_LH_FLAG] [SCM_RH_FLAG] [ZERO_EDGES_FLAG] [ZERO_SLICE_EDGES_FLAG] [DILATE_VERTEX] [REMOVE_ISLANDS_FLAG] [FILL_HOLES_FLAG] [NOVERBOSE_FLAG] [DEBUG_FLAG]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "value-key": "[INPUT_VOLUME]",
      "command-line-flag": "--i",
      "description": "Input volume to be binarized.",
      "type": "File",
      "optional": false,
      "id": "input_volume",
      "name": "Input Volume"
    },
    {
      "value-key": "[OUTPUT_VOLUME]",
      "command-line-flag": "--o",
      "description": "Path to output volume.",
      "type": "String",
      "optional": false,
      "id": "output_volume",
      "name": "Output Volume"
    },
    {
      "value-key": "[MIN_THRESHOLD]",
      "command-line-flag": "--min",
      "description": "Minimum threshold (default is -inf).",
      "type": "Number",
      "optional": true,
      "id": "min_threshold",
      "name": "Minimum Threshold"
    },
    {
      "value-key": "[MAX_THRESHOLD]",
      "command-line-flag": "--max",
      "description": "Maximum threshold (default is +inf).",
      "type": "Number",
      "optional": true,
      "id": "max_threshold",
      "name": "Maximum Threshold"
    },
    {
      "value-key": "[PCT_THRESHOLD]",
      "command-line-flag": "--pct",
      "description": "Set threshold to capture top P% of voxels.",
      "type": "Number",
      "optional": true,
      "id": "pct_threshold",
      "name": "Percent Threshold"
    },
    {
      "value-key": "[RMIN]",
      "command-line-flag": "--rmin",
      "description": "Compute min threshold based on rmin times global mean.",
      "type": "Number",
      "optional": true,
      "id": "rmin",
      "name": "RMIN"
    },
    {
      "value-key": "[RMAX]",
      "command-line-flag": "--rmax",
      "description": "Compute max threshold based on rmax times global mean.",
      "type": "Number",
      "optional": true,
      "id": "rmax",
      "name": "RMAX"
    },
    {
      "value-key": "[FDR_THRESHOLD]",
      "command-line-flag": "--fdr",
      "description": "Compute min threshold based on FDR.",
      "type": "Number",
      "optional": true,
      "id": "fdr_threshold",
      "name": "FDR Threshold"
    },
    {
      "value-key": "[MATCH_VALUES]",
      "command-line-flag": "--match",
      "description": "Binarize based on matching values.",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "match_values",
      "name": "Match Values"
    },
    {
      "value-key": "[REPLACE_VALUES]",
      "command-line-flag": "--replace",
      "description": "Replace voxels with specified values. Format: V1 V2",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "replace_values",
      "name": "Replace Values"
    },
    {
      "value-key": "[BINVAL]",
      "command-line-flag": "--binval",
      "description": "Set voxel value within threshold to specified value (default is 1).",
      "type": "Number",
      "optional": true,
      "id": "binval",
      "name": "Bin Value"
    },
    {
      "value-key": "[BINVAL_NOT]",
      "command-line-flag": "--binvalnot",
      "description": "Set voxel value outside threshold range to specified value (default is 0).",
      "type": "Number",
      "optional": true,
      "id": "binval_not",
      "name": "Bin Value Not"
    },
    {
      "value-key": "[FRAME]",
      "command-line-flag": "--frame",
      "description": "Use specific frame of the input. 0-based index.",
      "type": "Number",
      "optional": true,
      "id": "frame",
      "name": "Frame Number"
    },
    {
      "value-key": "[MERGE_VOLUME]",
      "command-line-flag": "--merge",
      "description": "Merge with another volume. Must be the same dimensions as input volume.",
      "type": "File",
      "optional": true,
      "id": "merge_volume",
      "name": "Merge Volume"
    },
    {
      "value-key": "[MASK_VOLUME]",
      "command-line-flag": "--mask",
      "description": "Mask input with a specified mask volume.",
      "type": "File",
      "optional": true,
      "id": "mask_volume",
      "name": "Mask Volume"
    },
    {
      "value-key": "[MASK_THRESHOLD]",
      "command-line-flag": "--mask-thresh",
      "description": "Set threshold for mask volume (default is 0.5).",
      "type": "Number",
      "optional": true,
      "id": "mask_threshold",
      "name": "Mask Threshold"
    },
    {
      "value-key": "[SURF_NAME]",
      "command-line-flag": "--surf",
      "description": "Create a surface mesh from the binarization.",
      "type": "String",
      "optional": true,
      "id": "surf_name",
      "name": "Surface Name"
    },
    {
      "value-key": "[SURF_SMOOTH]",
      "command-line-flag": "--surf-smooth",
      "description": "Smooth the surface mesh iteratively, specifying the number of iterations.",
      "type": "Number",
      "optional": true,
      "id": "surf_smooth",
      "name": "Surface Smoothing Iterations"
    },
    {
      "value-key": "[THREADS]",
      "command-line-flag": "--threads",
      "description": "Specify number of threads to use.",
      "type": "Number",
      "optional": true,
      "id": "threads",
      "name": "Number of Threads"
    },
    {
      "command-line-flag": "--ctx-wm",
      "description": "Set match values for cerebral white matter.",
      "value-key": "[CTX_WM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "ctx_wm_flag",
      "name": "Cerebral WM Flag"
    },
    {
      "command-line-flag": "--all-wm",
      "description": "Set match values for all white matter.",
      "value-key": "[ALL_WM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "all_wm_flag",
      "name": "All WM Flag"
    },
    {
      "command-line-flag": "--ventricles",
      "description": "Set match values for ventricles and choroid.",
      "value-key": "[VENTRICLES_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "ventricles_flag",
      "name": "Ventricles Flag"
    },
    {
      "command-line-flag": "--wm+vcsf",
      "description": "Match for WM and ventricular CSF.",
      "value-key": "[WM_VCSF_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "wm_vcsf_flag",
      "name": "WM and VCSF Flag"
    },
    {
      "command-line-flag": "--gm",
      "description": "Match for all WM, VCSF and background, then invert.",
      "value-key": "[GM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "gm_flag",
      "name": "Gray Matter Flag"
    },
    {
      "command-line-flag": "--subcort-gm",
      "description": "Match for subcortical gray matter.",
      "value-key": "[SUBCORT_GM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "subcort_gm_flag",
      "name": "Subcortical GM Flag"
    },
    {
      "command-line-flag": "--scm-lh",
      "description": "Subcortical mass for left hemisphere.",
      "value-key": "[SCM_LH_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "scm_lh_flag",
      "name": "Left Hemisphere Subcortical Mass Flag"
    },
    {
      "command-line-flag": "--scm-rh",
      "description": "Subcortical mass for right hemisphere.",
      "value-key": "[SCM_RH_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "scm_rh_flag",
      "name": "Right Hemisphere Subcortical Mass Flag"
    },
    {
      "command-line-flag": "--zero-edges",
      "description": "Set edge voxels to zero.",
      "value-key": "[ZERO_EDGES_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "zero_edges_flag",
      "name": "Zero Edges Flag"
    },
    {
      "command-line-flag": "--zero-slice-edges",
      "description": "Set edge slice voxels to zero.",
      "value-key": "[ZERO_SLICE_EDGES_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "zero_slice_edges_flag",
      "name": "Zero Slice Edges Flag"
    },
    {
      "command-line-flag": "--dilate-vertex",
      "description": "Dilate vertex to a specific target area.",
      "value-key": "[DILATE_VERTEX]",
      "type": "String",
      "optional": true,
      "id": "dilate_vertex",
      "name": "Dilate Vertex"
    },
    {
      "command-line-flag": "--remove-islands",
      "description": "Remove islands in the mask.",
      "value-key": "[REMOVE_ISLANDS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "remove_islands_flag",
      "name": "Remove Islands Flag"
    },
    {
      "command-line-flag": "--fill-holes",
      "description": "Remove holes in the mask.",
      "value-key": "[FILL_HOLES_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "fill_holes_flag",
      "name": "Fill Holes Flag"
    },
    {
      "command-line-flag": "--noverbose",
      "description": "Suppress verbose output.",
      "value-key": "[NOVERBOSE_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "noverbose_flag",
      "name": "No Verbose Flag"
    },
    {
      "command-line-flag": "--debug",
      "description": "Enable debugging output.",
      "value-key": "[DEBUG_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "debug_flag",
      "name": "Debug Flag"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_VOLUME]",
      "description": "The resulting binarized volume.",
      "optional": false,
      "id": "out_volume",
      "name": "Output Bin Volume"
    }
  ],
  "url": "https://github.com/freesurfer/freesurfer"
}
