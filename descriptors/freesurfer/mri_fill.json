{
  "tool-version": "7.4.1",
  "name": "mri_fill",
  "author": "FreeSurfer Developers",
  "description": "Tool for creating hemispheric cutting planes and filling white matter for surface tessellation.",
  "command-line": "mri_fill [INPUT_MR_DIR] [OUTPUT_MR_DIR] [THRESHOLD] [XFORM_NAME] [SEGMENTATION_FILE] [ATLAS_FILE] [FILL_VEN] [SEED_CC_TAL] [SEED_PONS_TAL] [SEED_LH_TAL] [SEED_RH_TAL] [SEED_CC_VOX] [SEED_PONS_VOX] [AUTO_MAN_FILES] [NO_AUTO_MAN] [POINTSET_ARGS] [CTAB_FILE]",
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "Input MR directory",
      "value-key": "[INPUT_MR_DIR]",
      "type": "String",
      "optional": false,
      "id": "input_mr_dir",
      "name": "Input MR Directory"
    },
    {
      "description": "Output MR directory",
      "value-key": "[OUTPUT_MR_DIR]",
      "type": "String",
      "optional": false,
      "id": "output_mr_dir",
      "name": "Output MR Directory"
    },
    {
      "command-line-flag": "-T",
      "description": "Specify fill_holes threshold (default=1)",
      "value-key": "[THRESHOLD]",
      "type": "Number",
      "optional": true,
      "id": "threshold",
      "name": "Fill Holes Threshold"
    },
    {
      "command-line-flag": "-xform",
      "description": "Use xform dst offset to get an accurate Talairach volume",
      "value-key": "[XFORM_NAME]",
      "type": "String",
      "optional": true,
      "id": "xform_name",
      "name": "Xform Name"
    },
    {
      "command-line-flag": "-segmentation",
      "description": "ASEG volume used to perform fill",
      "value-key": "[SEGMENTATION_FILE]",
      "type": "File",
      "optional": true,
      "id": "segmentation_file",
      "name": "Segmentation File"
    },
    {
      "command-line-flag": "-atlas",
      "description": "Specify atlas to use for auto-filling",
      "value-key": "[ATLAS_FILE]",
      "type": "File",
      "optional": true,
      "id": "atlas_file",
      "name": "Atlas File"
    },
    {
      "command-line-flag": "-fillven",
      "description": "Fill ventricles",
      "value-key": "[FILL_VEN]",
      "type": "Flag",
      "optional": true,
      "id": "fill_ven",
      "name": "Fill Ventricles Flag"
    },
    {
      "command-line-flag": "-C",
      "description": "Talairach coords of the seed for the corpus callosum (three numerical values required)",
      "value-key": "[SEED_CC_TAL]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "seed_cc_tal",
      "min-list-entries": 3,
      "name": "Corpus Callosum Seed Talairach"
    },
    {
      "command-line-flag": "-P",
      "description": "Talairach coords of the seed for the pons (three numerical values required)",
      "value-key": "[SEED_PONS_TAL]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "seed_pons_tal",
      "min-list-entries": 3,
      "name": "Pons Seed Talairach"
    },
    {
      "command-line-flag": "-lh",
      "description": "Talairach coords of the white matter seed for the left hemisphere (three numerical values required)",
      "value-key": "[SEED_LH_TAL]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "seed_lh_tal",
      "min-list-entries": 3,
      "name": "Left Hemisphere Seed Talairach"
    },
    {
      "command-line-flag": "-rh",
      "description": "Talairach coords of the white matter seed for the right hemisphere (three numerical values required)",
      "value-key": "[SEED_RH_TAL]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "seed_rh_tal",
      "min-list-entries": 3,
      "name": "Right Hemisphere Seed Talairach"
    },
    {
      "command-line-flag": "-CV",
      "description": "Voxel coords of the seed for the corpus callosum (three numerical values required)",
      "value-key": "[SEED_CC_VOX]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "seed_cc_vox",
      "min-list-entries": 3,
      "name": "Corpus Callosum Seed Voxel"
    },
    {
      "command-line-flag": "-PV",
      "description": "Voxel coords of the seed for the pons (three numerical values required)",
      "value-key": "[SEED_PONS_VOX]",
      "type": "Number",
      "list": true,
      "max-list-entries": 3,
      "optional": true,
      "id": "seed_pons_vox",
      "min-list-entries": 3,
      "name": "Pons Seed Voxel"
    },
    {
      "command-line-flag": "-auto-man",
      "description": "Get edits based on the difference between auto and man and apply to the output",
      "value-key": "[AUTO_MAN_FILES]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "auto_man_files",
      "name": "Auto Man Files"
    },
    {
      "command-line-flag": "-no-auto-man",
      "description": "Turns off the -auto-man option",
      "value-key": "[NO_AUTO_MAN]",
      "type": "Flag",
      "optional": true,
      "id": "no_auto_man",
      "name": "No Auto Man Flag"
    },
    {
      "command-line-flag": "-pointset",
      "description": "Stand-alone option: takes one or more pointsets and fills in all the voxels that intersect lines connecting any two points within a given point set",
      "value-key": "[POINTSET_ARGS]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "pointset_args",
      "name": "Pointset Arguments"
    },
    {
      "command-line-flag": "-ctab",
      "description": "Embed color table in the output",
      "value-key": "[CTAB_FILE]",
      "type": "File",
      "optional": true,
      "id": "ctab_file",
      "name": "Color Table File"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_MR_DIR]/filled",
      "description": "The filled volume for the cortical reconstruction, used for subsequent surface tessellation",
      "optional": true,
      "id": "filled_volume",
      "name": "Filled Volume Output"
    }
  ],
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}
