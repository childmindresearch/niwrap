{
  "tool-version": "24.2.06",
  "name": "3dDWItoDT",
  "author": "AFNI Developers",
  "description": "Computes 6 principal direction tensors from multiple gradient vectors and corresponding DTI image volumes.",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "3dDWItoDT [OPTIONS] [GRADIENT_FILE] [DATASET]",
  "inputs": [
    {
      "id": "gradient_file",
      "name": "Gradient file",
      "type": "File",
      "description": "A 1D file of the gradient vectors with lines of ASCII floats (Gxi, Gyi, Gzi) or a 1D file of b-matrix elements.",
      "value-key": "[GRADIENT_FILE]",
      "optional": false
    },
    {
      "id": "dataset",
      "name": "DTI dataset",
      "type": "File",
      "description": "A 3D bucket dataset with Np+1 sub-briks where the first sub-brik is the volume acquired with no diffusion weighting.",
      "value-key": "[DATASET]",
      "optional": false
    },
    {
      "command-line-flag": "-prefix",
      "id": "prefix",
      "name": "Output prefix",
      "type": "String",
      "description": "Output dataset prefix name. Default is 'DT'.",
      "value-key": "[PREFIX]",
      "optional": true
    },
    {
      "command-line-flag": "-automask",
      "id": "automask",
      "name": "Automatic mask",
      "type": "Flag",
      "description": "Mask dataset so that tensors are computed only for high-intensity (presumably brain) voxels.",
      "optional": true,
      "value-key": "[AUTOMASK]"
    },
    {
      "command-line-flag": "-mask",
      "id": "mask",
      "name": "Mask dataset",
      "type": "File",
      "description": "Use this dataset as mask to include/exclude voxels.",
      "value-key": "[MASK]",
      "optional": true
    },
    {
      "command-line-flag": "-bmatrix_NZ",
      "id": "bmatrix_NZ",
      "name": "B-matrix NZ",
      "type": "File",
      "description": "Input dataset is b-matrix, not gradient directions, and there is no row of zeros at the top of the file.",
      "value-key": "[BMATRIX_NZ]",
      "optional": true
    },
    {
      "command-line-flag": "-bmatrix_Z",
      "id": "bmatrix_Z",
      "name": "B-matrix Z",
      "type": "File",
      "description": "Similar to '-bmatrix_NZ' but first row of the file is all zeros.",
      "value-key": "[BMATRIX_Z]",
      "optional": true
    },
    {
      "command-line-flag": "-bmatrix_FULL",
      "id": "bmatrix_FULL",
      "name": "B-matrix FULL",
      "type": "File",
      "description": "Same as '-bmatrix_Z' but with a more intuitive name.",
      "value-key": "[BMATRIX_FULL]",
      "optional": true
    },
    {
      "command-line-flag": "-scale_out_1000",
      "id": "scale_out_1000",
      "name": "Scale output by 1000",
      "type": "Flag",
      "description": "Increase output parameters with physical units by multiplying them by 1000.",
      "optional": true,
      "value-key": "[SCALE_OUT_1000]"
    },
    {
      "command-line-flag": "-bmax_ref",
      "id": "bmax_ref",
      "name": "Reference b-value",
      "type": "Number",
      "description": "Flag the reference b-value if it is greater than zero.",
      "value-key": "[BMAX_REF]",
      "integer": false,
      "optional": true
    },
    {
      "command-line-flag": "-nonlinear",
      "id": "nonlinear",
      "name": "Nonlinear computation",
      "type": "Flag",
      "description": "Compute iterative solution to avoid negative eigenvalues. This is the default method.",
      "optional": true,
      "value-key": "[NONLINEAR]"
    },
    {
      "command-line-flag": "-linear",
      "id": "linear",
      "name": "Linear computation",
      "type": "Flag",
      "description": "Compute simple linear solution.",
      "optional": true,
      "value-key": "[LINEAR]"
    },
    {
      "command-line-flag": "-reweight",
      "id": "reweight",
      "name": "Recompute weight factors",
      "type": "Flag",
      "description": "Recompute weight factors at end of iterations and restart.",
      "optional": true,
      "value-key": "[REWEIGHT]"
    },
    {
      "command-line-flag": "-max_iter",
      "id": "max_iter",
      "name": "Maximum iterations",
      "type": "Number",
      "description": "Maximum number of iterations for convergence. Default is 10.",
      "value-key": "[MAX_ITER]",
      "integer": true,
      "optional": true
    },
    {
      "command-line-flag": "-max_iter_rw",
      "id": "max_iter_rw",
      "name": "Max iterations after reweighting",
      "type": "Number",
      "description": "Max number of iterations after reweighting. Default is 5.",
      "value-key": "[MAX_ITER_RW]",
      "integer": true,
      "optional": true
    },
    {
      "command-line-flag": "-eigs",
      "id": "eigs",
      "name": "Compute Eigen parameters",
      "type": "Flag",
      "description": "Compute eigenvalues, eigenvectors, fractional anisotropy, and mean diffusivity in sub-briks 6-19.",
      "optional": true,
      "value-key": "[EIGS]"
    },
    {
      "command-line-flag": "-debug_briks",
      "id": "debug_briks",
      "name": "Add debugging sub-briks",
      "type": "Flag",
      "description": "Add sub-briks with error functional, original error, number of steps to convergence, and modeled B0 volume.",
      "optional": true,
      "value-key": "[DEBUG_BRIKS]"
    },
    {
      "command-line-flag": "-cumulative_wts",
      "id": "cumulative_wts",
      "name": "Show weight factors",
      "type": "Flag",
      "description": "Show overall weight factors for each gradient level.",
      "optional": true,
      "value-key": "[CUMULATIVE_WTS]"
    },
    {
      "command-line-flag": "-verbose",
      "id": "verbose",
      "name": "Verbose",
      "type": "Number",
      "description": "Print convergence steps every nnnnn voxels.",
      "value-key": "[VERBOSE]",
      "integer": true,
      "optional": true
    },
    {
      "command-line-flag": "-drive_afni",
      "id": "drive_afni",
      "name": "AFNI drive",
      "type": "Number",
      "description": "Show convergence graphs every nnnnn voxels. AFNI must have NIML communications on.",
      "value-key": "[DRIVE_AFNI]",
      "integer": true,
      "optional": true
    },
    {
      "command-line-flag": "-sep_dsets",
      "id": "sep_dsets",
      "name": "Separate datasets",
      "type": "Flag",
      "description": "Save tensor, eigenvalues, vectors, FA, MD in separate datasets.",
      "optional": true,
      "value-key": "[SEP_DSETS]"
    },
    {
      "command-line-flag": "-csf_val",
      "id": "csf_val",
      "name": "CSF diffusivity",
      "type": "Number",
      "description": "Assign diffusivity value to DWI data where the mean values for b=0 volumes is less than the mean of the remaining volumes at each voxel.",
      "value-key": "[CSF_VAL]",
      "integer": false,
      "optional": true
    },
    {
      "command-line-flag": "-min_bad_md",
      "id": "min_bad_md",
      "name": "Minimum bad MD value",
      "type": "Number",
      "description": "Change the min MD value used as a 'badness check' for tensor fits.",
      "value-key": "[MIN_BAD_MD]",
      "integer": true,
      "optional": true
    },
    {
      "command-line-flag": "-csf_fa",
      "id": "csf_fa",
      "name": "CSF FA value",
      "type": "Number",
      "description": "Assign a specific FA value to CSF voxels.",
      "value-key": "[CSF_FA]",
      "integer": false,
      "optional": true
    },
    {
      "command-line-flag": "-opt",
      "id": "opt",
      "name": "Optimization method",
      "type": "String",
      "description": "Optimization method: 'powell', 'gradient', or 'hybrid'.",
      "value-key": "[OPT]",
      "optional": true
    },
    {
      "command-line-flag": "-mean_b0",
      "id": "mean_b0",
      "name": "Use mean b=0",
      "type": "Flag",
      "description": "Use mean of all b=0 volumes for linear computation and initial linear for nonlinear method.",
      "optional": true,
      "value-key": "[MEAN_B0]"
    }
  ],
  "schema-version": "0.5",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "output-files": [
    {
      "path-template": "<PREFIX>.*",
      "description": "Output dataset",
      "optional": false,
      "name": "Output dataset",
      "id": "output_dataset"
    }
  ]
}
