{
  "tool-version": "24.2.06",
  "name": "ConvexHull",
  "author": "AFNI Developers",
  "description": "A program to find the convex hull, or perform a Delaunay triangulation of a set of points.",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "ConvexHull [VOL] [ISOVAL] [ISORANGE] [ISOCMASK] [XFORM] [SURFACE_INPUT] [SURF_VOL] [INPUT_1D] [Q_OPT] [PROJ_XY] [ORIG_COORD] [THESE_COORDS] [OUTPUT_PREFIX] [DEBUG] [NOVOLREG] [SETENV]",
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "Input AFNI (or AFNI readable) volume.",
      "value-key": "[VOL]",
      "type": "File",
      "optional": true,
      "id": "vol",
      "name": "Volume input",
      "command-line-flag": "-input"
    },
    {
      "description": "Create isosurface where volume = V",
      "value-key": "[ISOVAL]",
      "type": "Number",
      "optional": true,
      "id": "isoval",
      "name": "Isovalue",
      "command-line-flag": "-isoval"
    },
    {
      "description": "Create isosurface where V0 <= volume < V1",
      "value-key": "[ISORANGE]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "isorange",
      "name": "Isorange",
      "command-line-flag": "-isorange",
      "min-list-entries": 2,
      "max-list-entries": 2
    },
    {
      "description": "Create isosurface where MASK_COM != 0. Example: -isocmask '-a VOL+orig -expr (1-bool(a-V))' is equivalent to using -isoval V. NOTE: Allowed only with -xform mask",
      "value-key": "[ISOCMASK]",
      "type": "String",
      "optional": true,
      "id": "isocmask",
      "name": "Isocmask",
      "command-line-flag": "-isocmask"
    },
    {
      "description": "Transform to apply to volume values before searching for sign change boundary. Options: mask, shift, none",
      "value-key": "[XFORM]",
      "type": "String",
      "optional": true,
      "id": "xform",
      "name": "Transform",
      "command-line-flag": "-xform"
    },
    {
      "description": "Input surface type",
      "value-key": "[SURFACE_INPUT]",
      "type": "File",
      "optional": true,
      "id": "surface_input",
      "name": "Surface input",
      "command-line-flag": "-i_TYPE"
    },
    {
      "description": "Specify a surface volume which contains a transform to apply to the surface node coordinates",
      "value-key": "[SURF_VOL]",
      "type": "File",
      "optional": true,
      "id": "surf_vol",
      "name": "Surface volume",
      "command-line-flag": "-sv"
    },
    {
      "description": "Construct the triangulation of the points contained in 1D file XYZ. Use AFNI's [] selectors to specify the XYZ columns.",
      "value-key": "[INPUT_1D]",
      "type": "File",
      "optional": true,
      "id": "input_1d",
      "name": "Input 1D",
      "command-line-flag": "-input_1D"
    },
    {
      "description": "Meshing option OPT. Options: convex_hull, triangulate_xy",
      "value-key": "[Q_OPT]",
      "type": "String",
      "optional": true,
      "id": "q_opt",
      "name": "Q option",
      "command-line-flag": "-q_opt"
    },
    {
      "description": "Project points onto plane whose normal is the third principal component. Then rotate projection so that plane is parallel to Z = constant.",
      "value-key": "[PROJ_XY]",
      "type": "Flag",
      "optional": true,
      "id": "proj_xy",
      "name": "Project XY",
      "command-line-flag": "-proj_xy"
    },
    {
      "description": "Use original coordinates when writing surface, not transformed ones.",
      "value-key": "[ORIG_COORD]",
      "type": "Flag",
      "optional": true,
      "id": "orig_coord",
      "name": "Original Coordinates",
      "command-line-flag": "-orig_coord"
    },
    {
      "description": "Use coordinates in COORDS.1D when writing surface.",
      "value-key": "[THESE_COORDS]",
      "type": "File",
      "optional": true,
      "id": "these_coords",
      "name": "Coordinates",
      "command-line-flag": "-these_coords"
    },
    {
      "description": "Prefix of output surface. Specifies the format and prefix of the surface.",
      "value-key": "[OUTPUT_PREFIX]",
      "type": "String",
      "optional": true,
      "id": "output_prefix",
      "name": "Output prefix",
      "command-line-flag": "-o_TYPE"
    },
    {
      "description": "Debugging level.",
      "value-key": "[DEBUG]",
      "type": "String",
      "optional": true,
      "id": "debug",
      "name": "Debug level",
      "command-line-flag": "-debug"
    },
    {
      "description": "Ignore any Rotate, Volreg, Tagalign, or WarpDrive transformations present in the Surface Volume.",
      "value-key": "[NOVOLREG]",
      "type": "Flag",
      "optional": true,
      "id": "novolreg",
      "name": "Ignore transformations",
      "command-line-flag": "-novolreg"
    },
    {
      "description": "Set environment variable ENVname to be ENVvalue.",
      "value-key": "[SETENV]",
      "type": "String",
      "optional": true,
      "id": "setenv",
      "name": "Set environment variable",
      "command-line-flag": "-setenv"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_PREFIX]",
      "description": "Output surface file",
      "optional": true,
      "id": "out_surf",
      "name": "Output surface"
    }
  ],
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  }
}
