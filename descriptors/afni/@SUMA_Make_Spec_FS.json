{
  "tool-version": "24.2.06",
  "name": "@SUMA_Make_Spec_FS",
  "author": "AFNI Developers",
  "description": "Prepare for surface viewing in SUMA",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "@SUMA_Make_Spec_FS [OPTIONS] [SUBJECT_ID]",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "inputs": [
    {
      "command-line-flag": "-sid",
      "description": "Required subject ID for file naming",
      "value-key": "[SUBJECT_ID]",
      "type": "String",
      "optional": false,
      "id": "subject_id",
      "name": "Subject ID"
    },
    {
      "command-line-flag": "-debug",
      "description": "Print debug information along the way; default level is 0, max is 2",
      "value-key": "[DEBUG]",
      "type": "Number",
      "maximum": 2,
      "minimum": 0,
      "integer": true,
      "optional": true,
      "id": "debug",
      "name": "Debug level"
    },
    {
      "command-line-flag": "-fs_setup",
      "description": "Source $FREESURFER_HOME/SetUpFreeSurfer.csh",
      "value-key": "[FS_SETUP]",
      "type": "Flag",
      "optional": true,
      "id": "fs_setup",
      "name": "FreeSurfer setup flag"
    },
    {
      "command-line-flag": "-fspath",
      "description": "Path to 'surf' and 'orig' directories; defaults to './', the current directory",
      "value-key": "[FILESYSTEM_PATH]",
      "type": "String",
      "optional": true,
      "id": "filesystem_path",
      "name": "Filesystem path"
    },
    {
      "command-line-flag": "-extra_annot_labels",
      "description": "Convert extra annot files into ROI datasets",
      "value-key": "[EXTRA_ANNOT_LABELS]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "extra_annot_labels",
      "name": "Extra annotation labels"
    },
    {
      "command-line-flag": "-extra_fs_dsets",
      "description": "List other datasets to include; defaults are thickness, curv, sulc",
      "value-key": "[EXTRA_FS_DSETS]",
      "type": "String",
      "list": true,
      "optional": true,
      "id": "extra_fs_dsets",
      "name": "Extra FreeSurfer datasets"
    },
    {
      "command-line-flag": "-make_rank_dsets",
      "description": "Create *rank* datasets; for backward compatibility",
      "value-key": "[MAKE_RANK_DSETS]",
      "type": "Flag",
      "optional": true,
      "id": "make_rank_dsets",
      "name": "Make rank datasets flag"
    },
    {
      "command-line-flag": "-use_mgz",
      "description": "Use MGZ volumes even if COR volumes are there",
      "value-key": "[USE_MGZ]",
      "type": "Flag",
      "optional": true,
      "id": "use_mgz",
      "name": "Use MGZ flag"
    },
    {
      "command-line-flag": "-neuro",
      "description": "Use neurological orientation",
      "value-key": "[NEURO]",
      "type": "Flag",
      "optional": true,
      "id": "neuro",
      "name": "Neurological orientation flag"
    },
    {
      "command-line-flag": "-GNIFTI",
      "description": "Produce files in exchangeable formats; same as -NIFTI",
      "value-key": "[GNIFTI]",
      "type": "Flag",
      "optional": true,
      "id": "gnifti",
      "name": "GNIFTI flag"
    },
    {
      "command-line-flag": "-NIFTI",
      "description": "Produce files in exchangeable formats; output files in NIFTI format and surfaces in GIFTI format",
      "value-key": "[NIFTI]",
      "type": "Flag",
      "optional": true,
      "id": "nifti",
      "name": "NIFTI flag"
    },
    {
      "command-line-flag": "-inflate",
      "description": "Create moderately inflated surfaces using SurfSmooth; control the amount of smoothness with INF",
      "value-key": "[INFLATE]",
      "type": "Number",
      "optional": true,
      "id": "inflate",
      "name": "Inflation factor"
    },
    {
      "command-line-flag": "-set_space",
      "description": "Set the space flag of all volumes; defaults to 'orig' space",
      "value-key": "[SET_SPACE]",
      "type": "String",
      "optional": true,
      "id": "set_space",
      "name": "Set space"
    },
    {
      "command-line-flag": "-ld",
      "description": "Create standard mesh surfaces with mesh density linear depth set to LD",
      "value-key": "[LD]",
      "type": "Number",
      "optional": true,
      "id": "ld",
      "name": "Linear depth"
    },
    {
      "command-line-flag": "-ldpref",
      "description": "Supply the prefix option for MapIcosahedron; defaults to std.LD",
      "value-key": "[LDPREF]",
      "type": "String",
      "optional": true,
      "id": "ldpref",
      "name": "Linear depth prefix"
    },
    {
      "command-line-flag": "-no_ld",
      "description": "Do not run MapIcosahedron",
      "value-key": "[NO_LD]",
      "type": "Flag",
      "optional": true,
      "id": "no_ld",
      "name": "No MapIcosahedron flag"
    }
  ],
  "schema-version": "0.5",
  "output-files": [
    {
      "path-template": "SUMA/*",
      "description": "All created files are stored in a new SUMA directory",
      "optional": true,
      "id": "suma_output",
      "name": "SUMA directory"
    }
  ]
}
