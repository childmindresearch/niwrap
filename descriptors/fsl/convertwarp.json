{
  "name": "convertwarp",
  "command-line": "convertwarp [ABSWARP] [CONS_JACOBIAN] [JACOBIAN_MAX] [JACOBIAN_MIN] [MIDMAT] [OUT_ABSWARP] [OUT_RELWARP] [OUTPUT_TYPE] [POSTMAT] [PREMAT] [REFERENCE] [RELWARP] [SHIFT_DIRECTION] [SHIFT_IN_FILE] [WARP1] [WARP2]",
  "author": "FMRIB Analysis Group, University of Oxford",
  "description": "Use FSL convertwarp for combining multiple transforms into one.",
  "url": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki",
  "inputs": [
    {
      "id": "abswarp",
      "name": "Abswarp",
      "type": "Flag",
      "value-key": "[ABSWARP]",
      "command-line-flag": "--abs",
      "description": "If set it indicates that the warps in --warp1 and --warp2 should be interpreted as absolute. i.e. the values in --warp1/2 are the coordinates in the next space, rather than displacements. this flag is ignored if --warp1/2 was created by fnirt, which always creates relative displacements.",
      "optional": true
    },
    {
      "id": "cons_jacobian",
      "name": "Cons jacobian",
      "type": "Flag",
      "value-key": "[CONS_JACOBIAN]",
      "command-line-flag": "--constrainj",
      "description": "Constrain the jacobian of the warpfield to lie within specified min/max limits.",
      "optional": true
    },
    {
      "id": "jacobian_max",
      "name": "Jacobian max",
      "type": "Number",
      "value-key": "[JACOBIAN_MAX]",
      "command-line-flag": "--jmax",
      "command-line-flag-separator": "=",
      "description": "Maximum acceptable jacobian value for constraint (default 100.0).",
      "optional": true
    },
    {
      "id": "jacobian_min",
      "name": "Jacobian min",
      "type": "Number",
      "value-key": "[JACOBIAN_MIN]",
      "command-line-flag": "--jmin",
      "command-line-flag-separator": "=",
      "description": "Minimum acceptable jacobian value for constraint (default 0.01).",
      "optional": true
    },
    {
      "id": "midmat",
      "name": "Midmat",
      "type": "File",
      "value-key": "[MIDMAT]",
      "command-line-flag": "--midmat",
      "command-line-flag-separator": "=",
      "description": "Name of file containing mid-warp-affine transform.",
      "optional": true
    },
    {
      "id": "out_abswarp",
      "name": "Out abswarp",
      "type": "Flag",
      "value-key": "[OUT_ABSWARP]",
      "command-line-flag": "--absout",
      "description": "If set it indicates that the warps in --out should be absolute, i.e. the values in --out are displacements from the coordinates in --ref.",
      "optional": true
    },
    {
      "id": "out_relwarp",
      "name": "Out relwarp",
      "type": "Flag",
      "value-key": "[OUT_RELWARP]",
      "command-line-flag": "--relout",
      "description": "If set it indicates that the warps in --out should be relative, i.e. the values in --out are displacements from the coordinates in --ref.",
      "optional": true
    },
    {
      "id": "output_type",
      "name": "Output type",
      "type": "String",
      "value-key": "[OUTPUT_TYPE]",
      "description": "'nifti' or 'nifti_pair' or 'nifti_gz' or 'nifti_pair_gz'. Fsl output type.",
      "optional": true,
      "value-choices": ["NIFTI", "NIFTI_PAIR", "NIFTI_GZ", "NIFTI_PAIR_GZ"]
    },
    {
      "id": "postmat",
      "name": "Postmat",
      "type": "File",
      "value-key": "[POSTMAT]",
      "command-line-flag": "--postmat",
      "command-line-flag-separator": "=",
      "description": "Name of file containing an affine transform (applied last). it could e.g. be an affine transform that maps the mni152-space into a better approximation to the talairach-space (if indeed there is one).",
      "optional": true
    },
    {
      "id": "premat",
      "name": "Premat",
      "type": "File",
      "value-key": "[PREMAT]",
      "command-line-flag": "--premat",
      "command-line-flag-separator": "=",
      "description": "Filename for pre-transform (affine matrix).",
      "optional": true
    },
    {
      "id": "reference",
      "name": "Reference",
      "type": "File",
      "value-key": "[REFERENCE]",
      "command-line-flag": "--ref",
      "command-line-flag-separator": "=",
      "description": "Name of a file in target space of the full transform.",
      "optional": false
    },
    {
      "id": "relwarp",
      "name": "Relwarp",
      "type": "Flag",
      "value-key": "[RELWARP]",
      "command-line-flag": "--rel",
      "description": "If set it indicates that the warps in --warp1/2 should be interpreted as relative. i.e. the values in --warp1/2 are displacements from the coordinates in the next space.",
      "optional": true
    },
    {
      "id": "shift_direction",
      "name": "Shift direction",
      "type": "String",
      "value-key": "[SHIFT_DIRECTION]",
      "command-line-flag": "--shiftdir",
      "command-line-flag-separator": "=",
      "description": "'y-' or 'y' or 'x' or 'x-' or 'z' or 'z-'. Indicates the direction that the distortions from --shiftmap goes. it depends on the direction and polarity of the phase-encoding in the epi sequence.",
      "optional": true,
      "requires-inputs": ["shift_in_file"],
      "value-choices": ["y-", "y", "x", "x-", "z", "z-"]
    },
    {
      "id": "shift_in_file",
      "name": "Shift in file",
      "type": "File",
      "value-key": "[SHIFT_IN_FILE]",
      "command-line-flag": "--shiftmap",
      "command-line-flag-separator": "=",
      "description": "Name of file containing a \"shiftmap\", a non-linear transform with displacements only in one direction (applied first, before premat). this would typically be a fieldmap that has been pre-processed using fugue that maps a subjects functional (epi) data onto an undistorted space (i.e. a space that corresponds to his/her true anatomy).",
      "optional": true
    },
    {
      "id": "warp1",
      "name": "Warp1",
      "type": "File",
      "value-key": "[WARP1]",
      "command-line-flag": "--warp1",
      "command-line-flag-separator": "=",
      "description": "Name of file containing initial warp-fields/coefficients (follows premat). this could e.g. be a fnirt-transform from a subjects structural scan to an average of a group of subjects.",
      "optional": true
    },
    {
      "id": "warp2",
      "name": "Warp2",
      "type": "File",
      "value-key": "[WARP2]",
      "command-line-flag": "--warp2",
      "command-line-flag-separator": "=",
      "description": "Name of file containing secondary warp-fields/coefficients (after warp1/midmat but before postmat). this could e.g. be a fnirt-transform from the average of a group of subjects to some standard space (e.g. mni152).",
      "optional": true
    }
  ],
  "output-files": [
    {
      "name": "Out file",
      "id": "out_file",
      "optional": true,
      "description": "Name of output file, containing warps that are the combination of all those given as arguments. the format of this will be a field-file (rather than spline coefficients) with any affine components included.",
      "path-template": "[REFERENCE]_concatwarp",
      "value-key": "[OUT_FILE]",
      "command-line-flag": "--out",
      "command-line-flag-separator": "="
    },
    {
      "name": "Out file",
      "id": "out_file",
      "path-template": "out_file",
      "optional": true,
      "description": "Name of output file, containing the warp as field or coefficients."
    }
  ],
  "groups": [
    {
      "id": "mutex_group",
      "name": "Mutex group",
      "members": ["relwarp", "abswarp"],
      "mutually-exclusive": true
    },
    {
      "id": "mutex_group_2",
      "name": "Mutex group 2",
      "members": ["out_abswarp", "out_relwarp"],
      "mutually-exclusive": true
    }
  ],
  "tool-version": "6.0.4",
  "schema-version": "0.5",
  "container-image": {
    "type": "docker",
    "image": "brainlife/fsl:6.0.4-patched2"
  },
  "tags": {
    "domain": "neuroinformatics",
    "source": "nipype-interface"
  }
}
