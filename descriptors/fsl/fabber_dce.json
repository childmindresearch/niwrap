{
  "tool-version": "6.0.5",
  "name": "Fabber DCE",
  "author": "FMRIB Analysis Group, University of Oxford",
  "descriptor-url": "https://example.com/fabber_dce_descriptor.json",
  "description": "Fabber DCE analysis tool for model-based analysis of dynamic contrast-enhanced imaging data.",
  "url": "https://fabber-core.readthedocs.io/",
  "command-line": "fabber [MODEL] [METHOD] [DATA] --output [OUTPUT_DIR] [OPTIONS]",
  "container-image": {
    "image": "mcin/fsl:6.0.5",
    "type": "docker"
  },
  "inputs": [
    {
      "command-line-flag": "--output",
      "description": "Directory for output files (including logfile)",
      "value-key": "[OUTPUT_DIR]",
      "type": "String",
      "optional": false,
      "id": "output_directory",
      "name": "Output Directory"
    },
    {
      "command-line-flag": "--method",
      "description": "Inference method to use",
      "value-key": "[METHOD]",
      "type": "String",
      "optional": false,
      "id": "inference_method",
      "name": "Inference Method"
    },
    {
      "command-line-flag": "--model",
      "description": "Forward model to use",
      "value-key": "[MODEL]",
      "type": "String",
      "optional": false,
      "id": "forward_model",
      "name": "Forward Model"
    },
    {
      "command-line-flag": "--data",
      "description": "Single input data file",
      "value-key": "[DATA]",
      "type": "File",
      "optional": false,
      "id": "input_data",
      "name": "Input Data File"
    },
    {
      "command-line-flag": "--help",
      "description": "Print this usage message",
      "value-key": "[HELP]",
      "type": "Flag",
      "optional": true,
      "id": "help_flag",
      "name": "Help Flag"
    },
    {
      "command-line-flag": "--listmethods",
      "description": "List all known inference methods",
      "value-key": "[LISTMETHODS]",
      "type": "Flag",
      "optional": true,
      "id": "list_methods",
      "name": "List Inference Methods"
    },
    {
      "command-line-flag": "--listmodels",
      "description": "List all known forward models",
      "value-key": "[LISTMODELS]",
      "type": "Flag",
      "optional": true,
      "id": "list_models",
      "name": "List Forward Models"
    },
    {
      "command-line-flag": "--listparams",
      "description": "List model parameters (requires model configuration options to be given)",
      "value-key": "[LISTPARAMS]",
      "type": "Flag",
      "optional": true,
      "id": "list_params",
      "name": "List Model Parameters"
    },
    {
      "command-line-flag": "--descparams",
      "description": "Describe model parameters (name, description, units) - requires model configuration options to be given",
      "value-key": "[DESCPARAMS]",
      "type": "Flag",
      "optional": true,
      "id": "describe_params",
      "name": "Describe Model Parameters"
    },
    {
      "command-line-flag": "--listoutputs",
      "description": "List additional model outputs (requires model configuration options to be given)",
      "value-key": "[LISTOUTPUTS]",
      "type": "Flag",
      "optional": true,
      "id": "list_outputs",
      "name": "List Additional Outputs"
    },
    {
      "command-line-flag": "--evaluate",
      "description": "Evaluate model. Set to name of output required or blank for default output. Requires model configuration options, --evaluate-params and --evaluate-nt",
      "value-key": "[EVALUATE]",
      "type": "String",
      "optional": true,
      "id": "evaluate_model",
      "name": "Evaluate Model"
    },
    {
      "command-line-flag": "--evaluate-params",
      "description": "List of parameter values for evaluation",
      "value-key": "[EVALUATE_PARAMS]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "evaluate_params",
      "name": "Evaluation Parameters"
    },
    {
      "command-line-flag": "--evaluate-nt",
      "description": "Number of time points for evaluation - must be consistent with model options where appropriate",
      "value-key": "[EVALUATE_NT]",
      "type": "Number",
      "optional": true,
      "id": "evaluate_nt",
      "name": "Evaluation Time Points"
    },
    {
      "command-line-flag": "--simple-output",
      "description": "Instead of usual output, simply output series of lines each giving progress as percentage",
      "value-key": "[SIMPLE_OUTPUT]",
      "type": "Flag",
      "optional": true,
      "id": "simple_output",
      "name": "Simple Output"
    },
    {
      "command-line-flag": "--overwrite",
      "description": "If set will overwrite existing output. If not set, new output directories will be created by appending '+' to the directory name",
      "value-key": "[OVERWRITE]",
      "type": "Flag",
      "optional": true,
      "id": "overwrite",
      "name": "Overwrite Existing Output"
    },
    {
      "command-line-flag": "--link-to-latest",
      "description": "Try to create a link to the most recent output directory with the prefix _latest",
      "value-key": "[LINK_TO_LATEST]",
      "type": "Flag",
      "optional": true,
      "id": "link_to_latest",
      "name": "Link To Latest Output Directory"
    },
    {
      "command-line-flag": "--loadmodels",
      "description": "Load models dynamically from the specified filename, which should be a DLL/shared library",
      "value-key": "[LOADMODELS]",
      "type": "File",
      "optional": true,
      "id": "load_models",
      "name": "Load Models"
    },
    {
      "command-line-flag": "--data<n>",
      "description": "Specify multiple data files for n=1, 2, 3...",
      "value-key": "[DATA<n>]",
      "type": "File",
      "list": true,
      "optional": true,
      "id": "multiple_data",
      "name": "Multiple Data Files"
    },
    {
      "command-line-flag": "--data-order",
      "description": "If multiple data files are specified, how they will be handled: concatenate = one after the other, interleave = first record from each file, then second, etc.",
      "value-key": "[DATA_ORDER]",
      "type": "String",
      "optional": true,
      "default-value": "interleave",
      "id": "data_order",
      "name": "Data Order"
    },
    {
      "command-line-flag": "--mask",
      "description": "Mask file. Inference will only be performed where mask value > 0",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true,
      "id": "mask",
      "name": "Mask File"
    },
    {
      "command-line-flag": "--mt<n>",
      "description": "List of masked time points, indexed from 1. These will be ignored in the parameter updates",
      "value-key": "[MT<n>]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "masked_time_points",
      "name": "Masked Time Points"
    },
    {
      "command-line-flag": "--suppdata",
      "description": "'Supplemental' timeseries data, required for some models",
      "value-key": "[SUPPDATA]",
      "type": "File",
      "optional": true,
      "id": "supplemental_data",
      "name": "Supplemental Data"
    },
    {
      "command-line-flag": "--dump-param-names",
      "description": "Write the file paramnames.txt containing the names of the model parameters",
      "value-key": "[DUMP_PARAM_NAMES]",
      "type": "Flag",
      "optional": true,
      "id": "dump_param_names",
      "name": "Dump Parameter Names"
    },
    {
      "command-line-flag": "--save-model-fit",
      "description": "Output the model prediction as a 4D volume",
      "value-key": "[SAVE_MODEL_FIT]",
      "type": "Flag",
      "optional": true,
      "id": "save_model_fit",
      "name": "Save Model Fit"
    },
    {
      "command-line-flag": "--save-residuals",
      "description": "Output the residuals (difference between the data and the model prediction)",
      "value-key": "[SAVE_RESIDUALS]",
      "type": "Flag",
      "optional": true,
      "id": "save_residuals",
      "name": "Save Residuals"
    },
    {
      "command-line-flag": "--save-model-extras",
      "description": "Output any additional model-specific timeseries data",
      "value-key": "[SAVE_MODEL_EXTRAS]",
      "type": "Flag",
      "optional": true,
      "id": "save_model_extras",
      "name": "Save Model Extras"
    },
    {
      "command-line-flag": "--save-mvn",
      "description": "Output the final MVN distributions.",
      "value-key": "[SAVE_MVN]",
      "type": "Flag",
      "optional": true,
      "id": "save_mvn",
      "name": "Save MVN Distributions"
    },
    {
      "command-line-flag": "--save-mean",
      "description": "Output the parameter means.",
      "value-key": "[SAVE_MEAN]",
      "type": "Flag",
      "optional": true,
      "id": "save_mean",
      "name": "Save Parameter Means"
    },
    {
      "command-line-flag": "--save-std",
      "description": "Output the parameter standard deviations.",
      "value-key": "[SAVE_STD]",
      "type": "Flag",
      "optional": true,
      "id": "save_std",
      "name": "Save Parameter Standard Deviations"
    },
    {
      "command-line-flag": "--save-var",
      "description": "Output the parameter variances.",
      "value-key": "[SAVE_VAR]",
      "type": "Flag",
      "optional": true,
      "id": "save_variances",
      "name": "Save Parameter Variances"
    },
    {
      "command-line-flag": "--save-zstat",
      "description": "Output the parameter Z-stats.",
      "value-key": "[SAVE_ZSTAT]",
      "type": "Flag",
      "optional": true,
      "id": "save_zstat",
      "name": "Save Parameter Z-Stats"
    },
    {
      "command-line-flag": "--save-noise-mean",
      "description": "Output the noise means. The noise distribution inferred is the precision of a Gaussian noise source.",
      "value-key": "[SAVE_NOISE_MEAN]",
      "type": "Flag",
      "optional": true,
      "id": "save_noise_mean",
      "name": "Save Noise Means"
    },
    {
      "command-line-flag": "--save-noise-std",
      "description": "Output the noise standard deviations.",
      "value-key": "[SAVE_NOISE_STD]",
      "type": "Flag",
      "optional": true,
      "id": "save_noise_std",
      "name": "Save Noise Standard Deviations"
    },
    {
      "command-line-flag": "--save-free-energy",
      "description": "Output the free energy, if calculated.",
      "value-key": "[SAVE_FREE_ENERGY]",
      "type": "Flag",
      "optional": true,
      "id": "save_free_energy",
      "name": "Save Free Energy"
    },
    {
      "command-line-flag": "--optfile",
      "description": "File containing additional options, one per line, in the same form as specified on the command line",
      "value-key": "[OPTFILE]",
      "type": "File",
      "optional": true,
      "id": "option_file",
      "name": "Option File"
    },
    {
      "command-line-flag": "--debug",
      "description": "Output large amounts of debug information. ONLY USE WITH VERY SMALL NUMBERS OF VOXELS",
      "value-key": "[DEBUG]",
      "type": "Flag",
      "optional": true,
      "id": "debug",
      "name": "Debug Flag"
    }
  ],
  "schema-version": "0.5",
  "groups": [
    {
      "description": "General options for running Fabber DCE",
      "id": "general_options",
      "members": [
        "help_flag",
        "list_methods",
        "list_models",
        "list_params",
        "describe_params",
        "list_outputs",
        "evaluate_model",
        "evaluate_params",
        "evaluate_nt",
        "simple_output",
        "output_directory",
        "overwrite",
        "link_to_latest",
        "inference_method",
        "forward_model",
        "load_models",
        "input_data",
        "multiple_data",
        "data_order",
        "mask",
        "masked_time_points",
        "supplemental_data",
        "dump_param_names",
        "save_model_fit",
        "save_residuals",
        "save_model_extras",
        "save_mvn",
        "save_mean",
        "save_std",
        "save_variances",
        "save_zstat",
        "save_noise_mean",
        "save_noise_std",
        "save_free_energy",
        "option_file",
        "debug"
      ],
      "name": "General Options"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_DIR]/*",
      "description": "Files generated by Fabber DCE",
      "optional": false,
      "id": "output_files",
      "name": "Output Files"
    }
  ]
}
