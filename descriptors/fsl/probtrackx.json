{
  "tool-version": "6.0.4",
  "name": "probtrackx",
  "author": "FMRIB Analysis Group, University of Oxford",
  "descriptor-url": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FDT/UserGuide/",
  "description": "Streamlines tracking algorithm for probabilistic tractography",
  "url": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki",
  "command-line": "probtrackx [SAMPLES] [MASK] [SEED] [OUT] [VERBOSE] [TARGETMASKS] [MASK2] [WAYPOINTS] [NETWORK] [MESH] [SEEDREF] [DIR] [FORCEDIR] [OPD] [PD] [OS2T] [AVOID] [STOP] [XFM] [INVXFM] [NSAMPLES] [NSTEPS] [DISTTHRESH] [CTHR] [FIBTHRESH] [SAMPVOX] [STEPLENGTH] [LOOPCHECK] [USEF] [RANDFIB] [FIBST] [MODEULER] [RSEED] [S2TASTTEXT]",
  "container-image": {
    "type": "docker",
    "image": "brainlife/fsl:6.0.4-patched2"
  },
  "inputs": [
    {
      "command-line-flag": "-s",
      "description": "Basename for samples files",
      "value-key": "[SAMPLES]",
      "type": "File",
      "optional": false,
      "id": "samples",
      "name": "Samples file basename"
    },
    {
      "command-line-flag": "-m",
      "description": "Bet binary mask file in diffusion space",
      "value-key": "[MASK]",
      "type": "File",
      "optional": false,
      "id": "mask",
      "name": "Mask file"
    },
    {
      "command-line-flag": "-x",
      "description": "Seed volume, or voxel, or ascii file with multiple volumes, or freesurfer label file",
      "value-key": "[SEED]",
      "type": "File",
      "optional": false,
      "id": "seed",
      "name": "Seed file"
    },
    {
      "command-line-flag": "-o",
      "description": "Output file (default='fdt_paths')",
      "value-key": "[OUT]",
      "type": "String",
      "optional": false,
      "id": "out",
      "name": "Output file",
      "default-value": "fdt_paths"
    },
    {
      "command-line-flag": "--verbose",
      "description": "Verbose level, [0-2]",
      "value-key": "[VERBOSE]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "verbose",
      "name": "Verbose level",
      "maximum": 2,
      "minimum": 0
    },
    {
      "command-line-flag": "--targetmasks",
      "description": "File containing a list of target masks - required for seeds_to_targets classification",
      "value-key": "[TARGETMASKS]",
      "type": "File",
      "optional": true,
      "id": "targetmasks",
      "name": "Target masks list file"
    },
    {
      "command-line-flag": "--mask2",
      "description": "Second mask in twomask_symm mode.",
      "value-key": "[MASK2]",
      "type": "File",
      "optional": true,
      "id": "mask2",
      "name": "Second mask file"
    },
    {
      "command-line-flag": "--waypoints",
      "description": "Waypoint mask or ascii list of waypoint masks - only keep paths going through ALL the masks",
      "value-key": "[WAYPOINTS]",
      "type": "File",
      "optional": true,
      "id": "waypoints",
      "name": "Waypoints mask file"
    },
    {
      "command-line-flag": "--network",
      "description": "Activate network mode - only keep paths going through at least one seed mask (required if multiple seed masks)",
      "value-key": "[NETWORK]",
      "type": "Flag",
      "optional": true,
      "id": "network",
      "name": "Network mode flag"
    },
    {
      "command-line-flag": "--mesh",
      "description": "Freesurfer-type surface descriptor (in ascii format)",
      "value-key": "[MESH]",
      "type": "File",
      "optional": true,
      "id": "mesh",
      "name": "Mesh descriptor file"
    },
    {
      "command-line-flag": "--seedref",
      "description": "Reference vol to define seed space in simple mode - diffusion space assumed if absent",
      "value-key": "[SEEDREF]",
      "type": "File",
      "optional": true,
      "id": "seedref",
      "name": "Seed reference volume"
    },
    {
      "command-line-flag": "--dir",
      "description": "Directory to put the final volumes in - code makes this directory - default='logdir'",
      "value-key": "[DIR]",
      "type": "String",
      "optional": true,
      "id": "dir",
      "name": "Output directory",
      "default-value": "logdir"
    },
    {
      "command-line-flag": "--forcedir",
      "description": "Use the actual directory name given - i.e. don't add + to make a new directory",
      "value-key": "[FORCEDIR]",
      "type": "Flag",
      "optional": true,
      "id": "forcedir",
      "name": "Force directory name flag"
    },
    {
      "command-line-flag": "--opd",
      "description": "Output path distribution",
      "value-key": "[OPD]",
      "type": "Flag",
      "optional": true,
      "id": "opd",
      "name": "Output path distribution flag"
    },
    {
      "command-line-flag": "--pd",
      "description": "Correct path distribution for the length of the pathways",
      "value-key": "[PD]",
      "type": "Flag",
      "optional": true,
      "id": "pd",
      "name": "Correct path distribution flag"
    },
    {
      "command-line-flag": "--os2t",
      "description": "Output seeds to targets",
      "value-key": "[OS2T]",
      "type": "Flag",
      "optional": true,
      "id": "os2t",
      "name": "Output seeds to targets flag"
    },
    {
      "command-line-flag": "--avoid",
      "description": "Reject pathways passing through locations given by this mask",
      "value-key": "[AVOID]",
      "type": "File",
      "optional": true,
      "id": "avoid",
      "name": "Avoid mask file"
    },
    {
      "command-line-flag": "--stop",
      "description": "Stop tracking at locations given by this mask file",
      "value-key": "[STOP]",
      "type": "File",
      "optional": true,
      "id": "stop",
      "name": "Stop mask file"
    },
    {
      "command-line-flag": "--xfm",
      "description": "Transform taking seed space to DTI space (either FLIRT matrix or FNIRT warpfield) - default is identity",
      "value-key": "[XFM]",
      "type": "File",
      "optional": true,
      "id": "xfm",
      "name": "Seed-to-DTI transform"
    },
    {
      "command-line-flag": "--invxfm",
      "description": "Transform taking DTI space to seed space (compulsory when using a warpfield for seeds_to_dti)",
      "value-key": "[INVXFM]",
      "type": "File",
      "optional": true,
      "id": "invxfm",
      "name": "DTI-to-seed transform"
    },
    {
      "command-line-flag": "-P",
      "description": "Number of samples - default=5000",
      "value-key": "[NSAMPLES]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "nsamples",
      "name": "Number of samples",
      "default-value": 5000
    },
    {
      "command-line-flag": "-S",
      "description": "Number of steps per sample - default=2000",
      "value-key": "[NSTEPS]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "nsteps",
      "name": "Number of steps per sample",
      "default-value": 2000
    },
    {
      "command-line-flag": "--distthresh",
      "description": "Discards samples shorter than this threshold (in mm - default=0)",
      "value-key": "[DISTTHRESH]",
      "type": "Number",
      "integer": false,
      "optional": true,
      "id": "distthresh",
      "name": "Distance threshold",
      "default-value": 0
    },
    {
      "command-line-flag": "-c",
      "description": "Curvature threshold - default=0.2",
      "value-key": "[CTHR]",
      "type": "Number",
      "integer": false,
      "optional": true,
      "id": "cthr",
      "name": "Curvature threshold",
      "default-value": 0.2
    },
    {
      "command-line-flag": "--fibthresh",
      "description": "Volume fraction before subsidary fibre orientations are considered - default=0.01",
      "value-key": "[FIBTHRESH]",
      "type": "Number",
      "integer": false,
      "optional": true,
      "id": "fibthresh",
      "name": "Fibre volume fraction threshold",
      "default-value": 0.01
    },
    {
      "command-line-flag": "--sampvox",
      "description": "Sample random points within seed voxels",
      "value-key": "[SAMPVOX]",
      "type": "Flag",
      "optional": true,
      "id": "sampvox",
      "name": "Sample voxels flag"
    },
    {
      "command-line-flag": "--steplength",
      "description": "Steplength in mm - default=0.5",
      "value-key": "[STEPLENGTH]",
      "type": "Number",
      "integer": false,
      "optional": true,
      "id": "steplength",
      "name": "Step length",
      "default-value": 0.5
    },
    {
      "command-line-flag": "-l",
      "description": "Perform loopchecks on paths - slower, but allows lower curvature threshold",
      "value-key": "[LOOPCHECK]",
      "type": "Flag",
      "optional": true,
      "id": "loopcheck",
      "name": "Loop check flag"
    },
    {
      "command-line-flag": "-f",
      "description": "Use anisotropy to constrain tracking",
      "value-key": "[USEF]",
      "type": "Flag",
      "optional": true,
      "id": "usef",
      "name": "Use anisotropy flag"
    },
    {
      "command-line-flag": "--randfib",
      "description": "Default 0. Set to 1 to randomly sample initial fibres (with f > fibthresh). Set to 2 to sample in proportion fibres (with f>fibthresh) to f. Set to 3 to sample ALL populations at random (even if f<fibthresh)",
      "value-key": "[RANDFIB]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "randfib",
      "name": "Random fibres sampling mode",
      "default-value": 0
    },
    {
      "command-line-flag": "--fibst",
      "description": "Force a starting fibre for tracking - default=1, i.e. first fibre orientation. Only works if randfib==0",
      "value-key": "[FIBST]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "fibst",
      "name": "Starting fibre",
      "default-value": 1
    },
    {
      "command-line-flag": "--modeuler",
      "description": "Use modified euler streamlining",
      "value-key": "[MODEULER]",
      "type": "Flag",
      "optional": true,
      "id": "modeuler",
      "name": "Modified euler streamlining flag"
    },
    {
      "command-line-flag": "--rseed",
      "description": "Random seed",
      "value-key": "[RSEED]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "rseed",
      "name": "Random seed"
    },
    {
      "command-line-flag": "--s2tastext",
      "description": "Output seed-to-target counts as a text file (useful when seeding from a mesh)",
      "value-key": "[S2TASTTEXT]",
      "type": "Flag",
      "optional": true,
      "id": "s2tastext",
      "name": "Seed-to-target text output flag"
    }
  ],
  "schema-version": "0.5",
  "groups": [
    {
      "description": "Optional miscellaneous parameters when running probtrackx",
      "id": "compulsory_params_group",
      "members": ["samples", "mask", "seed", "out"],
      "name": "Compulsory Arguments Group"
    },
    {
      "description": "Specify additional optional parameters",
      "id": "optional_params_group",
      "members": [
        "verbose",
        "targetmasks",
        "mask2",
        "waypoints",
        "network",
        "mesh",
        "seedref",
        "dir",
        "forcedir",
        "opd",
        "pd",
        "os2t",
        "avoid",
        "stop",
        "xfm",
        "invxfm",
        "nsamples",
        "nsteps",
        "distthresh",
        "cthr",
        "fibthresh",
        "sampvox",
        "steplength",
        "loopcheck",
        "usef",
        "randfib",
        "fibst",
        "modeuler",
        "rseed",
        "s2tastext"
      ],
      "name": "Optional Arguments Group"
    }
  ]
}
