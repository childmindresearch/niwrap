{
  "tool-version": "6.0.5",
  "name": "fabber_dualecho",
  "author": "FMRIB Analysis Group, University of Oxford",
  "description": "FMRIB's Advanced Bayesian Estimation and Inference tool for FMRI analysis.",
  "url": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki",
  "command-line": "fabber_dualecho [OUTPUT_DIRECTORY] --method [METHOD] --model [MODEL] --data [DATA] [DATA_ORDER] [MASK_FILE] [MT_LIST] [SUPP_DATA] [OPTIONS_FILE] [HELP_FLAG] [LIST_METHODS_FLAG] [LIST_MODELS_FLAG] [LIST_PARAMS_FLAG] [DESC_PARAMS_FLAG] [LIST_OUTPUTS_FLAG] [EVALUATE] [EVALUATE_PARAMS] [EVALUATE_NT] [SIMPLE_OUTPUT_FLAG] [OVERWRITE_FLAG] [LINK_TO_LATEST_FLAG] [LOAD_MODELS] [DUMP_PARAM_NAMES_FLAG] [SAVE_MODEL_FIT_FLAG] [SAVE_RESIDUALS_FLAG] [SAVE_MODEL_EXTRAS_FLAG] [SAVE_MVN_FLAG] [SAVE_MEAN_FLAG] [SAVE_STD_FLAG] [SAVE_VAR_FLAG] [SAVE_ZSTAT_FLAG] [SAVE_NOISE_MEAN_FLAG] [SAVE_NOISE_STD_FLAG] [SAVE_FREE_ENERGY_FLAG] [DEBUG_FLAG]",
  "container-image": {
    "image": "mcin/fsl:6.0.5",
    "type": "docker"
  },
  "inputs": [
    {
      "description": "Directory for output files (including logfile)",
      "value-key": "[OUTPUT_DIRECTORY]",
      "type": "String",
      "optional": false,
      "id": "output_directory",
      "name": "Output Directory"
    },
    {
      "command-line-flag": "--method",
      "description": "Use this inference method",
      "value-key": "[METHOD]",
      "type": "String",
      "optional": false,
      "id": "method",
      "name": "Inference Method"
    },
    {
      "command-line-flag": "--model",
      "description": "Use this forward model",
      "value-key": "[MODEL]",
      "type": "String",
      "optional": false,
      "id": "model",
      "name": "Forward Model"
    },
    {
      "command-line-flag": "--data",
      "description": "Specify a single input data file",
      "value-key": "[DATA]",
      "type": "File",
      "optional": false,
      "id": "data",
      "name": "Input Data"
    },
    {
      "command-line-flag": "--data-order",
      "description": "If multiple data files are specified, how they will be handled: concatenate = one after the other, interleave = first record from each file, then second, etc.",
      "value-key": "[DATA_ORDER]",
      "type": "String",
      "optional": true,
      "id": "data_order",
      "name": "Data Order",
      "default-value": "interleave"
    },
    {
      "command-line-flag": "--mask",
      "description": "Mask file. Inference will only be performed where mask value > 0",
      "value-key": "[MASK_FILE]",
      "type": "File",
      "optional": true,
      "id": "mask_file",
      "name": "Mask File"
    },
    {
      "command-line-flag": "--mt<n>",
      "description": "List of masked time points, indexed from 1. These will be ignored in the parameter updates",
      "value-key": "[MT_LIST]",
      "type": "Number",
      "optional": true,
      "id": "mt_list",
      "name": "Masked Time Points"
    },
    {
      "command-line-flag": "--suppdata",
      "description": "'Supplemental' timeseries data, required for some models",
      "value-key": "[SUPP_DATA]",
      "type": "File",
      "optional": true,
      "id": "supp_data",
      "name": "Supplemental Data"
    },
    {
      "command-line-flag": "--optfile",
      "description": "File containing additional options, one per line, in the same form as specified on the command line",
      "value-key": "[OPTIONS_FILE]",
      "type": "File",
      "optional": true,
      "id": "options_file",
      "name": "Options File"
    },
    {
      "command-line-flag": "--help",
      "description": "Print this usage method. If given with --method or --model, display relevant method/model usage information",
      "value-key": "[HELP_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "help_flag",
      "name": "Help Flag"
    },
    {
      "command-line-flag": "--listmethods",
      "description": "List all known inference methods",
      "value-key": "[LIST_METHODS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "list_methods_flag",
      "name": "List Methods Flag"
    },
    {
      "command-line-flag": "--listmodels",
      "description": "List all known forward models",
      "value-key": "[LIST_MODELS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "list_models_flag",
      "name": "List Models Flag"
    },
    {
      "command-line-flag": "--listparams",
      "description": "List model parameters (requires model configuration options to be given)",
      "value-key": "[LIST_PARAMS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "list_params_flag",
      "name": "List Parameters Flag"
    },
    {
      "command-line-flag": "--descparams",
      "description": "Descript model parameters (name, description, units) - requires model configuration options to be given. Note that not all models provide parameter descriptions",
      "value-key": "[DESC_PARAMS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "desc_params_flag",
      "name": "Describe Parameters Flag"
    },
    {
      "command-line-flag": "--listoutputs",
      "description": "List additional model outputs (requires model configuration options to be given)",
      "value-key": "[LIST_OUTPUTS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "list_outputs_flag",
      "name": "List Outputs Flag"
    },
    {
      "command-line-flag": "--evaluate",
      "description": "Evaluate model. Set to name of output required or blank for default output. Requires model configuration options, --evaluate-params and --evaluate-nt",
      "value-key": "[EVALUATE]",
      "type": "String",
      "optional": true,
      "id": "evaluate",
      "name": "Evaluate Model"
    },
    {
      "command-line-flag": "--evaluate-params",
      "description": "List of parameter values for evaluation",
      "value-key": "[EVALUATE_PARAMS]",
      "type": "String",
      "optional": true,
      "id": "evaluate_params",
      "name": "Evaluate Parameters"
    },
    {
      "command-line-flag": "--evaluate-nt",
      "description": "Number of time points for evaluation - must be consistent with model options where appropriate",
      "value-key": "[EVALUATE_NT]",
      "type": "Number",
      "optional": true,
      "id": "evaluate_nt",
      "name": "Evaluate Number of Time Points"
    },
    {
      "command-line-flag": "--simple-output",
      "description": "Instead of usual standard output, simply output series of lines each giving progress as percentage",
      "value-key": "[SIMPLE_OUTPUT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "simple_output_flag",
      "name": "Simple Output Flag"
    },
    {
      "command-line-flag": "--overwrite",
      "description": "If set will overwrite existing output. If not set, new output directories will be created by appending '+' to the directory name",
      "value-key": "[OVERWRITE_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "overwrite_flag",
      "name": "Overwrite Flag"
    },
    {
      "command-line-flag": "--link-to-latest",
      "description": "Try to create a link to the most recent output directory with the prefix _latest",
      "value-key": "[LINK_TO_LATEST_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "link_to_latest_flag",
      "name": "Link to Latest Flag"
    },
    {
      "command-line-flag": "--loadmodels",
      "description": "Load models dynamically from the specified filename, which should be a DLL/shared library",
      "value-key": "[LOAD_MODELS]",
      "type": "File",
      "optional": true,
      "id": "load_models",
      "name": "Load Models"
    },
    {
      "command-line-flag": "--dump-param-names",
      "description": "Write the file paramnames.txt containing the names of the model parameters",
      "value-key": "[DUMP_PARAM_NAMES_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "dump_param_names_flag",
      "name": "Dump Parameter Names Flag"
    },
    {
      "command-line-flag": "--save-model-fit",
      "description": "Output the model prediction as a 4d volume",
      "value-key": "[SAVE_MODEL_FIT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_model_fit_flag",
      "name": "Save Model Fit Flag"
    },
    {
      "command-line-flag": "--save-residuals",
      "description": "Output the residuals (difference between the data and the model prediction)",
      "value-key": "[SAVE_RESIDUALS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_residuals_flag",
      "name": "Save Residuals Flag"
    },
    {
      "command-line-flag": "--save-model-extras",
      "description": "Output any additional model-specific timeseries data",
      "value-key": "[SAVE_MODEL_EXTRAS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_model_extras_flag",
      "name": "Save Model Extras Flag"
    },
    {
      "command-line-flag": "--save-mvn",
      "description": "Output the final MVN distributions.",
      "value-key": "[SAVE_MVN_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_mvn_flag",
      "name": "Save MVN Flag"
    },
    {
      "command-line-flag": "--save-mean",
      "description": "Output the parameter means.",
      "value-key": "[SAVE_MEAN_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_mean_flag",
      "name": "Save Means Flag"
    },
    {
      "command-line-flag": "--save-std",
      "description": "Output the parameter standard deviations.",
      "value-key": "[SAVE_STD_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_std_flag",
      "name": "Save Standard Deviation Flag"
    },
    {
      "command-line-flag": "--save-var",
      "description": "Output the parameter variances.",
      "value-key": "[SAVE_VAR_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_var_flag",
      "name": "Save Variance Flag"
    },
    {
      "command-line-flag": "--save-zstat",
      "description": "Output the parameter Zstats.",
      "value-key": "[SAVE_ZSTAT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_zstat_flag",
      "name": "Save Z-statistics Flag"
    },
    {
      "command-line-flag": "--save-noise-mean",
      "description": "Output the noise means. The noise distribution inferred is the precision of a Gaussian noise source",
      "value-key": "[SAVE_NOISE_MEAN_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_noise_mean_flag",
      "name": "Save Noise Mean Flag"
    },
    {
      "command-line-flag": "--save-noise-std",
      "description": "Output the noise standard deviations.",
      "value-key": "[SAVE_NOISE_STD_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_noise_std_flag",
      "name": "Save Noise Standard Deviation Flag"
    },
    {
      "command-line-flag": "--save-free-energy",
      "description": "Output the free energy, if calculated.",
      "value-key": "[SAVE_FREE_ENERGY_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "save_free_energy_flag",
      "name": "Save Free Energy Flag"
    },
    {
      "command-line-flag": "--debug",
      "description": "Output large amounts of debug information. ONLY USE WITH VERY SMALL NUMBERS OF VOXELS",
      "value-key": "[DEBUG_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "debug_flag",
      "name": "Debug Flag"
    }
  ],
  "schema-version": "0.5",
  "groups": [
    {
      "description": "General options for running Fabber",
      "id": "general_options_group",
      "members": [
        "help_flag",
        "list_methods_flag",
        "list_models_flag",
        "list_params_flag",
        "desc_params_flag",
        "list_outputs_flag",
        "evaluate",
        "evaluate_params",
        "evaluate_nt",
        "simple_output_flag",
        "overwrite_flag",
        "link_to_latest_flag",
        "load_models",
        "dump_param_names_flag",
        "save_model_fit_flag",
        "save_residuals_flag",
        "save_model_extras_flag",
        "save_mvn_flag",
        "save_mean_flag",
        "save_std_flag",
        "save_var_flag",
        "save_zstat_flag",
        "save_noise_mean_flag",
        "save_noise_std_flag",
        "save_free_energy_flag",
        "debug_flag"
      ],
      "name": "General Options"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_DIRECTORY]/*",
      "description": "All output files will be stored in the output directory specified by the user.",
      "optional": true,
      "id": "output_files",
      "name": "Output Files"
    }
  ]
}
